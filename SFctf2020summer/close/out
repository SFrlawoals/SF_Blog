Gadgets information
============================================================
0x00000000004bf945 : adc al, 0 ; add byte ptr [rax + 0x2d], ch ; cmc ; call qword ptr [rax]
0x00000000004297ef : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429859 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049c3a5 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000046aeda : adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000423e68 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042fdd5 : adc al, 0x13 ; jmp rdx
0x000000000042e3c5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000043ff6a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00000000004091a4 : adc al, 0x24 ; call 0x405c94
0x000000000049c09a : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040ea08 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000004c18f4 : adc al, 0x34 ; add byte ptr [rax], al ; mov byte ptr [rdi], bh ; idiv bh ; ret
0x0000000000418cf7 : adc al, 0x41 ; pop rsp ; ret
0x00000000004c2bf4 : adc al, 0x47 ; add byte ptr [rax], al ; call 0x114c241c
0x000000000043bbd0 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x000000000049ec14 : adc al, 0x4a ; add byte ptr [rbp + rax - 0x18], dh ; ret 0xf7f4
0x000000000043f4c8 : adc al, 0x50 ; add byte ptr [rax], al ; ret
0x00000000004c49f4 : adc al, 0x65 ; add byte ptr [rax], al ; in al, 0xf9 ; jmp rax
0x000000000041fe6a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000043f676 : adc al, 0x89 ; ret 0xdaf7
0x0000000000464e7e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042ac80 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004293ae : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042fdd1 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004c81f4 : adc al, 0x9d ; add byte ptr [rax], al ; or rsp, rdi ; call qword ptr [rax]
0x00000000004216b7 : adc al, 0xa ; jmp r10
0x000000000042e533 : adc al, 0xa ; sub eax, edx ; ret
0x00000000004c87f4 : adc al, 0xa3 ; add byte ptr [rax], al ; call 0x114c84f6
0x000000000046aed8 : adc al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000043f458 : adc al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043f4b8 : adc al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000043f518 : adc al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000043f708 : adc al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004015e9 : adc al, 0xdd ; fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x0000000000422b91 : adc al, 0xe ; sub eax, edx ; ret
0x000000000049c47a : adc al, 0xf7 ; add rsp, 8 ; ret
0x00000000004a3888 : adc al, 0xf8 ; call rax
0x00000000004a3b05 : adc al, 0xf9 ; call qword ptr [rax + 0x10fff913]
0x00000000004a3b01 : adc al, 0xf9 ; call qword ptr [rax]
0x00000000004a3d01 : adc al, 0xf9 ; jmp qword ptr [rax + 0x20fff913]
0x00000000004a3cfd : adc al, 0xf9 ; jmp qword ptr [rax]
0x00000000004a3b81 : adc al, 0xf9 ; jmp rdx
0x00000000004c5641 : adc al, 0xfa ; jmp rdx
0x0000000000476a32 : adc al, 3 ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004919be : adc al, 9 ; ret 0xa074
0x00000000004a3710 : adc al, ah ; clc ; call rax
0x0000000000429997 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429a01 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000492eae : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049687f : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040d787 : adc al, ch ; push rbx ; ret
0x000000000047fe5e : adc bh, byte ptr [rcx] ; ret 0x850f
0x0000000000468572 : adc bh, byte ptr [rsi - 0x38] ; add byte ptr [r8 - 0x77], cl ; ret
0x00000000004a3b15 : adc bh, cl ; call qword ptr [rax + 0x10fff911]
0x00000000004a3b11 : adc bh, cl ; call qword ptr [rax]
0x00000000004a3d11 : adc bh, cl ; jmp qword ptr [rax + 0x20fff911]
0x00000000004a3d0d : adc bh, cl ; jmp qword ptr [rax]
0x00000000004a3b91 : adc bh, cl ; jmp rdx
0x00000000004a3798 : adc bl, ah ; clc ; push rax ; in al, 0xf8 ; call rax
0x0000000000426e55 : adc bl, ch ; call 0xffffffffc412f7aa
0x0000000000423925 : adc bl, ch ; call 0xffffffffc43ac27a
0x00000000004a3768 : adc bl, ch ; clc ; call qword ptr [rax]
0x0000000000478fe2 : adc bl, ch ; jno 0x479038 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000483a84 : adc bl, ch ; ret 0x8348
0x00000000004a3548 : adc bl, cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x0000000000426844 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043b506 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b577 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b4d7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b505 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000474760 : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000413166 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000044fc4d : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x00000000004507ab : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000044fc46 : adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000047875f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046aa39 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46aa0d
0x0000000000416b6c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000004717a4 : adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041825e : adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x0000000000440a42 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000410723 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000043faec : adc byte ptr [rax + 0x101], bh ; syscall
0x0000000000478bdc : adc byte ptr [rax + 0x29], cl ; ret
0x000000000045a4ee : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000043b32a : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x000000000044fc47 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000004188b3 : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x000000000041d5fd : adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x0000000000418e45 : adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x0000000000419237 : adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x000000000041d8b6 : adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x000000000042678a : adc byte ptr [rax + 0x43], bl ; add bl, dh ; ret
0x0000000000442f00 : adc byte ptr [rax + 0x4800442e], dh ; mov dword ptr [rax + 8], edx ; ret
0x0000000000478760 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412687 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000048852a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000047967e : adc byte ptr [rax + 1], cl ; ret
0x000000000046aa08 : adc byte ptr [rax + 1], cl ; retf 0x8348
0x000000000046aa07 : adc byte ptr [rax + 1], r9b ; retf 0x8348
0x000000000043fb6e : adc byte ptr [rax + 3], bh ; syscall
0x000000000040043d : adc byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000474ad4 : adc byte ptr [rax - 0x6df0fe06], al ; ret 0x8348
0x0000000000470ce1 : adc byte ptr [rax - 0x73], cl ; int1 ; or byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000042c3c4 : adc byte ptr [rax - 0x73], cl ; jg 0x42c3e1 ; jne 0x42c3b8 ; ret
0x000000000046aff5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004708cc : adc byte ptr [rax - 0x73], cl ; push rsp ; retf 0xeb08
0x000000000046aff4 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000004406b2 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004474c8 : adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447e2b : adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000042c7da : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000409997 : adc byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c97
0x0000000000409240 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405c98
0x0000000000463c07 : adc byte ptr [rax - 0x77], cl ; jo 0x463c25 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464f3c : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x000000000046aa3a : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46aa0c
0x0000000000463bc7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040e3a3 : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416b6d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000485daf : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000048a454 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x000000000041c8a9 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000048abfd : adc byte ptr [rax - 0x77], cl ; retf
0x000000000047d6a9 : adc byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000432abf : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000046e385 : adc byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 1], cl ; retf
0x0000000000438277 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004382b3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400b5a : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000420d73 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041fd4b : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000479bb9 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041825f : adc byte ptr [rax - 0x7d], cl ; retf 0x4d01
0x00000000004bde78 : adc byte ptr [rax - 3], ah ; call qword ptr [rax]
0x000000000046d00c : adc byte ptr [rax], al ; add byte ptr [rax + 0x9e], bh ; syscall
0x0000000000429442 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x0000000000422be0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000422d80 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000042af58 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000042b24c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429ba1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e5aa : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004242e8 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004363c8 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000048cab0 : adc byte ptr [rax], al ; jne 0x48ca81 ; jmp 0x48ca89
0x0000000000418c8a : adc byte ptr [rbp + 0x39], cl ; ret
0x000000000045049c : adc byte ptr [rbp + 0x39], cl ; retf
0x0000000000478b85 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x00000000004bde64 : adc byte ptr [rbp + rdi*8 - 1], 0xd0 ; push rsi ; std ; jmp qword ptr [rax]
0x0000000000426968 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000042c3c8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000440527 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000400c36 : adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x000000000049cf9c : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041ecab : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040fe13 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c0aca : adc byte ptr [rbx + 0xa], cl ; ret
0x0000000000413167 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000416622 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047a887 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x47a8a1 ; ret
0x000000000043e25a : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004071ce : adc byte ptr [rbx - 0x7bf0fd06], al ; retf
0x00000000004bddec : adc byte ptr [rbx - 3], bh ; push rax ; jl 0x4bddf7 ; call rax
0x00000000004a34bc : adc byte ptr [rbx - 8], al ; jmp qword ptr [rax]
0x000000000043ee8d : adc byte ptr [rbx], al ; add cl, ch ; retf 0xfffe
0x00000000004a3b0c : adc byte ptr [rbx], dl ; stc ; call qword ptr [rax + 0x10fff912]
0x0000000000410724 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000044c6f4 : adc byte ptr [rcx + 0x39], cl ; ret
0x0000000000479bbd : adc byte ptr [rcx + 0x39], cl ; retf
0x0000000000450647 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x000000000041fb93 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004622d0 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a3b04 : adc byte ptr [rcx + rdi*8], dl ; call qword ptr [rax + 0x10fff913]
0x000000000049ee48 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040d38c : adc byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000418c37 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000422c13 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000494567 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000043e9d4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000416625 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000420579 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000043eabf : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004a3e3c : adc byte ptr [rdi - 7], dh ; jmp qword ptr [rax]
0x000000000043bde3 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004979db : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004964df : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004976df : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496ddf : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004970df : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004967d7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496a84 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497684 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497984 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497084 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496d84 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000049677c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049580d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049562d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496005 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494f25 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495e25 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044fc4e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00000000004507ac : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000004501cc : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004c72d8 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x00000000004302c9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000048608a : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x0000000000492ead : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042f22b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a3b14 : adc byte ptr [rdx], dl ; stc ; call qword ptr [rax + 0x10fff911]
0x00000000004a3afc : adc byte ptr [rip + 0x1490fff9], dl ; stc ; call qword ptr [rax]
0x000000000042f0da : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042e6d5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042ead5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42eaa9
0x000000000042eb53 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42eb27
0x000000000042efe5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42efb9
0x000000000042f063 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42f037
0x000000000042ead0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eaae
0x000000000042eb4e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eb2c
0x000000000042efe0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42efbe
0x000000000042f05e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f03c
0x0000000000421805 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004272bb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004a3e00 : adc byte ptr [rsi - 7], dh ; jmp qword ptr [rax]
0x000000000049898d : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004919ef : adc byte ptr [rsp - 4], al ; ret
0x0000000000491a35 : adc byte ptr [rsp - 8], al ; ret
0x0000000000496a87 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3ba1 : adc cl, bh ; call rdx
0x00000000004a3ce1 : adc cl, bh ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3d1d : adc cl, bh ; jmp qword ptr [rax]
0x00000000004a3b25 : adc cl, bh ; push qword ptr [rax + 0xf] ; stc ; jmp rax
0x000000000045284f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x0000000000423915 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000452852 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000004750ba : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049b67c : adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x0000000000479bb1 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x00000000004647e4 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000000004011ad : adc cl, byte ptr [rdx] ; mov eax, 2 ; syscall
0x00000000004a3764 : adc cl, ch ; clc ; call qword ptr [rax]
0x00000000004a3800 : adc dh, ah ; clc ; jmp rax
0x00000000004268d0 : adc dh, bh ; ret
0x000000000041b281 : adc dh, dh ; ret 0xf0f
0x000000000048e8f4 : adc dl, bl ; add r8b, bpl ; ret
0x000000000048d1a3 : adc dword ptr [rax + 0x39], ecx ; retf 0x840f
0x0000000000479523 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000411cc2 : adc dword ptr [rax - 0x39], ecx ; ret 0xffd0
0x000000000044f6a5 : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000410715 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000479bfc : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000044f77c : adc dword ptr [rax - 0x75], ecx ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000417e3e : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x00000000004165cc : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x0000000000463305 : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000047616a : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000042b24b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000429b37 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b14f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000424168 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042132b : adc dword ptr [rbp - 0x76b70001], esi ; ret 0xc6eb
0x0000000000435c47 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004358e2 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000004358a6 : adc dword ptr [rcx - 1], edi ; ret
0x00000000004699cf : adc dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000402f64 : adc dword ptr [rdi + 0x6cbfe0], edi ; call rax
0x0000000000463e2b : adc dword ptr [rdi - 0x7ab70005], ebx ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x0000000000435da9 : adc dword ptr [rdi - 8], edi ; ret
0x000000000043deac : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043dfdf : adc dword ptr [rsi + 3], edx ; ret
0x000000000043e07c : adc dword ptr [rsi + 7], edx ; ret
0x000000000043de7e : adc dword ptr [rsi - 1], edx ; ret
0x0000000000429b36 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3afd : adc eax, 0x1490fff9 ; stc ; call qword ptr [rax]
0x00000000004a3cf9 : adc eax, 0x14a0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a3b75 : adc eax, 0x1572fff9 ; stc ; jmp rdx
0x000000000044f686 : adc eax, 0x27c3ad ; je 0x44f698 ; ret
0x0000000000444307 : adc eax, 0x285c8c ; pop rbx ; ret
0x00000000004b9864 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x000000000047138d : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x00000000004712c9 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x00000000004296c1 : adc eax, 0x83480000 ; ret 0xe910
0x00000000004964d9 : adc eax, 0x83490000 ; jmp 0x4964f9
0x000000000046e599 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000496580 : adc eax, 0x894d0000 ; retf
0x00000000004667ea : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042afae : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494d49 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423fe8 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041782f : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417856
0x000000000049677f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a4e9 : adc eax, eax ; ret
0x000000000047a626 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004b9505 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000046affc : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000049bce2 : adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x000000000044228f : adc ecx, dword ptr [rax - 0x39] ; ret 0xffd0
0x000000000041563a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000447461 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044c9c4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000452b11 : adc ecx, dword ptr [rcx + rax - 0x16] ; call qword ptr [r10 + rax*8]
0x00000000004a3b19 : adc ecx, edi ; call qword ptr [rax]
0x00000000004a3d19 : adc ecx, edi ; jmp qword ptr [rax + 0x20fff910]
0x00000000004a3d15 : adc ecx, edi ; jmp qword ptr [rax]
0x00000000004a3b99 : adc ecx, edi ; jmp rdx
0x00000000004a3b0d : adc edi, ecx ; call qword ptr [rax + 0x10fff912]
0x00000000004a3b09 : adc edi, ecx ; call qword ptr [rax]
0x00000000004a3d09 : adc edi, ecx ; jmp qword ptr [rax + 0x20fff912]
0x00000000004a3d05 : adc edi, ecx ; jmp qword ptr [rax]
0x00000000004a3b89 : adc edi, ecx ; jmp rdx
0x00000000004baa1e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000049cfdc : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000496962 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000435c46 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000004358e1 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000004358a5 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000435da8 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000043dfde : adc qword ptr [rsi + 3], rdx ; ret
0x000000000043e07b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000043de7d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000426843 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000494eb0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a625 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004268cf : adc sil, r15b ; ret
0x00000000004be7c3 : add ah, ah ; add al, byte ptr [rax] ; add byte ptr [rax], cl ; cmp ah, dh ; call qword ptr [rdx]
0x00000000004c81c3 : add ah, ah ; pushfq ; add byte ptr [rax], al ; or rsp, rdi ; call qword ptr [rax]
0x00000000004be9a3 : add ah, al ; add al, 0 ; add byte ptr [rax + 0x63], ch ; hlt ; call qword ptr [rax]
0x00000000004c6aa3 : add ah, al ; test dword ptr [rax], eax ; add byte ptr [rax - 0x24], ch ; cli ; call rsi
0x000000000043e50e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e52e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000043e5bd : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e4ed : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c5fdb : add ah, bh ; jp 0x4c5fe7 ; add al, dl ; push rcx ; cli ; jmp rsp
0x00000000004c3ddb : add ah, bh ; pop rax ; add byte ptr [rax], al ; mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004c36db : add ah, bh ; push rcx ; add byte ptr [rax], al ; js 0x4c36e3 ; call qword ptr [rcx]
0x00000000004c81db : add ah, bh ; pushfq ; add byte ptr [rax], al ; or esp, edi ; call qword ptr [rdx]
0x00000000004c4cbb : add ah, bl ; add byte ptr [eax], al ; sub ah, 0xf9 ; call qword ptr [rsi]
0x00000000004c41bb : add ah, bl ; pop rsp ; add byte ptr [rax], al ; jo 0x4c41a5 ; clc ; call qword ptr [rbx]
0x00000000004baa47 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x00000000004bfb37 : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004bfc10 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x000000000043dfda : add ah, byte ptr [rdx - 0xf] ; jl 0x43e02f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004c30ab : add ah, cl ; add byte ptr [r8], al ; and byte ptr [rcx], dh ; clc ; jmp rsp
0x00000000004c81ab : add ah, cl ; pushfq ; add byte ptr [rax], al ; or esp, edi ; call qword ptr [rdx]
0x00000000004c53d3 : add ah, dh ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; test al, 5 ; cli ; jmp rdx
0x00000000004c41d3 : add ah, dh ; pop rsp ; add byte ptr [rax], al ; js 0x4c41bd ; clc ; call qword ptr [rax]
0x00000000004c15d3 : add ah, dh ; xor byte ptr [rax], al ; add byte ptr [rax - 0xd], bh ; cmc ; call qword ptr [rdx]
0x00000000004be9a5 : add al, 0 ; add byte ptr [rax + 0x63], ch ; hlt ; call qword ptr [rax]
0x0000000000449b01 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000449b39 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000041bf0b : add al, 0 ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xffff
0x0000000000471809 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x000000000042334d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042be6f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423371 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049cce1 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000440f12 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000426ee8 : add al, 0 ; add byte ptr [rax], al ; ret
0x000000000043f3bf : add al, 0 ; add byte ptr [rax], al ; syscall
0x000000000048f7d1 : add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000424ee8 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000449e61 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000041837d : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000402c65 : add al, 0 ; add byte ptr [rdi + 0x6cc720], bh ; call rbx
0x0000000000418ea6 : add al, 0 ; add dh, dh ; ret
0x000000000040f414 : add al, 0 ; add rsp, 0xd8 ; ret
0x000000000046affb : add al, 0x11 ; ret
0x000000000043e55d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000474709 : add al, 0x16 ; jae 0x4746b7 ; xor eax, eax ; ret
0x000000000044487e : add al, 0x17 ; add al, ch ; retf 0xfe7a
0x000000000042e3c1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000422a4a : add al, 0x17 ; sub eax, ecx ; ret
0x000000000046a145 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46a116
0x000000000043f39d : add al, 0x24 ; add rsp, 0x18 ; ret
0x000000000040999a : add al, 0x24 ; call 0x405c94
0x00000000004717ac : add al, 0x24 ; call rax
0x000000000046fac3 : add al, 0x24 ; lea rdi, [rax + 0x6cb1e0] ; call rdx
0x000000000043f4d8 : add al, 0x24 ; mov eax, 0 ; syscall
0x000000000046aef8 : add al, 0x24 ; mov eax, 0x14 ; syscall
0x000000000043f538 : add al, 0x24 ; mov eax, 1 ; syscall
0x000000000043f478 : add al, 0x24 ; mov eax, 2 ; syscall
0x000000000043f728 : add al, 0x24 ; mov eax, 3 ; syscall
0x000000000044aa8a : add al, 0x24 ; mov r12, rsi ; jmp 0x44aa62
0x000000000044230c : add al, 0x24 ; mov rdx, rax ; mov eax, r12d ; syscall
0x000000000044f6ea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047ca65 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000040ea50 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044d11d : add al, 0x29 ; ret 0x8941
0x0000000000465b6e : add al, 0x31 ; ret
0x0000000000465a6a : add al, 0x37 ; ret
0x0000000000415d1f : add al, 0x3a ; ret
0x00000000004b8b26 : add al, 0x3d ; retf
0x0000000000480d1c : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480cf1
0x0000000000466936 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x0000000000471391 : add al, 0x48 ; add esp, 8 ; ret
0x000000000043ba3b : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x000000000043af49 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000043af5b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x00000000004640f3 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000464033 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000043532a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000463f14 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000439789 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000465764 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000474706 : add al, 0x4c ; cmp eax, dword ptr [rsi + rdx] ; jae 0x4746ba ; xor eax, eax ; ret
0x0000000000473ff6 : add al, 0x4c ; cmp edx, eax ; jne 0x473fa4 ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000043af57 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000439797 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000044c9c2 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000041bec4 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x0000000000466934 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000042004a : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004bfbcf : add al, 0x79 ; ret
0x0000000000475341 : add al, 0x80 ; cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000049a073 : add al, 0x81 ; je 0x49a055 ; ret
0x00000000004293ab : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000049a06f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x49a059 ; ret
0x000000000042ac83 : add al, 0x81 ; sub eax, edx ; ret
0x000000000043e658 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e648 ; ret
0x0000000000429107 : add al, 0x82 ; sub eax, ecx ; ret
0x00000000004494cd : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000046b250 : add al, 0x85 ; leave ; jne 0x46b208 ; xor eax, eax ; ret
0x0000000000467019 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000049bb8b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000043af46 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000439786 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000004c6ce4 : add al, 0x88 ; add byte ptr [rax], al ; sbb bh, ch ; cli ; jmp qword ptr [rdx]
0x000000000049a0db : add al, 0x88 ; add r8, rax ; jmp r8
0x000000000040e27a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004441b9 : add al, 0x89 ; retf 0xeac0
0x000000000043e65b : add al, 0x8a ; je 0x43e645 ; ret
0x000000000045c5d0 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000041b8c4 : add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000048a123 : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004c1f98 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c549e : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000049b603 : add al, 0x98 ; add rax, r8 ; jmp rax
0x00000000004be3d4 : add al, 0xd8 ; std ; call rsp
0x000000000047a57d : add al, 0xde ; lea r9, [rdx] ; jmp 0x47a5d9
0x000000000048008d : add al, 0xde ; lea r9, [rdx] ; jmp 0x4800e9
0x000000000047aef5 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422b8d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000435693 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f41b : add al, 0xf3 ; ret
0x0000000000426929 : add al, 0xf6 ; ret 0x7408
0x00000000004be431 : add al, 0xfe ; call rax
0x00000000004be42d : add al, 0xfe ; ljmp [rax] ; add al, 0xfe ; call rax
0x0000000000481418 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004746bc : add al, 1 ; cmp rax, -1 ; cmove rax, rdx ; ret
0x00000000004bfc47 : add al, 2 ; hlt ; ret
0x000000000042f937 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c7d18 : add al, 3 ; mov dword ptr [rcx], eax ; ret
0x000000000042142d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000042cf58 : add al, 7 ; ret
0x000000000042e52f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004c297f : add al, ah ; add eax, edi ; call rsp
0x00000000004c6c3f : add al, ah ; jrcxz 0x4c6c41 ; jmp qword ptr [rdx]
0x00000000004a356f : add al, ah ; pushfq ; clc ; inc dword ptr [rax] ; sahf ; clc ; jmp qword ptr [rax]
0x00000000004c105f : add al, ah ; retf
0x00000000004c101f : add al, ah ; retf 0xfff5
0x00000000004c745f : add al, ah ; sub bh, bl ; call rsp
0x00000000004c3e1f : add al, al ; leave ; std ; call qword ptr [rbx]
0x00000000004ae5a7 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004c2801 : add al, bh ; call qword ptr [rcx]
0x00000000004c2861 : add al, bh ; call qword ptr [rdi]
0x00000000004bc6e7 : add al, bh ; ret 0x4b
0x0000000000444bf0 : add al, bpl ; leave ; retf
0x000000000041ada5 : add al, bpl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000447ff6 : add al, bpl ; ret
0x000000000041af06 : add al, bpl ; ret 0xffff
0x000000000040f5ef : add al, bpl ; retf 0xff21
0x0000000000497862 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423911 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000041930d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000425f03 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004107f5 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000040049f : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000469f46 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000417830 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041f986 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000445e9d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000451e6d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004234ed : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047dd0c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042aa41 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423511 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049ccf1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000440102 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000441382 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004410f5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440fc1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440f39 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000466853 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000400430 : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000046a65a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000403865 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x00000000004be7c5 : add al, byte ptr [rax] ; add byte ptr [rax], cl ; cmp ah, dh ; call qword ptr [rdx]
0x0000000000478408 : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x0000000000425068 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d3e4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004752ad : add al, byte ptr [rax] ; add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x0000000000400463 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x000000000048316e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x0000000000418958 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041d167 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a75c : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000447d4c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00000000004473cc : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044cb54 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004c94dc : add al, byte ptr [rax] ; ret
0x000000000044431a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44430e
0x00000000004674d7 : add al, byte ptr [rbp + 0x29] ; in eax, 0x29 ; retf 0x8d41
0x00000000004429be : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004bf768 : add al, byte ptr [rdi + 0xa] ; ret
0x00000000004c50bd : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000004c4e95 : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000004c04b5 : add al, byte ptr [rdx] ; ret
0x00000000004bf678 : add al, byte ptr [rdx] ; retf
0x000000000047aab5 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000004c1f9c : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x00000000004744bb : add al, ch ; call rdx
0x00000000004c87f7 : add al, ch ; cld ; call qword ptr [rax]
0x0000000000444bf1 : add al, ch ; leave ; retf
0x000000000041ada6 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045545e : add al, ch ; pop rsp ; ret
0x0000000000454c1d : add al, ch ; popfq ; retf
0x000000000041cf9a : add al, ch ; push rax ; retf
0x000000000041e0c7 : add al, ch ; ret
0x0000000000414a98 : add al, ch ; ret 0x2de
0x000000000046e478 : add al, ch ; ret 0xfaf8
0x00000000004752e8 : add al, ch ; ret 0xfcdb
0x000000000041af07 : add al, ch ; ret 0xffff
0x00000000004023ef : add al, ch ; retf
0x000000000041ca90 : add al, ch ; retf 0x25e
0x0000000000417f70 : add al, ch ; retf 0x3a2
0x000000000045a9e0 : add al, ch ; retf 0x8d
0x000000000046fc30 : add al, ch ; retf 0xb903
0x000000000048e7f0 : add al, ch ; retf 0xf72f
0x0000000000475bf0 : add al, ch ; retf 0xf8bb
0x00000000004740f0 : add al, ch ; retf 0xf8d6
0x000000000047a9c0 : add al, ch ; retf 0xfc7f
0x0000000000444880 : add al, ch ; retf 0xfe7a
0x000000000040f5f0 : add al, ch ; retf 0xff21
0x0000000000474d77 : add al, ch ; retf 0xfff8
0x00000000004812f9 : add al, ch ; retf 0xfff9
0x00000000004c2bf7 : add al, ch ; sbb al, bh ; call qword ptr [rax]
0x000000000040502c : add al, ch ; scasb al, byte ptr [rdi] ; retf
0x0000000000472823 : add al, ch ; xlatb ; ret 0xfffc
0x00000000004c7757 : add al, cl ; cmp bl, bh ; jmp qword ptr [rdx]
0x00000000004bc6df : add al, cl ; ret 0x4b
0x00000000004c591f : add al, dh ; and edx, edi ; jmp rdi
0x00000000004c1b3f : add al, dh ; jne 0x4c1b3d ; call qword ptr [rax]
0x00000000004a353f : add al, dh ; retf 0x42
0x00000000004c313f : add al, dl ; cmp edi, eax ; call qword ptr [rax]
0x00000000004c46bf : add al, dl ; jge 0x4c46c0 ; call rdi
0x00000000004c5fdf : add al, dl ; push rcx ; cli ; jmp rsp
0x00000000004a3537 : add al, dl ; retf 0x42
0x00000000004a3780 : add bh, ah ; clc ; jmp rax
0x00000000004c6e1a : add bh, ah ; ret
0x0000000000444b9f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a3365 : add bh, al ; inc eax ; add edi, eax ; jmp rax
0x000000000045f8fe : add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000041354a : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000400b57 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047e36f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000441e14 : add bh, bh ; ror dword ptr [rcx + rcx*4 - 0x11], cl ; call 0x41e0e8
0x0000000000402c6c : add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x000000000047a690 : add bh, byte ptr [rax + 1] ; ret
0x00000000004124b2 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000040dc6b : add bh, byte ptr [rax - 1] ; ret
0x00000000004bf36b : add bh, byte ptr [rcx + 0x41380e0a] ; ret
0x000000000043d7b2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004703b6 : add bh, dh ; ret 0x804
0x00000000004a36dc : add bl, al ; clc ; call qword ptr [rax + 0x20fff8c3]
0x00000000004261e6 : add bl, al ; lea rax, [rip + 0x15e71] ; ret
0x0000000000466ff1 : add bl, al ; mov eax, 2 ; ret
0x0000000000421294 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00000000004442ca : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004c5c27 : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004c4e67 : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000004a3990 : add bl, byte ptr [rcx + rdi*8] ; call qword ptr [rdx + 0x22fff91b]
0x00000000004c5ce5 : add bl, byte ptr [rdx + 0xa] ; ret
0x000000000046a14a : add bl, ch ; ret 0x1f0f
0x000000000046bcde : add bl, ch ; retf
0x000000000047f54f : add bl, ch ; retf 0x1f0f
0x0000000000486fc8 : add bl, ch ; retf 0x8945
0x0000000000406347 : add bl, dh ; ret
0x00000000004c49f3 : add byte ptr [0xffffffffe4480000], dl ; stc ; jmp rax
0x00000000004c4cbd : add byte ptr [eax], al ; sub ah, 0xf9 ; call qword ptr [rsi]
0x000000000047054a : add byte ptr [r11 + r9*4 + 0x40], cl ; xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x0000000000467474 : add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x00000000004654ca : add byte ptr [r15 + 0x4a1f8c], dil ; call 0x4017c9
0x0000000000474d71 : add byte ptr [r15 + 0x4b6154], dil ; call 0x4017c9
0x000000000047ac60 : add byte ptr [r15 + 0x6cc9c0], r15b ; call rax
0x000000000047ad8b : add byte ptr [r15 + 0x6cc9c4], r15b ; call rdx
0x000000000045b883 : add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000045a86f : add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x0000000000474741 : add byte ptr [r8 + 0x39], r9b ; ret
0x0000000000425e5f : add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x0000000000468ffe : add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x0000000000488d51 : add byte ptr [r8 + 1], cl ; retf 0x8b48
0x000000000049d6af : add byte ptr [r8 + 1], r9b ; ret
0x0000000000468575 : add byte ptr [r8 - 0x77], cl ; ret
0x00000000004432c1 : add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x00000000004598d8 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc27ee0ea
0x0000000000446f65 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000004c285d : add byte ptr [r8], al ; add byte ptr [rax], 0xf8 ; call qword ptr [rdi]
0x00000000004bc6e2 : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, bh ; ret 0x4b
0x00000000004bc6da : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, cl ; ret 0x4b
0x00000000004bc79a : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000004bc6aa : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x4b
0x00000000004bc692 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x4b
0x00000000004c30ad : add byte ptr [r8], al ; and byte ptr [rcx], dh ; clc ; jmp rsp
0x00000000004c3005 : add byte ptr [r8], al ; or al, dl ; std ; jmp qword ptr [rdx]
0x00000000004c27fd : add byte ptr [r8], al ; push rax ; add al, bh ; call qword ptr [rcx]
0x00000000004c2bf5 : add byte ptr [r8], r8b ; call 0x114c241b
0x000000000043f4fd : add byte ptr [r8], r8b ; ret
0x0000000000473507 : add byte ptr [r9 - 0x77], cl ; call 0xffffffffca8c4464
0x00000000004c6fff : add byte ptr [rax + 0x16], ah ; sti ; jmp qword ptr [rdx]
0x000000000042128f : add byte ptr [rax + 0x16], bh ; ret
0x000000000043f35f : add byte ptr [rax + 0x18], bh ; syscall
0x000000000049a08f : add byte ptr [rax + 0x26], bh ; syscall
0x000000000043dd7f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x0000000000405477 : add byte ptr [rax + 0x29], cl ; ret
0x000000000044c378 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000418e65 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000044b4f0 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000420410 : add byte ptr [rax + 0x29], cl ; retf
0x000000000041e185 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000041d80f : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x00000000004bf947 : add byte ptr [rax + 0x2d], ch ; cmc ; call qword ptr [rax]
0x00000000004173fb : add byte ptr [rax + 0x39], cl ; ret
0x0000000000483d5b : add byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000417846 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044eb5b : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000417807 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000046dec9 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004473a0 : add byte ptr [rax + 0x39], cl ; retf
0x00000000004301b6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004345d3 : add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000432d6e : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000043df08 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042fce1 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x000000000046ac6f : add byte ptr [rax + 0x3f], bh ; syscall
0x0000000000425e5b : add byte ptr [rax + 0x43d7d0], bh ; cmove rax, rdx ; ret
0x000000000047a936 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000004c92cf : add byte ptr [rax + 0x50], ah ; std ; jmp qword ptr [rbx]
0x0000000000411d78 : add byte ptr [rax + 0x5b004a1d], ah ; ret
0x0000000000462fc7 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000043fe5f : add byte ptr [rax + 0x61], bh ; syscall
0x00000000004428ff : add byte ptr [rax + 0x63], bh ; syscall
0x00000000004be9a7 : add byte ptr [rax + 0x63], ch ; hlt ; call qword ptr [rax]
0x0000000000412498 : add byte ptr [rax + 0x63], cl ; jnp 0x412512 ; syscall
0x000000000045d07e : add byte ptr [rax + 0x63], cl ; ret
0x0000000000464cbf : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000048b1e4 : add byte ptr [rax + 0x63], cl ; retf 0x8348
0x000000000045c6a5 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000040eec1 : add byte ptr [rax + 0x63], cl ; retf 0x894c
0x000000000040dc32 : add byte ptr [rax + 0x63], cl ; stc ; syscall
0x000000000043f6c0 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 0x48 ; syscall
0x000000000044cc58 : add byte ptr [rax + 0x63], cl ; sti ; mov eax, 3 ; syscall
0x000000000046acaf : add byte ptr [rax + 0x68], bh ; syscall
0x000000000046ac9f : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000046acbf : add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000417da2 : add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000042390f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000476964 : add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x00000000004c36df : add byte ptr [rax + 0x78], al ; clc ; call qword ptr [rcx]
0x000000000043b9df : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000040f8ea : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000046d00e : add byte ptr [rax + 0x9e], bh ; syscall
0x00000000004c6e8f : add byte ptr [rax + 0xb], al ; sti ; jmp rsi
0x000000000044003f : add byte ptr [rax + 0xb], bh ; syscall
0x000000000046734f : add byte ptr [rax + 0xc9], bh ; syscall
0x00000000004429a1 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000043ed46 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000041d745 : add byte ptr [rax + 0xf48006c], ch ; retf 0x894c
0x00000000004659d5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000044377b : add byte ptr [rax + 0xf], cl ; ret
0x0000000000412827 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000425e60 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000040fa89 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000468fff : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000426783 : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000448c3a : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000044848d : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044b04a : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000041cb35 : add byte ptr [rax + 0xf], cl ; retf 0x8348
0x0000000000469688 : add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000041d748 : add byte ptr [rax + 0xf], cl ; retf 0x894c
0x00000000004014c0 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000004c7eef : add byte ptr [rax + 1], al ; cld ; jmp qword ptr [rax]
0x0000000000474a77 : add byte ptr [rax + 1], bh ; ret
0x0000000000425f05 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004107f7 : add byte ptr [rax + 1], cl ; ret
0x0000000000488caf : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000047b6cc : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000047f337 : add byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000469dcc : add byte ptr [rax + 1], cl ; retf
0x000000000047f447 : add byte ptr [rax + 1], cl ; retf 0x42f6
0x0000000000434691 : add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000425f0f : add byte ptr [rax + 1], cl ; retf 0x8348
0x0000000000402a7f : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000488d52 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000479b20 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000040042e : add byte ptr [rax + 2], bh ; syscall
0x000000000040042d : add byte ptr [rax + 2], dil ; syscall
0x000000000044ee14 : add byte ptr [rax + 3], bh ; syscall
0x000000000049adff : add byte ptr [rax + 5], bh ; ret
0x000000000043e57e : add byte ptr [rax + 8], bh ; pop rbx ; ret
0x00000000004428bf : add byte ptr [rax + 8], bh ; syscall
0x000000000043e57d : add byte ptr [rax + 8], dil ; pop rbx ; ret
0x00000000004c81af : add byte ptr [rax + 9], al ; cld ; call qword ptr [rdx]
0x00000000004c8197 : add byte ptr [rax + 9], cl ; cld ; call qword ptr [rax]
0x00000000004ad54b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x000000000041c0e8 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c9f9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000471390 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004c6ce3 : add byte ptr [rax + rcx*4], al ; add byte ptr [rax], al ; sbb bh, ch ; cli ; jmp qword ptr [rdx]
0x00000000004ae6f7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000004c54fb : add byte ptr [rax + rsi*2], bl ; add byte ptr [rax], al ; nop ; psubd mm7, mm7 ; retf
0x000000000049c33f : add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004627d7 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000041f31a : add byte ptr [rax - 0x16ffbe35], ah ; retf 0xfffd
0x00000000004032c6 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000004c49f7 : add byte ptr [rax - 0x1c], cl ; stc ; jmp rax
0x00000000004c6aa7 : add byte ptr [rax - 0x24], ch ; cli ; call rsi
0x00000000004c41d7 : add byte ptr [rax - 0x25], bh ; clc ; call qword ptr [rax]
0x00000000004c41bf : add byte ptr [rax - 0x25], dh ; clc ; call qword ptr [rbx]
0x00000000004c41ef : add byte ptr [rax - 0x25], dh ; clc ; call qword ptr [rdx]
0x0000000000420090 : add byte ptr [rax - 0x39], cl ; add eax, 0x2aa6ec ; push rax ; retf 0x41
0x000000000041f2f2 : add byte ptr [rax - 0x39], cl ; add eax, 0x2ab48a ; push rax ; retf 0x41
0x000000000041dcf3 : add byte ptr [rax - 0x39], cl ; add eax, 0x2aca89 ; push rax ; retf 0x41
0x000000000047f4c4 : add byte ptr [rax - 0x39], cl ; mov r8b, 0xbe ; retf
0x000000000043fec1 : add byte ptr [rax - 0x39], cl ; ret
0x000000000045283f : add byte ptr [rax - 0x39], cl ; ret 0xffb0
0x000000000040dc5f : add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000042116b : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000044f77f : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000045882f : add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x0000000000410817 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000046685f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000046683f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000046689f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000046684f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000046688f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000044f85f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000459228 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000044cb6d : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000478ac5 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000041db9c : add byte ptr [rax - 0x418aff94], ch ; ret
0x00000000004c3ebf : add byte ptr [rax - 0x48], ah ; clc ; call qword ptr [rcx]
0x00000000004c3ea7 : add byte ptr [rax - 0x48], bl ; clc ; call qword ptr [rcx]
0x00000000004c3e77 : add byte ptr [rax - 0x48], cl ; clc ; call qword ptr [rdi]
0x00000000004896c2 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000048d7f7 : add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x00000000004c3e8f : add byte ptr [rax - 0x48], dl ; clc ; call qword ptr [rcx]
0x00000000004c3ddf : add byte ptr [rax - 0x4d], al ; clc ; call qword ptr [rdi]
0x00000000004c7117 : add byte ptr [rax - 0x67], bl ; std ; call rcx
0x00000000004c87c7 : add byte ptr [rax - 0x6d], cl ; cld ; call qword ptr [rax]
0x000000000044fc43 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000418e41 : add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x0000000000449b1f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449b03 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000449b3b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000047b9ca : add byte ptr [rax - 0x73], cl ; jl 0x47b9fa ; js 0x47ba19 ; call rsp
0x000000000047bcdf : add byte ptr [rax - 0x73], cl ; jl 0x47bd0f ; js 0x47bd2e ; call rsp
0x000000000047c0a6 : add byte ptr [rax - 0x73], cl ; jl 0x47c0d6 ; js 0x47c0f5 ; call rsp
0x000000000049ad5f : add byte ptr [rax - 0x73], cl ; jl 0x49ad90 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000041b27d : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004750b7 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000049bcdf : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax + 0x63] ; ret 0xbc80
0x000000000044cb9f : add byte ptr [rax - 0x75], cl ; add eax, 0x27fb51 ; ret
0x000000000044582f : add byte ptr [rax - 0x75], cl ; add eax, 0x287a91 ; ret
0x00000000004168ff : add byte ptr [rax - 0x75], cl ; add eax, 0x2b37b9 ; ret
0x0000000000419ccb : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x000000000044fc5f : add byte ptr [rax - 0x75], cl ; jl 0x44fc90 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045ace8 : add byte ptr [rax - 0x75], cl ; jl 0x45ad19 ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x00000000004152d6 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464f76 : add byte ptr [rax - 0x75], cl ; jp 0x464fc1 ; jmp 0x464f46
0x0000000000464faf : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047d7cd : add byte ptr [rax - 0x75], cl ; or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000416ea7 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004316ff : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041e4c7 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x0000000000478e8f : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x0000000000445352 : add byte ptr [rax - 0x75], cl ; ret
0x000000000041d1a3 : add byte ptr [rax - 0x76b7ff94], ch ; retf 0xf4c
0x000000000049c477 : add byte ptr [rax - 0x77], cl ; adc al, 0xf7 ; add rsp, 8 ; ret
0x000000000041692f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000049ddb3 : add byte ptr [rax - 0x77], cl ; enter -0x72b4, 0x3d ; ret 0x22ed
0x000000000040fb82 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041e0d3 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004004a1 : add byte ptr [rax - 0x77], cl ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x00000000004003d1 : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 1] ; syscall
0x0000000000414e42 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb2 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000454117 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x8948
0x0000000000455e62 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x894c
0x0000000000469989 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000004417d5 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x00000000004416d5 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x00000000004412cd : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf 0xffed
0x000000000044ddb4 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x000000000041bf0d : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret 0xffff
0x000000000047a9cc : add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x0000000000469458 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf091dae
0x000000000040f9d1 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000401432 : add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x0000000000441391 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000041e780 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000004033fc : add byte ptr [rax - 0x77], cl ; ret
0x0000000000417832 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041dcac : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000047aa53 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000046a21f : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x0000000000485d84 : add byte ptr [rax - 0x77], cl ; ret 0x43e8
0x000000000043ee5a : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x0000000000402a6e : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046c78f : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x0000000000419bbf : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000459ba9 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000044eeb4 : add byte ptr [rax - 0x77], cl ; ret 0x8840
0x0000000000455671 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043ecc3 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000044f287 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000470e97 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000425e0b : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045ab4f : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045a2b4 : add byte ptr [rax - 0x77], cl ; ret 0xf0e9
0x0000000000413550 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004738c6 : add byte ptr [rax - 0x77], cl ; retf
0x0000000000429444 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000041cb47 : add byte ptr [rax - 0x77], cl ; retf 0x2948
0x00000000004101f7 : add byte ptr [rax - 0x77], cl ; retf 0x294c
0x000000000046a1be : add byte ptr [rax - 0x77], cl ; retf 0x2d75
0x0000000000422be2 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000443584 : add byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000404de2 : add byte ptr [rax - 0x77], cl ; retf 0x44f6
0x0000000000422d82 : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000045364f : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048b730 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000422b40 : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000041d1a6 : add byte ptr [rax - 0x77], cl ; retf 0xf4c
0x00000000004292c6 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000042ae3c : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000047216f : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000049e21d : add byte ptr [rax - 0x77], cl ; sub bl, r14b ; ret
0x0000000000470e33 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000043eb1f : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000004049e3 : add byte ptr [rax - 0x7af0a707], al ; retf 0xfffb
0x000000000046575f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000046819f : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x0000000000464a9a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000004432c2 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x00000000004116c7 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x000000000045ee2c : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x000000000047180b : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x00000000004598d9 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc27ee0e9
0x000000000041e698 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004213ad : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401758 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000455158 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045677f : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000048987b : add byte ptr [rax - 0x7d], cl ; jl 0x4898ac ; or byte ptr [rax], al ; jne 0x489856 ; jmp 0x48985e
0x000000000048caab : add byte ptr [rax - 0x7d], cl ; jl 0x48cadc ; adc byte ptr [rax], al ; jne 0x48ca86 ; jmp 0x48ca8e
0x000000000041e7c2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004015ee : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041be6f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000043d8af : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041c849 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000469d7f : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000040eddf : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047604f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0b4f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045315f : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000040134f : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x0000000000446f66 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000044bf50 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000422c0f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004649b7 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004260ff : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042608f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000047dd0e : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000044735f : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000004627a7 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000484acf : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000004256a0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000429523 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c33 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004676cf : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041a19f : add byte ptr [rax - 0x7d], cl ; retf
0x000000000040d9f8 : add byte ptr [rax - 0x7d], cl ; retf 0x4803
0x000000000040d9a8 : add byte ptr [rax - 0x7d], cl ; retf 0x4804
0x000000000040d85c : add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d9d0 : add byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040da20 : add byte ptr [rax - 0x7d], cl ; retf 0x4807
0x000000000040d935 : add byte ptr [rax - 0x7d], cl ; retf 0x4808
0x000000000040d8c0 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000040dac0 : add byte ptr [rax - 0x7d], cl ; retf 0x480a
0x000000000040da94 : add byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000040d902 : add byte ptr [rax - 0x7d], cl ; retf 0x480c
0x000000000040d890 : add byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000042e46f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000046589f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000044c6d4 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000044e15f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000041e0c0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000414a91 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2de
0x000000000041ca89 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x25e
0x000000000049ecd3 : add byte ptr [rax - 0x7f], cl ; jmp rax
0x0000000000446c4c : add byte ptr [rax - 0x7f], cl ; ret 0x5b00
0x0000000000432e7b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004c15d7 : add byte ptr [rax - 0xd], bh ; cmc ; call qword ptr [rdx]
0x0000000000416bcf : add byte ptr [rax - 1], bh ; jmp 0x416ba8
0x0000000000464022 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000410342 : add byte ptr [rax - 1], bh ; ret
0x0000000000416a5e : add byte ptr [rax - 1], dil ; ret
0x00000000004a3e5c : add byte ptr [rax - 7], bh ; jmp qword ptr [rax]
0x000000000041e0c4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000414a95 : add byte ptr [rax], 0 ; add al, ch ; ret 0x2de
0x000000000041ca8d : add byte ptr [rax], 0 ; add al, ch ; retf 0x25e
0x000000000047a9bd : add byte ptr [rax], 0 ; add al, ch ; retf 0xfc7f
0x0000000000414519 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000417d9f : add byte ptr [rax], 0 ; add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000043468e : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000410579 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000047a9c9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x000000000048b7f0 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041354d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047e1cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call rax
0x000000000043569b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047853b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000046630b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044eaf3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000041cb93 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000417dab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cefb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047c675 : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret
0x000000000042e951 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000447152 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x4801
0x000000000040f8eb : add byte ptr [rax], 0 ; je 0x40f900 ; mov eax, edx ; pop rbx ; ret
0x000000000047a937 : add byte ptr [rax], 0 ; je 0x47a948 ; mov eax, edx ; pop rbx ; ret
0x00000000004c2860 : add byte ptr [rax], 0xf8 ; call qword ptr [rdi]
0x00000000004c529f : add byte ptr [rax], ah ; cli ; call rsi
0x00000000004bff9f : add byte ptr [rax], ah ; cmc ; jmp qword ptr [rcx]
0x00000000004bc79f : add byte ptr [rax], ah ; ret
0x00000000004c8aff : add byte ptr [rax], ah ; std ; call rsp
0x00000000004c30af : add byte ptr [rax], ah ; xor eax, edi ; jmp rsp
0x00000000004bf942 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax + 0x2d], ch ; cmc ; call qword ptr [rax]
0x00000000004c2bf2 : add byte ptr [rax], al ; adc al, 0x47 ; add byte ptr [rax], al ; call 0x114c241e
0x00000000004c49f2 : add byte ptr [rax], al ; adc al, 0x65 ; add byte ptr [rax], al ; in al, 0xf9 ; jmp rax
0x00000000004c81f2 : add byte ptr [rax], al ; adc al, 0x9d ; add byte ptr [rax], al ; or rsp, rdi ; call qword ptr [rax]
0x00000000004c87f2 : add byte ptr [rax], al ; adc al, 0xa3 ; add byte ptr [rax], al ; call 0x114c84f8
0x000000000047138f : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x00000000004c6ce2 : add byte ptr [rax], al ; add al, 0x88 ; add byte ptr [rax], al ; sbb bh, ch ; cli ; jmp qword ptr [rdx]
0x00000000004bc6e5 : add byte ptr [rax], al ; add al, bh ; ret 0x4b
0x000000000041cf98 : add byte ptr [rax], al ; add al, ch ; push rax ; retf
0x000000000041e0c5 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000414a96 : add byte ptr [rax], al ; add al, ch ; ret 0x2de
0x000000000046e476 : add byte ptr [rax], al ; add al, ch ; ret 0xfaf8
0x00000000004752e6 : add byte ptr [rax], al ; add al, ch ; ret 0xfcdb
0x0000000000420c4d : add byte ptr [rax], al ; add al, ch ; retf
0x000000000041ca8e : add byte ptr [rax], al ; add al, ch ; retf 0x25e
0x000000000047a9be : add byte ptr [rax], al ; add al, ch ; retf 0xfc7f
0x0000000000472821 : add byte ptr [rax], al ; add al, ch ; xlatb ; ret 0xfffc
0x00000000004bc6dd : add byte ptr [rax], al ; add al, cl ; ret 0x4b
0x00000000004a353d : add byte ptr [rax], al ; add al, dh ; retf 0x42
0x00000000004a3535 : add byte ptr [rax], al ; add al, dl ; retf 0x42
0x0000000000460576 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000466fef : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000046a148 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000046bcdc : add byte ptr [rax], al ; add bl, ch ; retf
0x0000000000486fc6 : add byte ptr [rax], al ; add bl, ch ; retf 0x8945
0x000000000041451a : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042128d : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000043f35d : add byte ptr [rax], al ; add byte ptr [rax + 0x18], bh ; syscall
0x000000000045c85b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000483d59 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044eb59 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000004301b4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004345d1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004428fd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], bh ; syscall
0x0000000000412496 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; jnp 0x412514 ; syscall
0x0000000000464cbd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000040dc30 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; stc ; syscall
0x000000000046acad : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000046ac9d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000046acbd : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x0000000000417da0 : add byte ptr [rax], al ; add byte ptr [rax + 0x6ca800], bh ; ret
0x000000000043b9dd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044003d : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x000000000044299f : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x000000000043ed44 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x0000000000448c38 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000044848b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044b048 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x000000000041cb33 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; retf 0x8348
0x00000000004014be : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000047a6c3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000488dd4 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000488cad : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000043468f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000044ee12 : add byte ptr [rax], al ; add byte ptr [rax + 3], bh ; syscall
0x000000000049adfd : add byte ptr [rax], al ; add byte ptr [rax + 5], bh ; ret
0x00000000004428bd : add byte ptr [rax], al ; add byte ptr [rax + 8], bh ; syscall
0x000000000049c33d : add byte ptr [rax], al ; add byte ptr [rax + rsi*4 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004627d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000047f4c2 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; mov r8b, 0xbe ; retf
0x000000000043febf : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004133fd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000045882d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000041057a : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044cb6b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000478ac3 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000047b9c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47b9fc ; js 0x47ba1b ; call rsp
0x000000000047bcdd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47bd11 ; js 0x47bd30 ; call rsp
0x000000000047c0a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47c0d8 ; js 0x47c0f7 ; call rsp
0x0000000000419cc9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000004152d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464f74 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x464fc3 ; jmp 0x464f48
0x000000000041692d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000454115 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x8948
0x0000000000455e60 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; retf 0x894c
0x0000000000469987 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000004417d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x00000000004416d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x00000000004412cb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf 0xffed
0x000000000044ddb2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x000000000047a9ca : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; retf
0x000000000044138f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000040fa11 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041dcaa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000485d82 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x43e8
0x000000000046c78d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000047d7f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043ecc1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000425e09 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045ab4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000041354e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004738c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x00000000004101f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x294c
0x000000000045364d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048b72e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000422b3e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x00000000004292c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000042ae3a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000047216d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000043eb1d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, esi ; syscall
0x00000000004049e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7af0a707], al ; retf 0xfffb
0x000000000045ee2a : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 3
0x0000000000442d2c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d8ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000444ba3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047604d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0b4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045315d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000044bf4e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042ab77 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004260fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042608d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000044735d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000484bad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000042abe1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004676cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042e46d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000044e15d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000049ecd1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; jmp rax
0x0000000000434688 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000410340 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004c285e : add byte ptr [rax], al ; add byte ptr [rax], 0xf8 ; call qword ptr [rdi]
0x00000000004bc79d : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000004bc6e3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret 0x4b
0x0000000000420c4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000004bc6db : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret 0x4b
0x00000000004a353b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf 0x42
0x00000000004a3533 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf 0x42
0x00000000004168eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000047472b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000464cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000462efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004133fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000045882b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000049ae6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041692b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041dca8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000485d80 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x43e8
0x000000000045ea5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045821b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d8ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000047604b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0b4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045315b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004260fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000042608b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000044735b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000484bab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000049a7db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004bc79b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000041572b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004af3d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af8c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004aea82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004af412 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004af902 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004aea7a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004bc6ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x4b
0x00000000004bc693 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x4b
0x00000000004a354b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x00000000004a355b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x42
0x00000000004a3543 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x000000000041710b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043daeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b4bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000422beb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004217bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000411efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000442ea9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000049e45b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000046681c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000047831f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000047e1cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004b13fc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b05ac : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004bc6e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x4b
0x000000000045f984 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000043c00c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000043c01c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000043c02c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000043c03c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000043c04c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000043bf8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000043bf9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000043bfac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000043bfbc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000043bfcc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000043bfdc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000043bfec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000043bffc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000043bf7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000400a4a : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000043b9dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000043b3bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000042128c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000043f35c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x00000000004428fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x63 ; syscall
0x000000000046acac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000046ac9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000046acbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044003c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x00000000004151bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000047a6c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049adfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 5 ; ret
0x00000000004428bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 8 ; syscall
0x000000000043569c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047853c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041691c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041692c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044ed63 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x000000000043eb1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x0000000000411efc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004357ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000442eaa : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004155a0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414da1 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004bc6b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x4b
0x00000000004a3554 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; retf
0x000000000041572d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b03cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0b64 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004af3d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004af8c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004a4004 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43e4
0x00000000004a49f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43f0
0x00000000004b2f44 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4572
0x00000000004aea84 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b0404 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0ba4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004af414 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004af904 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x00000000004bdd65 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x00000000004bc59c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x4bbb
0x00000000004aea7c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000043f4ba : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004009a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x4009a1 ; call rax
0x000000000041cb94 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411c6c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000400ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000042cefc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004bc6ad : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x4b
0x00000000004bc695 : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x4b
0x00000000004a354d : add byte ptr [rax], al ; add byte ptr [rax], dh ; retf
0x00000000004a355d : add byte ptr [rax], al ; add byte ptr [rax], dh ; retf 0x42
0x00000000004a3545 : add byte ptr [rax], al ; add byte ptr [rax], dl ; retf
0x0000000000476129 : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000045c62c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000442858 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004621cd : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000004480f2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043e1da : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000043e529 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000047bd0f : add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000442aec : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000047f548 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4bccc0], bh ; jmp 0x47f525
0x0000000000434f7d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004116b3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004155a1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000413060 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000046322c : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; retf 0xc748
0x00000000004c1059 : add byte ptr [rax], al ; add byte ptr [rbx + rbp], bh ; add al, ah ; retf
0x000000000046a6a4 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x00000000004606f6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000045de9c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x0000000000443cad : add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000463026 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000041672c : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000045d4a2 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d425 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000403d43 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000043daed : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000049b4bd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0xde89
0x0000000000420858 : add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000440fd1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000441105 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000440f3a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000440f49 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000425a01 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000458b8c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000422bed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004217bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041ecf7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x000000000041d215 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000426210 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426236 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000047c676 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x000000000045b92a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000004a080b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; fucomi st(0) ; retf
0x000000000040ec5a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c157 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000049c17f : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000043e485 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043577d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004357ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448cec : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462c45 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000411efd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042613d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000467365 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d726 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x0000000000443104 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000046bc97 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000042e952 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000426052 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440f13 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x000000000049e865 : add byte ptr [rax], al ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c9226 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x0000000000442eab : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000045887d : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x0000000000449b85 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000472552 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000049b016 : add byte ptr [rax], al ; add cl, ch ; retf
0x000000000048ba68 : add byte ptr [rax], al ; add cl, ch ; retf 0xfff2
0x000000000045399e : add byte ptr [rax], al ; add cl, ch ; retf 0xfffa
0x000000000043f08d : add byte ptr [rax], al ; add cl, ch ; retf 0xfffc
0x0000000000400a4b : add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000417f69 : add byte ptr [rax], al ; add dh, al ; and al, 0x10 ; add al, ch ; retf 0x3a2
0x0000000000465670 : add byte ptr [rax], al ; add dh, al ; and al, 0x14 ; add al, ch ; ret
0x0000000000417608 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000447153 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043d241 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000485c50 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x000000000049afa5 : add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004c6642 : add byte ptr [rax], al ; add dword ptr fs:[rax], 0xfaae2800 ; call rdx
0x00000000004c7eee : add byte ptr [rax], al ; add esp, edi ; jmp qword ptr [rax]
0x0000000000478a97 : add byte ptr [rax], al ; add rax, -8 ; ret
0x000000000046681e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000425f04 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000043e6fe : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000043ea47 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049c3a8 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040118c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044fa46 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x000000000040f4a5 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000445897 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000478321 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c3002 : add byte ptr [rax], al ; and al, 0x4b ; add byte ptr [rax], al ; or al, dl ; std ; jmp qword ptr [rdx]
0x00000000004c7202 : add byte ptr [rax], al ; and al, 0x8d ; add byte ptr [rax], al ; mov byte ptr [rax], bl ; sti ; call qword ptr [rax]
0x00000000004c30ae : add byte ptr [rax], al ; and byte ptr [rcx], dh ; clc ; jmp rsp
0x00000000004bff9e : add byte ptr [rax], al ; and byte ptr [rsi - 0xb], cl ; jmp qword ptr [rcx]
0x00000000004c8afe : add byte ptr [rax], al ; and byte ptr [rsi], dh ; std ; call rsp
0x000000000042613e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000423a00 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004659d4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004c2bf6 : add byte ptr [rax], al ; call 0x114c241a
0x00000000004c87f6 : add byte ptr [rax], al ; call 0x114c84f4
0x000000000041189a : add byte ptr [rax], al ; call 0x400399
0x00000000004812f8 : add byte ptr [rax], al ; call 0x41dd44
0x0000000000472822 : add byte ptr [rax], al ; call 0x43eb04
0x0000000000415eef : add byte ptr [rax], al ; call 0x442994
0x00000000004c6926 : add byte ptr [rax], al ; call 0xffffffffe74c6408
0x000000000044c87b : add byte ptr [rax], al ; call r12
0x000000000047bb84 : add byte ptr [rax], al ; call r14
0x000000000044c955 : add byte ptr [rax], al ; call r15
0x00000000004016aa : add byte ptr [rax], al ; call rax
0x0000000000440f19 : add byte ptr [rax], al ; call rbx
0x00000000004b13fe : add byte ptr [rax], al ; call rdi
0x000000000040ea0c : add byte ptr [rax], al ; call rdx
0x00000000004b05ae : add byte ptr [rax], al ; call rsp
0x00000000004bc6e6 : add byte ptr [rax], al ; clc ; ret 0x4b
0x00000000004c5fda : add byte ptr [rax], al ; cld ; jp 0x4c5fe8 ; add al, dl ; push rcx ; cli ; jmp rsp
0x00000000004c3dda : add byte ptr [rax], al ; cld ; pop rax ; add byte ptr [rax], al ; mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004c36da : add byte ptr [rax], al ; cld ; push rcx ; add byte ptr [rax], al ; js 0x4c36e4 ; call qword ptr [rcx]
0x00000000004c81da : add byte ptr [rax], al ; cld ; pushfq ; add byte ptr [rax], al ; or esp, edi ; call qword ptr [rdx]
0x00000000004c3e1a : add byte ptr [rax], al ; cmp al, 0x59 ; add byte ptr [rax], al ; ror cl, 0xfd ; call qword ptr [rbx]
0x00000000004bef86 : add byte ptr [rax], al ; cmp ch, bh ; hlt ; call qword ptr [rax]
0x00000000004c1166 : add byte ptr [rax], al ; cmp cl, dl ; cmc ; call rdx
0x0000000000410d37 : add byte ptr [rax], al ; cmp eax, -1 ; jne 0x410d48 ; pop rbx ; ret
0x0000000000464a35 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x464a49 ; ret
0x000000000048caaa : add byte ptr [rax], al ; cmp qword ptr [rsp + 0x10], 0 ; jne 0x48ca87 ; jmp 0x48ca8f
0x000000000048987a : add byte ptr [rax], al ; cmp qword ptr [rsp + 8], 0 ; jne 0x489857 ; jmp 0x48985f
0x00000000004c8796 : add byte ptr [rax], al ; cwde ; frndint ; call qword ptr [rax]
0x00000000004ad55a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004b15ae : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x00000000004ae706 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004adf06 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x00000000004ae306 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004b17ae : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004b19ae : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004b1bae : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004b1dae : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004b1fae : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004b21ae : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004b23ae : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004b25ae : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004b27ae : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004c41ba : add byte ptr [rax], al ; fcomp qword ptr [rax + rax] ; jo 0x4c41a6 ; clc ; call qword ptr [rbx]
0x00000000004c3eba : add byte ptr [rax], al ; fcomp qword ptr [rcx] ; add byte ptr [rax - 0x48], ah ; clc ; call qword ptr [rcx]
0x00000000004c46ba : add byte ptr [rax], al ; fsub qword ptr [rcx] ; add al, dl ; jge 0x4c46c5 ; call rdi
0x00000000004c53d2 : add byte ptr [rax], al ; hlt ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; test al, 5 ; cli ; jmp rdx
0x00000000004c41d2 : add byte ptr [rax], al ; hlt ; pop rsp ; add byte ptr [rax], al ; js 0x4c41be ; clc ; call qword ptr [rax]
0x00000000004c15d2 : add byte ptr [rax], al ; hlt ; xor byte ptr [rax], al ; add byte ptr [rax - 0xd], bh ; cmc ; call qword ptr [rdx]
0x00000000004c1dc2 : add byte ptr [rax], al ; in al, 0x38 ; add byte ptr [rax], al ; mov byte ptr [rcx - 9], al ; call qword ptr [rax]
0x00000000004c81c2 : add byte ptr [rax], al ; in al, 0x9c ; add byte ptr [rax], al ; or rsp, rdi ; call qword ptr [rax]
0x00000000004c87c2 : add byte ptr [rax], al ; in al, 0xa2 ; add byte ptr [rax], al ; xchg rax, rbx ; cld ; call qword ptr [rax]
0x00000000004c49f6 : add byte ptr [rax], al ; in al, 0xf9 ; jmp rax
0x00000000004be7c2 : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; or byte ptr [rax], bh ; hlt ; call qword ptr [rdx]
0x000000000040f8ec : add byte ptr [rax], al ; je 0x40f8ff ; mov eax, edx ; pop rbx ; ret
0x00000000004210f7 : add byte ptr [rax], al ; je 0x421104 ; ret
0x000000000047a938 : add byte ptr [rax], al ; je 0x47a947 ; mov eax, edx ; pop rbx ; ret
0x000000000049c33e : add byte ptr [rax], al ; je 0x49c2fa ; add rsp, 0x18 ; ret
0x000000000049e866 : add byte ptr [rax], al ; je 0x49e875 ; ret
0x00000000004c285a : add byte ptr [rax], al ; jl 0x4c28aa ; add byte ptr [rax], al ; add byte ptr [rax], 0xf8 ; call qword ptr [rdi]
0x00000000004c3b5a : add byte ptr [rax], al ; jl 0x4c3bbd ; add byte ptr [rax], al ; mov al, 0x9a ; clc ; jmp rbx
0x00000000004c745a : add byte ptr [rax], al ; jl 0x4c73f6 ; add byte ptr [rax], al ; loopne 0x4c7495 ; sti ; call rsp
0x0000000000458799 : add byte ptr [rax], al ; jmp 0x45856b
0x000000000046a149 : add byte ptr [rax], al ; jmp 0x46a112
0x000000000046bcdd : add byte ptr [rax], al ; jmp 0x46bcaf
0x000000000047975f : add byte ptr [rax], al ; jmp 0x479731
0x0000000000479e3f : add byte ptr [rax], al ; jmp 0x479e11
0x0000000000486fc7 : add byte ptr [rax], al ; jmp 0x486f98
0x000000000049adbc : add byte ptr [rax], al ; jmp 0x49ad8e
0x0000000000440104 : add byte ptr [rax], al ; jmp rax
0x000000000043f455 : add byte ptr [rax], al ; jne 0x43f476 ; mov eax, 2 ; syscall
0x000000000043f4b5 : add byte ptr [rax], al ; jne 0x43f4d6 ; mov eax, 0 ; syscall
0x000000000043f515 : add byte ptr [rax], al ; jne 0x43f536 ; mov eax, 1 ; syscall
0x000000000043f705 : add byte ptr [rax], al ; jne 0x43f726 ; mov eax, 3 ; syscall
0x000000000046aed5 : add byte ptr [rax], al ; jne 0x46aef6 ; mov eax, 0x14 ; syscall
0x00000000004c41be : add byte ptr [rax], al ; jo 0x4c41a2 ; clc ; call qword ptr [rbx]
0x00000000004c41ee : add byte ptr [rax], al ; jo 0x4c41d2 ; clc ; call qword ptr [rdx]
0x00000000004c15d6 : add byte ptr [rax], al ; js 0x4c15d2 ; cmc ; call qword ptr [rdx]
0x00000000004c36de : add byte ptr [rax], al ; js 0x4c36e0 ; call qword ptr [rcx]
0x00000000004c41d6 : add byte ptr [rax], al ; js 0x4c41ba ; clc ; call qword ptr [rax]
0x000000000043c00e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x000000000043c01e : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x000000000043c02e : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x000000000043c03e : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x000000000043c04e : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000043bf6d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000043bf8e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000043bf9e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000043bfae : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000043bfbe : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000043bfce : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000043bfde : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000043bf1a : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x000000000043bfee : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000043bffe : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000043bf7e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000047b9c9 : add byte ptr [rax], al ; lea rdi, [rsp + 0x78] ; call r12
0x0000000000400a4c : add byte ptr [rax], al ; leave ; ret
0x00000000004c6e8a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov dword ptr [rax], eax ; add byte ptr [rax + 0xb], al ; sti ; jmp rsi
0x00000000004a356e : add byte ptr [rax], al ; loopne 0x4a3517 ; clc ; inc dword ptr [rax] ; sahf ; clc ; jmp qword ptr [rax]
0x00000000004c297e : add byte ptr [rax], al ; loopne 0x4c2988 ; clc ; call rsp
0x00000000004c6c3e : add byte ptr [rax], al ; loopne 0x4c6c2a ; cli ; jmp qword ptr [rdx]
0x00000000004c745e : add byte ptr [rax], al ; loopne 0x4c7491 ; sti ; call rsp
0x00000000004c8192 : add byte ptr [rax], al ; mov ah, 0x9c ; add byte ptr [rax], al ; or rsp, rdi ; call qword ptr [rax]
0x00000000004c8792 : add byte ptr [rax], al ; mov ah, 0xa2 ; add byte ptr [rax], al ; cwde ; frndint ; call qword ptr [rax]
0x00000000004c063e : add byte ptr [rax], al ; mov al, 0x63 ; cmc ; jmp qword ptr [rax]
0x00000000004c770e : add byte ptr [rax], al ; mov al, 0x8e ; jmp qword ptr [rsi]
0x00000000004c3b5e : add byte ptr [rax], al ; mov al, 0x9a ; clc ; jmp rbx
0x00000000004c1ece : add byte ptr [rax], al ; mov al, 0xc1 ; idiv edi ; retf 2
0x000000000043aeee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000043973e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004c3dde : add byte ptr [rax], al ; mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004c7206 : add byte ptr [rax], al ; mov byte ptr [rax], bl ; sti ; call qword ptr [rax]
0x00000000004c1dc6 : add byte ptr [rax], al ; mov byte ptr [rcx - 9], al ; call qword ptr [rax]
0x00000000004c62b6 : add byte ptr [rax], al ; mov byte ptr [rdi - 6], bh ; jmp rdi
0x00000000004c18f6 : add byte ptr [rax], al ; mov byte ptr [rdi], bh ; idiv bh ; ret
0x000000000043b9de : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000043b3be : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000464b0b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b3ce : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000042128e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000043f35e : add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000046ac6e : add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x00000000004428fe : add byte ptr [rax], al ; mov eax, 0x63 ; syscall
0x000000000046acae : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000046ac9e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000046acbe : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x0000000000417da1 : add byte ptr [rax], al ; mov eax, 0x6ca800 ; ret
0x000000000046d00d : add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x000000000044003e : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x00000000004429a0 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000043ed45 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x0000000000416bce : add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0x416ba9
0x0000000000464021 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000410341 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000474a76 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044ee13 : add byte ptr [rax], al ; mov eax, 3 ; syscall
0x000000000049adfe : add byte ptr [rax], al ; mov eax, 5 ; ret
0x00000000004428be : add byte ptr [rax], al ; mov eax, 8 ; syscall
0x00000000004165ee : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049e24e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e269 ; ret
0x000000000049e46e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e489 ; ret
0x000000000048874e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x244b0a] ; ret
0x000000000040f701 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004736b6 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000046ae73 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000040f935 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000444b43 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000047f549 : add byte ptr [rax], al ; mov ebx, 0x4bccc0 ; jmp 0x47f524
0x000000000046ae6e : add byte ptr [rax], al ; mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000043b3fe : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004812f3 : add byte ptr [rax], al ; mov edi, 0x190 ; call 0x41dd49
0x0000000000402c66 : add byte ptr [rax], al ; mov edi, 0x6cc720 ; call rbx
0x000000000047281d : add byte ptr [rax], al ; mov edi, 0x7f ; call 0x43eb09
0x000000000049c158 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000049c180 : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000434f7e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043569e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000473d09 : add byte ptr [rax], al ; mov edx, r13d ; xor edi, edi ; call 0x43ff89
0x0000000000442a56 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000440f14 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000046a6a5 : add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004bff9a : add byte ptr [rax], al ; mov esp, 0x2000001a ; cmc ; jmp qword ptr [rcx]
0x00000000004bef9a : add byte ptr [rax], al ; mov esp, 0x3000000a ; std ; hlt ; call qword ptr [rdx]
0x00000000004c529a : add byte ptr [rax], al ; mov esp, 0x6000006d ; add dl, bh ; call rsi
0x000000000047b0f8 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004550d5 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000488062 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004880e6 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000470e04 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042cb8e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000049c4be : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000047a6b0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000044f78f : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000041689e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000044f85e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x000000000046683e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000046684e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000046685e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000046686e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000046687e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000046688e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000046689e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000414dd9 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410d50 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004152d5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000047853e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000471c3e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x0000000000464fae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041691e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c48e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c4ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c52e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c51e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c4de : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044582e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x287a91] ; ret
0x00000000004168fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b37b9] ; ret
0x00000000004748df : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c637 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040fb81 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041e0d2 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000041c0eb : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041692e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041e77f : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047aa79 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000044ed65 : add byte ptr [rax], al ; mov rdi, qword ptr [rdi] ; syscall
0x0000000000464f75 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464f47
0x0000000000441106 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440fd2 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440f4a : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440f3b : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000400464 : add byte ptr [rax], al ; mov rdi, r8 ; mov eax, ebp ; syscall
0x0000000000441390 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000041bf0c : add byte ptr [rax], al ; mov rdi, rbx ; call 0x418167
0x0000000000462976 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000046228b : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004004a0 : add byte ptr [rax], al ; mov rdi, rbx ; mov eax, r10d ; syscall
0x000000000043eb1e : add byte ptr [rax], al ; mov rdi, rdx ; mov eax, esi ; syscall
0x000000000040fdac : add byte ptr [rax], al ; mov rdi, rsi ; call 0x49c8a7
0x00000000004354de : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000417831 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417854
0x000000000049ca9e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x00000000004005d4 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e7 ; ret
0x0000000000474808 : add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004bef82 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; std ; hlt ; call qword ptr [rax]
0x000000000043fff6 : add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x000000000049a2ff : add byte ptr [rax], al ; movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x0000000000412497 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x000000000040dc31 : add byte ptr [rax], al ; movsxd rdi, ecx ; syscall
0x000000000044f954 : add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x0000000000411efe : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000043510e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004357ee : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043577e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004c563e : add byte ptr [rax], al ; nop ; adc al, 0xfa ; jmp rdx
0x00000000004c078e : add byte ptr [rax], al ; nop ; cmc ; call qword ptr [rsi]
0x000000000046ad7c : add byte ptr [rax], al ; nop ; mov eax, 0x15 ; syscall
0x000000000044007c : add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x000000000046ac8c : add byte ptr [rax], al ; nop ; mov eax, 0x66 ; syscall
0x000000000044005c : add byte ptr [rax], al ; nop ; mov eax, 0xa ; syscall
0x00000000004c54fe : add byte ptr [rax], al ; nop ; psubd mm7, mm7 ; retf
0x0000000000442eac : add byte ptr [rax], al ; nop ; ret
0x00000000004c41ea : add byte ptr [rax], al ; or al, 0x5d ; add byte ptr [rax], al ; jo 0x4c41d6 ; clc ; call qword ptr [rdx]
0x00000000004c7eea : add byte ptr [rax], al ; or al, 0x9a ; add byte ptr [rax], al ; add esp, edi ; jmp qword ptr [rax]
0x00000000004c3006 : add byte ptr [rax], al ; or al, dl ; std ; jmp qword ptr [rdx]
0x00000000004be7c6 : add byte ptr [rax], al ; or byte ptr [rax], bh ; hlt ; call qword ptr [rdx]
0x0000000000476a34 : add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004c6e8e : add byte ptr [rax], al ; or edi, ebx ; jmp rsi
0x00000000004c81ae : add byte ptr [rax], al ; or esp, edi ; call qword ptr [rdx]
0x00000000004c8196 : add byte ptr [rax], al ; or rsp, rdi ; call qword ptr [rax]
0x00000000004be966 : add byte ptr [rax], al ; pop rax ; add edi, esi ; call rdi
0x00000000004c7116 : add byte ptr [rax], al ; pop rax ; cdq ; std ; call rcx
0x000000000045c55d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045c62d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004008ee : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043e52a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000463027 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a62c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000442aed : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004116b4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400606 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004ce : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411c9b : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c313a : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], r8b ; sar byte ptr [rbx], 1 ; clc ; call qword ptr [rax]
0x00000000004c6c3a : add byte ptr [rax], al ; pop rsp ; xchg dword ptr [rax], eax ; add al, ah ; jrcxz 0x4c6c46 ; jmp qword ptr [rdx]
0x00000000004c27fe : add byte ptr [rax], al ; push rax ; add al, bh ; call qword ptr [rcx]
0x00000000004c23fe : add byte ptr [rax], al ; push rax ; fcomi st(7) ; jmp qword ptr [rbx]
0x00000000004bc6b6 : add byte ptr [rax], al ; push rax ; ret 0x4b
0x00000000004a3556 : add byte ptr [rax], al ; push rax ; retf
0x00000000004c297a : add byte ptr [rax], al ; pushfq ; add byte ptr [rax], r8b ; loopne 0x4c298c ; clc ; call rsp
0x00000000004c5fde : add byte ptr [rax], al ; rcl byte ptr [rcx - 6], 1 ; jmp rsp
0x0000000000401193 : add byte ptr [rax], al ; ret
0x00000000004a7786 : add byte ptr [rax], al ; ret 0
0x00000000004ae6fe : add byte ptr [rax], al ; ret 0x10
0x00000000004b03ce : add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0b66 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004af3d6 : add byte ptr [rax], al ; ret 0x24
0x00000000004af8c6 : add byte ptr [rax], al ; ret 0x33
0x00000000004a4006 : add byte ptr [rax], al ; ret 0x43e4
0x00000000004a49f6 : add byte ptr [rax], al ; ret 0x43f0
0x00000000004b2f46 : add byte ptr [rax], al ; ret 0x4572
0x00000000004adefe : add byte ptr [rax], al ; ret 0xa
0x00000000004ae2fe : add byte ptr [rax], al ; ret 0xd
0x00000000004b17a2 : add byte ptr [rax], al ; ret 1
0x00000000004b19a2 : add byte ptr [rax], al ; ret 2
0x00000000004b1ba2 : add byte ptr [rax], al ; ret 3
0x00000000004b1da2 : add byte ptr [rax], al ; ret 4
0x00000000004b1fa2 : add byte ptr [rax], al ; ret 5
0x00000000004adaa6 : add byte ptr [rax], al ; ret 6
0x00000000004b23a2 : add byte ptr [rax], al ; ret 7
0x00000000004b25a2 : add byte ptr [rax], al ; ret 8
0x00000000004b27a2 : add byte ptr [rax], al ; ret 9
0x00000000004a77aa : add byte ptr [rax], al ; retf
0x00000000004a77a6 : add byte ptr [rax], al ; retf 0
0x00000000004ae85e : add byte ptr [rax], al ; retf 0x11
0x00000000004b0406 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0ba6 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004af416 : add byte ptr [rax], al ; retf 0x24
0x00000000004af906 : add byte ptr [rax], al ; retf 0x33
0x00000000004bdd67 : add byte ptr [rax], al ; retf 0x3b9a
0x0000000000442d39 : add byte ptr [rax], al ; retf 0x4b55
0x00000000004bc59e : add byte ptr [rax], al ; retf 0x4bbb
0x00000000004ae05e : add byte ptr [rax], al ; retf 0xb
0x00000000004ae45e : add byte ptr [rax], al ; retf 0xe
0x00000000004aea7e : add byte ptr [rax], al ; retf 1
0x00000000004b19b2 : add byte ptr [rax], al ; retf 2
0x00000000004b1bb2 : add byte ptr [rax], al ; retf 3
0x00000000004ad906 : add byte ptr [rax], al ; retf 4
0x00000000004b1fb2 : add byte ptr [rax], al ; retf 5
0x00000000004b21b2 : add byte ptr [rax], al ; retf 6
0x00000000004b23b2 : add byte ptr [rax], al ; retf 7
0x00000000004b25b2 : add byte ptr [rax], al ; retf 8
0x00000000004b27b2 : add byte ptr [rax], al ; retf 9
0x00000000004b1d9e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004ae1a6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004c3e1e : add byte ptr [rax], al ; ror cl, 0xfd ; call qword ptr [rbx]
0x00000000004c46be : add byte ptr [rax], al ; sar byte ptr [rbp - 7], 1 ; call rdi
0x00000000004c313e : add byte ptr [rax], al ; sar byte ptr [rbx], 1 ; clc ; call qword ptr [rax]
0x00000000004c23fa : add byte ptr [rax], al ; sbb al, 0x3f ; add byte ptr [rax], al ; push rax ; fcomi st(7) ; jmp qword ptr [rbx]
0x00000000004c27fa : add byte ptr [rax], al ; sbb al, 0x43 ; add byte ptr [rax], al ; push rax ; add al, bh ; call qword ptr [rcx]
0x00000000004c8afa : add byte ptr [rax], al ; sbb al, 0xa6 ; add byte ptr [rax], al ; and byte ptr [rsi], dh ; std ; call rsp
0x00000000004c69ae : add byte ptr [rax], al ; sbb al, 0xfa ; jmp rdi
0x00000000004c6ce6 : add byte ptr [rax], al ; sbb bh, ch ; cli ; jmp qword ptr [rdx]
0x00000000004c4cbe : add byte ptr [rax], al ; sub ah, 0xf9 ; call qword ptr [rsi]
0x00000000004c770a : add byte ptr [rax], al ; sub al, 0x92 ; add byte ptr [rax], al ; mov al, 0x8e ; jmp qword ptr [rsi]
0x00000000004c820a : add byte ptr [rax], al ; sub al, 0x9d ; add byte ptr [rax], al ; or esp, edi ; call qword ptr [rdx]
0x000000000042f39c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000415d26 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x000000000046adcf : add byte ptr [rax], al ; sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x00000000004003d8 : add byte ptr [rax], al ; syscall
0x00000000004c53d6 : add byte ptr [rax], al ; test al, 5 ; cli ; jmp rdx
0x00000000004c1162 : add byte ptr [rax], al ; test byte ptr [rax + rax], ch ; add byte ptr [rax], bh ; sal ebp, 1 ; call rdx
0x00000000004c8762 : add byte ptr [rax], al ; test byte ptr [rdx - 0x46080000], ah ; cld ; call qword ptr [rax]
0x0000000000442859 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004009a3 : add byte ptr [rax], al ; test rax, rax ; je 0x40099f ; call rax
0x00000000004c87c6 : add byte ptr [rax], al ; xchg rax, rbx ; cld ; call qword ptr [rax]
0x00000000004c7112 : add byte ptr [rax], al ; xor al, 0x8c ; add byte ptr [rax], al ; pop rax ; cdq ; std ; call rcx
0x00000000004bef9e : add byte ptr [rax], al ; xor ch, bh ; hlt ; call qword ptr [rdx]
0x0000000000451d27 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040ec5b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a645 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041cb96 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411c6e : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004134fe : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x413519 ; ret
0x0000000000400cce : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x00000000004882d1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000043ec7a : add byte ptr [rax], al ; xor esi, esi ; mov eax, 2 ; syscall
0x0000000000403867 : add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; syscall
0x0000000000440e86 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440eab : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440ecf : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440eef : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004260ed : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400a48 : add byte ptr [rax], bh ; leave ; ret
0x00000000004c2207 : add byte ptr [rax], bh ; retf 0xfff7
0x00000000004c1167 : add byte ptr [rax], bh ; sal ebp, 1 ; call rdx
0x00000000004bef87 : add byte ptr [rax], bh ; std ; hlt ; call qword ptr [rax]
0x00000000004c6ce7 : add byte ptr [rax], bl ; out dx, eax ; cli ; jmp qword ptr [rdx]
0x00000000004bc6af : add byte ptr [rax], ch ; ret 0x4b
0x00000000004c6647 : add byte ptr [rax], ch ; scasb al, byte ptr [rdi] ; cli ; call rdx
0x000000000044ef0d : add byte ptr [rax], cl ; add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, r15d ; syscall
0x00000000004be7c7 : add byte ptr [rax], cl ; cmp ah, dh ; call qword ptr [rdx]
0x0000000000476a35 : add byte ptr [rax], cl ; je 0x476aa2 ; pop rbx ; ret
0x000000000049abde : add byte ptr [rax], cl ; mov byte ptr [rip + 0x231f79], 8 ; ret
0x000000000049abe5 : add byte ptr [rax], cl ; ret
0x00000000004bc697 : add byte ptr [rax], cl ; ret 0x4b
0x00000000004c3007 : add byte ptr [rax], cl ; sar ch, 1 ; jmp qword ptr [rdx]
0x00000000004a354f : add byte ptr [rax], dh ; retf
0x00000000004a355f : add byte ptr [rax], dh ; retf 0x42
0x00000000004bef9f : add byte ptr [rax], dh ; std ; hlt ; call qword ptr [rdx]
0x0000000000474806 : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004c27ff : add byte ptr [rax], dl ; clc ; call qword ptr [rcx]
0x000000000040107f : add byte ptr [rax], dl ; jmp 0x400fe3
0x00000000004a3547 : add byte ptr [rax], dl ; retf
0x00000000004a3b24 : add byte ptr [rax], dl ; stc ; push qword ptr [rax + 0xf] ; stc ; jmp rax
0x0000000000470eed : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047850d : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000047e36d : add byte ptr [rax], r8b ; call rbx
0x00000000004c297d : add byte ptr [rax], r8b ; loopne 0x4c2989 ; clc ; call rsp
0x000000000046ac6d : add byte ptr [rax], r8b ; mov eax, 0x3f ; syscall
0x0000000000416bcd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; jmp 0x416baa
0x0000000000474a75 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000043b3ed : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000042cb8d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000043b42d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000047ae75 : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000412d1d : add byte ptr [rax], r8b ; ret
0x00000000004c313d : add byte ptr [rax], r8b ; sar byte ptr [rbx], 1 ; clc ; call qword ptr [rax]
0x000000000049a235 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004134dd : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000043f4b6 : add byte ptr [rbp + 0x14], dh ; mov eax, 0 ; syscall
0x000000000046aed6 : add byte ptr [rbp + 0x14], dh ; mov eax, 0x14 ; syscall
0x000000000043f516 : add byte ptr [rbp + 0x14], dh ; mov eax, 1 ; syscall
0x000000000043f456 : add byte ptr [rbp + 0x14], dh ; mov eax, 2 ; syscall
0x000000000043f706 : add byte ptr [rbp + 0x14], dh ; mov eax, 3 ; syscall
0x0000000000467577 : add byte ptr [rbp + 0x39440750], cl ; ret 0x8d0f
0x00000000004683d7 : add byte ptr [rbp + 0x39440753], cl ; retf 0x8d0f
0x000000000041b391 : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x000000000041b50e : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047612b : add byte ptr [rbp + 0x39], cl ; retf
0x000000000047892c : add byte ptr [rbp + 0x39], dh ; xor eax, eax ; add rsp, 0x68 ; ret
0x000000000045c55e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045c62e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000040070a : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000474847 : add byte ptr [rbp + 0x6348ff59], cl ; ret
0x00000000004787b2 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x000000000047914f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000047903f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000478854 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000049ec15 : add byte ptr [rbp + r8 - 0x18], sil ; ret 0xf7f4
0x000000000049ec16 : add byte ptr [rbp + rax - 0x18], dh ; ret 0xf7f4
0x00000000004c529b : add byte ptr [rbp + rbp*2 + 0x600000], bh ; cli ; call rsi
0x00000000004ae2f7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00000000004650fe : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047840a : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x000000000049edd4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x0000000000489881 : add byte ptr [rbp - 0x36], dh ; jmp 0x489858
0x000000000048cab1 : add byte ptr [rbp - 0x36], dh ; jmp 0x48ca88
0x000000000044285a : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004ae5a3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000041db9f : add byte ptr [rbp - 0x42], dh ; ret
0x0000000000475e1a : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x0000000000452969 : add byte ptr [rbp - 0x75], cl ; jl 0x45299a ; and byte ptr [rax + 1], cl ; ret
0x000000000045cbe9 : add byte ptr [rbp - 0x75], cl ; jl 0x45cc1a ; and byte ptr [rax + 1], cl ; ret
0x000000000040dc47 : add byte ptr [rbp - 0x76208037], al ; retf 0xdaf7
0x00000000004621cf : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000004480f4 : add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x0000000000423c0d : add byte ptr [rbp - 0x77], cl ; retf
0x0000000000467475 : add byte ptr [rbp - 0x77], cl ; retf 0x694d
0x000000000043e1dc : add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x0000000000469c5a : add byte ptr [rbp - 0x7c], al ; ror byte ptr [rax - 0x75], 5 ; ret
0x00000000004807df : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000004293a9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000474a68 : add byte ptr [rbx + 0x2567000d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043e52b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000004703b0 : add byte ptr [rbx + 0x25ce4115], cl ; add bh, dh ; ret 0x804
0x0000000000410d38 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x0000000000416997 : add byte ptr [rbx + 0x2b5c0505], al ; add byte ptr [rcx], al ; ret
0x000000000047bd11 : add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000442aee : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000045a62d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000043b3ff : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043af2f : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000047f54a : add byte ptr [rbx + 0x4bccc0], bh ; jmp 0x47f523
0x0000000000420357 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x0000000000434f7f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000470ee6 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000041e887 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000412731 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004116b5 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400607 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004004cf : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004c0873 : add byte ptr [rbx + 0x68b80000], dl ; cmc ; call qword ptr [rdx]
0x000000000046322e : add byte ptr [rbx + 0x7501046a], al ; retf 0xc748
0x000000000049e24f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000483d55 : add byte ptr [rbx + 0xa880], cl ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044f68a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004c27fb : add byte ptr [rbx + rax*2], bl ; add byte ptr [rax], al ; push rax ; add al, bh ; call qword ptr [rcx]
0x00000000004c105b : add byte ptr [rbx + rbp], bh ; add al, ah ; retf
0x00000000004c3003 : add byte ptr [rbx + rcx*2], ah ; add byte ptr [rax], al ; or al, dl ; std ; jmp qword ptr [rdx]
0x0000000000419039 : add byte ptr [rbx + rcx*4 + 0x2d], al ; ret
0x000000000046a6a6 : add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x0000000000442f8d : add byte ptr [rbx + rcx*4 + 0x35], al ; retf
0x000000000047054b : add byte ptr [rbx + rcx*4 + 0x40], cl ; xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x0000000000475272 : add byte ptr [rbx + rcx*4 + 0x45], al ; test byte ptr [rax - 0x77], cl ; ret
0x000000000047a617 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000480127 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004bc597 : add byte ptr [rbx + rdi*4 + 0x4b], dh ; add byte ptr [rax], al ; retf 0x4bbb
0x00000000004606f8 : add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000047ca37 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x47ca51 ; ret
0x0000000000467c6a : add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410ccf : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e5a6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000043e59f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000043e598 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000043e591 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043e58a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000043e583 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000040158c : add byte ptr [rbx - 0x3fceffd4], cl ; ret
0x000000000045de9e : add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000043e2f5 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000043e2e0 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x0000000000474ad1 : add byte ptr [rbx - 0x57fef1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x000000000047533e : add byte ptr [rbx - 0x57ffb1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x0000000000419f97 : add byte ptr [rbx - 0x76b3fe1e], al ; retf
0x0000000000443caf : add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000463028 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000410534 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000043d3e6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406803 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000462c54 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004073a0 : add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x000000000040b2d4 : add byte ptr [rbx - 0x7bf0fe06], al ; retf 0xf
0x000000000040a478 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000442b4f : add byte ptr [rbx - 0xc8a0008], al ; xor eax, eax ; leave ; ret
0x000000000041672e : add byte ptr [rbx - 0xd], bl ; ret
0x00000000004c41eb : add byte ptr [rbx*2 - 0x24900000], cl ; clc ; call qword ptr [rdx]
0x00000000004c820b : add byte ptr [rbx*4 + 0x9400000], ch ; cld ; call qword ptr [rdx]
0x00000000004c81f3 : add byte ptr [rbx*4 + 0x9480000], dl ; cld ; call qword ptr [rax]
0x0000000000470e37 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004c87f3 : add byte ptr [rbx], dl ; add byte ptr [rax], al ; call 0x114c84f7
0x0000000000494415 : add byte ptr [rcx + 0x29], cl ; retf
0x000000000044f00f : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00000000004658cf : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041b2cf : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000489bfd : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000426a66 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000047e5be : add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x000000000040f702 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000004752af : add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x00000000004155f6 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000470ee3 : add byte ptr [rcx + 0x5d5b006c], dh ; jmp rax
0x0000000000464b0c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042fdce : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000403963 : add byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x000000000042e64c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b278 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000049a300 : add byte ptr [rcx + 0x63], cl ; or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x000000000046ae6f : add byte ptr [rcx + 0xc], bh ; mov eax, ecx ; syscall
0x0000000000440725 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000045d4a4 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d427 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000041afc7 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000046f55e : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000403d45 : add byte ptr [rcx + 0xf], cl ; ret
0x000000000041718b : add byte ptr [rcx + 0xf], cl ; retf 0xff31
0x000000000043daef : add byte ptr [rcx + 1], cl ; ret
0x000000000049b4bf : add byte ptr [rcx + 1], cl ; ret 0xde89
0x000000000042085a : add byte ptr [rcx + 9], al ; ret
0x0000000000412682 : add byte ptr [rcx + r9*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041d40b : add byte ptr [rcx + r9*4 + 0xc], cl ; and al, 0xe8 ; retf 0xffa1
0x00000000004c6643 : add byte ptr [rcx + rax*4], ah ; add byte ptr [rax], ch ; scasb al, byte ptr [rdi] ; cli ; call rdx
0x00000000004c3e8b : add byte ptr [rcx + rbx*2 - 0x47b00000], ch ; clc ; call qword ptr [rcx]
0x00000000004c3e73 : add byte ptr [rcx + rbx*2 - 0x47b80000], dl ; clc ; call qword ptr [rdi]
0x00000000004c3e1b : add byte ptr [rcx + rbx*2], bh ; add byte ptr [rax], al ; ror cl, 0xfd ; call qword ptr [rbx]
0x0000000000444476 : add byte ptr [rcx + rcx*4 + 0x25], cl ; ret 0x2881
0x000000000042cb8f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x0000000000412683 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004c6e8b : add byte ptr [rcx + rcx*4 + 0xb400000], ch ; sti ; jmp rsi
0x000000000041d40c : add byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; retf 0xffa1
0x0000000000451845 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x41e2a6
0x0000000000440fd3 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000044ef0f : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, r15d ; syscall
0x0000000000473d0a : add byte ptr [rcx + rcx*4 - 0x16], al ; xor edi, edi ; call 0x43ff88
0x000000000047e4bf : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000441107 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004454c2 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000041acf8 : add byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, 3 ; syscall
0x0000000000400465 : add byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, ebp ; syscall
0x000000000049ca9f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x0000000000440f3c : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000044541c : add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x0000000000440f4b : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000048f05b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000048c1a3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x0000000000488fa3 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x000000000045b1a4 : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x000000000041d0ff : add byte ptr [rcx - 0x43], al ; ret
0x0000000000405584 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000449e63 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000449e80 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449e9d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000419f30 : add byte ptr [rcx - 0x73], cl ; and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000483170 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000004632ff : add byte ptr [rcx - 0x74e3dbac], cl ; adc dword ptr [rax - 0x77], ecx ; retf
0x000000000047fe5b : add byte ptr [rcx - 0x75], al ; adc bh, byte ptr [rcx] ; ret 0x850f
0x0000000000440a3f : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040e96f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000448ded : add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x000000000044aa87 : add byte ptr [rcx - 0x77], al ; add al, 0x24 ; mov r12, rsi ; jmp 0x44aa65
0x00000000004429b7 : add byte ptr [rcx - 0x77], al ; ret
0x000000000044f22a : add byte ptr [rcx - 0x77], al ; retf 0x894c
0x0000000000473508 : add byte ptr [rcx - 0x77], cl ; call 0xffffffffca8c4463
0x0000000000425a03 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000004434ca : add byte ptr [rcx - 0x77], cl ; retf
0x00000000004434f7 : add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x00000000004115a3 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000458b8e : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000491d5b : add byte ptr [rcx - 0x7d], cl ; jmp 0x491d77
0x00000000004964db : add byte ptr [rcx - 0x7d], cl ; jmp 0x4964f7
0x0000000000496adb : add byte ptr [rcx - 0x7d], cl ; jmp 0x496af7
0x0000000000496ddb : add byte ptr [rcx - 0x7d], cl ; jmp 0x496df7
0x00000000004970db : add byte ptr [rcx - 0x7d], cl ; jmp 0x4970f7
0x00000000004973db : add byte ptr [rcx - 0x7d], cl ; jmp 0x4973f7
0x00000000004976db : add byte ptr [rcx - 0x7d], cl ; jmp 0x4976f7
0x00000000004441a7 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000445f17 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000046cabf : add byte ptr [rcx - 0x7d], cl ; ret 0x4b30
0x0000000000422bef : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041fea0 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004217bf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041ecf9 : add byte ptr [rcx - 0x80], al ; clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x000000000041837f : add byte ptr [rcx - 0xa], al ; ret
0x000000000041a289 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a293 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000047cf11 : add byte ptr [rcx - 0xb37b], cl ; inc dword ptr [rcx - 0x77] ; ret
0x000000000047ca3a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000004a34b8 : add byte ptr [rcx - 8], al ; call qword ptr [rax]
0x0000000000426212 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426238 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004c7203 : add byte ptr [rcx*4 + 0x18880000], ah ; sti ; call qword ptr [rax]
0x0000000000443102 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x0000000000474a6e : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000400969 : add byte ptr [rcx], al ; ret
0x00000000004442fc : add byte ptr [rcx], bh ; ret
0x0000000000400c9c : add byte ptr [rcx], bh ; ret 0x860f
0x0000000000468289 : add byte ptr [rcx], bh ; ror dword ptr [rdi], 0x94 ; ret
0x000000000049cb10 : add byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000045b92c : add byte ptr [rcx], ch ; ret 0xd089
0x000000000041398a : add byte ptr [rcx], cl ; ret 0x8948
0x00000000004a080d : add byte ptr [rcx], dh ; fucomi st(0) ; retf
0x000000000043ec7b : add byte ptr [rcx], dh ; idiv byte ptr [rax + 2] ; syscall
0x000000000047b637 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ec5c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046b20f : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b20a ; ret
0x000000000046ae8a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46aec1 ; ret
0x0000000000488cc7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000004134ff : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413518 ; ret
0x000000000047a928 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004882d2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000447d4e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446f47 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x00000000004473ce : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044431b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000046bcd7 : add byte ptr [rcx], dh ; sar byte ptr [rdx + 1], 0xeb ; retf
0x000000000048b179 : add byte ptr [rcx], dh ; test byte ptr [rcx + rcx*4 + 0x44], 0x24 ; xor al, ch ; retf 0xf751
0x00000000004812f4 : add byte ptr [rdi + 0x190], bh ; call 0x41dd48
0x0000000000474a6b : add byte ptr [rdi + 0x25], ah ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004654cb : add byte ptr [rdi + 0x4a1f8c], bh ; call 0x4017c8
0x000000000041af1b : add byte ptr [rdi + 0x4a243c], bh ; call 0x417158
0x000000000041af1a : add byte ptr [rdi + 0x4a243c], dil ; call 0x417159
0x000000000041af02 : add byte ptr [rdi + 0x4a246b], bh ; call 0x417158
0x000000000041af01 : add byte ptr [rdi + 0x4a246b], dil ; call 0x417159
0x0000000000442542 : add byte ptr [rdi + 0x4a4d5d], bh ; mov eax, ebx ; syscall
0x0000000000442571 : add byte ptr [rdi + 0x4a4d68], bh ; mov eax, ebx ; syscall
0x000000000044f514 : add byte ptr [rdi + 0x4a6ca0], bh ; mov eax, ecx ; syscall
0x0000000000474d72 : add byte ptr [rdi + 0x4b6154], bh ; call 0x4017c8
0x0000000000432d85 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000004458d0 : add byte ptr [rdi + 0x6cc6d0], bh ; call rax
0x00000000004458cf : add byte ptr [rdi + 0x6cc6d0], r15b ; call rax
0x0000000000402c67 : add byte ptr [rdi + 0x6cc720], bh ; call rbx
0x000000000047ac61 : add byte ptr [rdi + 0x6cc9c0], bh ; call rax
0x000000000047ad8c : add byte ptr [rdi + 0x6cc9c4], bh ; call rdx
0x000000000047281e : add byte ptr [rdi + 0x7f], bh ; call 0x43eb08
0x000000000049c159 : add byte ptr [rdi + 1], bh ; call r14
0x000000000049c181 : add byte ptr [rdi + 1], bh ; call rax
0x00000000004c2bf3 : add byte ptr [rdi + rax*2], dl ; add byte ptr [rax], al ; call 0x114c241d
0x00000000004c6c3b : add byte ptr [rdi + rax*4], bl ; add al, ah ; jrcxz 0x4c6c45 ; jmp qword ptr [rdx]
0x000000000045b884 : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000045a870 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004c745b : add byte ptr [rdi + rcx*4], bh ; add al, ah ; sub bh, bl ; call rsp
0x00000000004c23fb : add byte ptr [rdi + rdi], bl ; add byte ptr [rax], al ; push rax ; fcomi st(7) ; jmp qword ptr [rbx]
0x00000000004434c7 : add byte ptr [rdi - 0x76b6ff94], bl ; retf
0x00000000004434f4 : add byte ptr [rdi - 0x76b6ff94], bl ; retf 0x34c
0x0000000000443581 : add byte ptr [rdi - 0x76b7ff94], bl ; retf 0x348
0x00000000004a3e38 : add byte ptr [rdi - 7], dh ; call qword ptr [rax]
0x00000000004c42c7 : add byte ptr [rdi], bh ; ret 0xfff3
0x000000000043471a : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000043e487 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043577f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004357ef : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448cee : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462c47 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000044815a : add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x0000000000422a5f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000004669c0 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000411eff : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042e65f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004262bf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042cebf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042615f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042614f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042613f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000467367 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d728 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000004032e3 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000004a3d28 : add byte ptr [rdi], cl ; stc ; push qword ptr [rax + 0xe] ; stc ; call rax
0x000000000044959a : add byte ptr [rdi], cl ; test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000420854 : add byte ptr [rdi], cl ; test cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000460cc9 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x0000000000451e69 : add byte ptr [rdi], cl ; test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047dd08 : add byte ptr [rdi], cl ; test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000044a07c : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x76fffff9], ebp ; retf 0x8b49
0x000000000042016a : add byte ptr [rdi], cl ; test edi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000040edd9 : add byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045e0cb : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000467e19 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000443106 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x0000000000467d8d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046bc9a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000476125 : add byte ptr [rdi], cl ; xchg edx, eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000042677e : add byte ptr [rdx + 0x42fc80], bh ; cmove rax, rdx ; ret
0x000000000043aeef : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x000000000043973f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000004c078b : add byte ptr [rdx + 0x67900000], ch ; cmc ; call qword ptr [rsi]
0x0000000000444b3f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x000000000049c2f6 : add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004bff9b : add byte ptr [rdx + rbx + 0x4e200000], bh ; cmc ; jmp qword ptr [rcx]
0x00000000004c7eeb : add byte ptr [rdx + rbx*4], cl ; add byte ptr [rax], al ; add esp, edi ; jmp qword ptr [rax]
0x00000000004adef7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004bef83 : add byte ptr [rdx + rcx - 0x2c80000], ah ; hlt ; call qword ptr [rax]
0x00000000004bef9b : add byte ptr [rdx + rcx - 0x2d00000], bh ; hlt ; call qword ptr [rdx]
0x00000000004c770b : add byte ptr [rdx + rdx*4], ch ; add byte ptr [rax], al ; mov al, 0x8e ; jmp qword ptr [rsi]
0x00000000004c7753 : add byte ptr [rdx + rdx*4], dh ; add al, cl ; cmp bl, bh ; jmp qword ptr [rdx]
0x00000000004c8793 : add byte ptr [rdx - 0x26680000], dh ; cld ; call qword ptr [rax]
0x00000000004c8763 : add byte ptr [rdx - 0x46080000], al ; cld ; call qword ptr [rax]
0x0000000000469ad0 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469ae5
0x0000000000489055 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000044f78d : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000400462 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov rdi, r8 ; mov eax, ebp ; syscall
0x00000000004a38e4 : add byte ptr [rdx], bl ; stc ; call qword ptr [rax + 0x20fff919]
0x0000000000442a57 : add byte ptr [rsi + 0x80], bh ; syscall
0x000000000042e954 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000457f63 : add byte ptr [rsi + 0xf], ah ; ror byte ptr cs:[rdi], 0x8a ; ret 8
0x0000000000426054 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440f15 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000441102 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000440fce : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000440f46 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x0000000000441380 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x00000000004410f3 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000440fbf : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000440f37 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x000000000049e867 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000004c9228 : add byte ptr [rsi + rcx + 0x10], bh ; add dword ptr [rdx], 0x69 ; ret
0x00000000004c1b3b : add byte ptr [rsi + rsi], bl ; add al, dh ; jne 0x4c1b41 ; call qword ptr [rax]
0x0000000000467471 : add byte ptr [rsi - 0x38], bh ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x000000000046ad7d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x15 ; syscall
0x000000000044007d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x1c ; syscall
0x000000000046ac8d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x66 ; syscall
0x000000000044005d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xa ; syscall
0x0000000000442ead : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004a3dfc : add byte ptr [rsi - 7], dh ; call qword ptr [rax]
0x00000000004c8afb : add byte ptr [rsi], bl ; add byte ptr [rax], al ; and byte ptr [rsi], dh ; std ; call rsp
0x00000000004a3abc : add byte ptr [rsi], bl ; stc ; call qword ptr [rax + 0x20fff91d]
0x00000000004c297b : add byte ptr [rsp + rax*2 + 0x1e00000], bl ; clc ; call rsp
0x00000000004c1163 : add byte ptr [rsp + rbp - 0x2ec80000], al ; cmc ; call rdx
0x00000000004c016b : add byte ptr [rsp + rbx + 0x54800000], cl ; cmc ; call qword ptr [rcx]
0x00000000004c8193 : add byte ptr [rsp + rbx*4 + 0x9480000], dh ; cld ; call qword ptr [rax]
0x00000000004c313b : add byte ptr [rsp + rcx*2], bl ; add al, dl ; cmp edi, eax ; call qword ptr [rax]
0x00000000004c7113 : add byte ptr [rsp + rcx*4], dh ; add byte ptr [rax], al ; pop rax ; cdq ; std ; call rcx
0x00000000004bf943 : add byte ptr [rsp + rdx], ah ; add byte ptr [rax + 0x2d], ch ; cmc ; call qword ptr [rax]
0x00000000004c18f3 : add byte ptr [rsp + rsi], dl ; add byte ptr [rax], al ; mov byte ptr [rdi], bh ; idiv bh ; ret
0x000000000044f1b1 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x000000000045c9b6 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000469fa0 : add byte ptr es:[rax + 0x39], cl ; retf
0x000000000045c6a4 : add byte ptr es:[rax + 0x63], cl ; retf 0x8948
0x0000000000469687 : add byte ptr es:[rax + 0xf], cl ; retf 0x8948
0x0000000000469dcb : add byte ptr es:[rax + 1], cl ; retf
0x0000000000469457 : add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf091daf
0x0000000000468043 : add byte ptr es:[rax - 0x7d], cl ; ret
0x0000000000469c59 : add byte ptr es:[rbp - 0x7c], al ; ror byte ptr [rax - 0x75], 5 ; ret
0x0000000000417189 : add byte ptr es:[rcx + 0xf], cl ; retf 0xff31
0x0000000000467e18 : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000467d8c : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000469acf : add byte ptr es:[rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469ae6
0x0000000000469ace : add byte ptr es:[rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469ae7
0x0000000000425e08 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000442857 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004134d0 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004c49f5 : add byte ptr gs:[rax], al ; in al, 0xf9 ; jmp rax
0x0000000000411c33 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004458ce : add byte ptr gs:[rdi + 0x6cc6d0], r15b ; call rax
0x00000000004ae303 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x0000000000414200 : add ch, al ; pop rdx ; retf
0x000000000045887f : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004bb55c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004bb55d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000046751b : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000458d80 : add ch, byte ptr [rcx] ; retf 0xd189
0x0000000000464e1a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000045d4e0 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000041aedd : add ch, cl ; paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000472628 : add ch, cl ; ret 0xfffd
0x000000000045a949 : add cl, bl ; in eax, 0xdf ; loopne 0x45a8de ; ret 0xe680
0x00000000004ba92a : add cl, bl ; retf 0xea91
0x000000000041a62c : add cl, bpl ; retf 0xfffe
0x0000000000439767 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000045ddde : add cl, byte ptr [rax + 0x29] ; ret
0x00000000004896f4 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048971d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000044b86c : add cl, byte ptr [rax + 0x39] ; int 0xf
0x0000000000449b23 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046fa1b : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x00000000004324aa : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x000000000045c5ed : add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x000000000041d7dc : add cl, byte ptr [rax + 0xf] ; retf 0x8348
0x0000000000410719 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000483fb5 : add cl, byte ptr [rax + 1] ; ret
0x000000000044d193 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000439768 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000004396d5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047c061 : add cl, byte ptr [rax - 0x77] ; pop rsp ; and al, 0x78 ; call r12
0x00000000004165d2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000041b0c2 : add cl, byte ptr [rax - 0x7d] ; enter 0x4801, -0x7d ; ret 0x4810
0x000000000047b510 : add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcbd0fd20
0x000000000046b2d9 : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x0000000000479a6c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00000000004238a0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000448734 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x0000000000423903 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000464441 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000004bfd40 : add cl, byte ptr [rbp + 0xa] ; ret
0x000000000048a0e3 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004355c2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000041c164 : add cl, byte ptr [rcx + 0x548d48d0] ; ret
0x0000000000403d7b : add cl, byte ptr [rcx + 0x75] ; retf
0x000000000047d6a4 : add cl, byte ptr [rcx - 0x73] ; jl 0x47d676 ; adc byte ptr [rax - 0x77], cl ; retf 0x8b48
0x000000000043f67f : add cl, byte ptr [rdi] ; ret 0x8348
0x000000000043f5d7 : add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000404488 : add cl, byte ptr [rdi] ; retf 0x8b48
0x000000000041b508 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000462e25 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000043e25d : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000004c7c47 : add cl, byte ptr [rdx] ; ret
0x000000000047673d : add cl, ch ; mov esi, 0x89fffffe ; ret 0x758b
0x0000000000443f1f : add cl, ch ; ret
0x0000000000408678 : add cl, ch ; ret 0xffe2
0x0000000000472554 : add cl, ch ; ret 0xfffd
0x0000000000407be4 : add cl, ch ; retf
0x000000000048ba6a : add cl, ch ; retf 0xfff2
0x00000000004539a0 : add cl, ch ; retf 0xfffa
0x000000000043f08f : add cl, ch ; retf 0xfffc
0x000000000041f31e : add cl, ch ; retf 0xfffd
0x000000000041a62d : add cl, ch ; retf 0xfffe
0x0000000000400a4d : add cl, cl ; ret
0x00000000004ba7e3 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004ba7e2 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004bfc48 : add dh, ah ; ret
0x00000000004b1fab : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x0000000000417f6b : add dh, al ; and al, 0x10 ; add al, ch ; retf 0x3a2
0x0000000000465672 : add dh, al ; and al, 0x14 ; add al, ch ; ret
0x00000000004b961e : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004b13f7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b3d57 : add dh, bl ; add eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000435773 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043ff2b : add dh, bl ; ret
0x0000000000484448 : add dh, byte ptr [rax] ; jmp 0x480ee1
0x00000000004bfb46 : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x000000000049e872 : add dh, byte ptr [rbp + 6] ; mov eax, 8 ; ret
0x0000000000470a40 : add dh, byte ptr [rdi + rbx - 0x7d] ; retf 0x4108
0x0000000000412cf3 : add dh, byte ptr [rdx + rsi + 0x48] ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000041760a : add dh, dh ; ret
0x0000000000447155 : add dh, dh ; ret 0x4801
0x0000000000426918 : add dh, dh ; ret 0x7404
0x0000000000400eda : add dh, dh ; ret 0x7420
0x000000000043be17 : add dh, dh ; ret 0x7501
0x000000000043be24 : add dh, dh ; ret 0x7502
0x000000000043be31 : add dh, dh ; ret 0x7504
0x000000000043bde9 : add dh, dh ; ret 0x7510
0x000000000043bdf6 : add dh, dh ; ret 0x7520
0x000000000043be03 : add dh, dh ; ret 0x7540
0x000000000041b505 : add dh, dh ; ret 0xf02
0x0000000000470a2a : add dh, dh ; ret 0xf08
0x00000000004c52a1 : add dl, bh ; call rsi
0x000000000046d00b : add dl, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0x9e ; syscall
0x00000000004c1be4 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000449e66 : add dword ptr [r8 + 0x39], r9d ; ret
0x000000000046255e : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462cb2 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00000000004494d0 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000043aef1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000047e701 : add dword ptr [rax + 0x29], ecx ; retf 0x148
0x000000000048adc2 : add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x000000000047ea61 : add dword ptr [rax + 0x29], ecx ; retf 0x8d48
0x0000000000415251 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000004748b9 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004748cb : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x0000000000479c00 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00000000004598dd : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x000000000041cb3d : add dword ptr [rax + 0x39], ecx ; retf
0x000000000047c424 : add dword ptr [rax + 0x39], ecx ; retf 0xf40
0x000000000049cc49 : add dword ptr [rax + 0x63], ecx ; ret
0x0000000000475b16 : add dword ptr [rax + 0xf], ecx ; retf 0x2948
0x000000000047bfad : add dword ptr [rax + 1], ecx ; ret
0x000000000040dbc6 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000049e862 : add dword ptr [rax + 3], edi ; je 0x49e879 ; ret
0x000000000041c99a : add dword ptr [rax + 9], ecx ; retf 0x8948
0x00000000004c4f6e : add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000004ba3db : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4ba447 ; retf
0x00000000004583c6 : add dword ptr [rax - 0x39], ecx ; ret 0xfff0
0x00000000004028b3 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000049b5aa : add dword ptr [rax - 0x73], ecx ; push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x0000000000439741 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000047475d : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000004396d2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000415053 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x00000000004188ce : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004151ea : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000004655a1 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000471d97 : add dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000412f3f : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x000000000047b514 : add dword ptr [rax - 0x77], ecx ; retf
0x00000000004746bd : add dword ptr [rax - 0x7d], ecx ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004258c2 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000473974 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046255f : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000450729 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041b0c6 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000044471c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x0000000000452c03 : add dword ptr [rax - 0x7d], ecx ; ret 0x4910
0x0000000000446e2e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x0000000000489fd4 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000047d7d3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8008
0x0000000000462cb3 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x000000000048141a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048920c : add dword ptr [rax], 0x840f0000 ; retf
0x00000000004c6645 : add dword ptr [rax], 0xfaae2800 ; call rdx
0x00000000004812f7 : add dword ptr [rax], eax ; add al, ch ; retf 0xfff9
0x000000000040502a : add dword ptr [rax], eax ; add al, ch ; scasb al, byte ptr [rdi] ; retf
0x000000000049adbb : add dword ptr [rax], eax ; add bl, ch ; retf
0x000000000040f9d6 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000044c376 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000044b4ee : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000473a84 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044739e : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000411d76 : add dword ptr [rax], eax ; add byte ptr [rax + 0x5b004a1d], ah ; ret
0x000000000047edf7 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000421169 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000041b27b : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004115f6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044f285 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049bfe5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000464a98 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000041e696 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041e7c0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000405a97 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c847 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000040eddd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042368d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000449924 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000042569e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042c10f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004235e1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d9f6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4803
0x000000000040d9a6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4804
0x000000000040d85a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d9ce : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040da1e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4807
0x000000000040d933 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4808
0x000000000040d8be : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000040dabe : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480a
0x000000000040da92 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480b
0x000000000040d900 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480c
0x000000000040d88e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000044c6d2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000464020 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000444ba1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b13fa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b05aa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004b03d2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b03ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0b62 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004b040a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b0402 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004b0ba2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000049c15b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x00000000004016a8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000440f17 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x000000000046a147 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46a114
0x000000000046bcdb : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x46bcb1
0x0000000000486fc5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x486f9a
0x000000000049ca4d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000044299e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000043ed43 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000044ee11 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 3 ; syscall
0x000000000049c6c8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000047a6ae : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000441104 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440fd0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440f48 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000044138e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000462974 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x0000000000462289 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000045c62b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415653 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043eadc : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004442c7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004003d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000041b50c : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000004251e8 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049bfbe : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400605 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004443b3 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000467c68 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410532 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000462c52 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000044f228 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf 0x894c
0x0000000000445f9c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041fe9e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000044959e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041d20b : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a291 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000468287 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 0x94 ; ret
0x0000000000413988 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000446f45 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000448158 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x000000000043be15 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000043be22 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000043be2f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000043bde7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000043bdf4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043be01 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000004213d8 : add dword ptr [rax], eax ; ret
0x0000000000425cc1 : add dword ptr [rax], edi ; ret
0x00000000004258c6 : add dword ptr [rax], edi ; retf 0xf41
0x000000000043e297 : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x00000000004ba924 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000047e4b2 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000048a0c3 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000041ecfd : add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x0000000000485fe7 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret 0x2941
0x00000000004427c9 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004bad0a : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000435632 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004b98ea : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x000000000046dce5 : add dword ptr [rbx - 0x77], eax ; je 0x46dc76 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046dce4 : add dword ptr [rbx - 0x77], eax ; je 0x46dc77 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000040d5fd : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004c94d9 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004c94d6 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000045c69f : add dword ptr [rcx + 0x26f4060d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000046a259 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x0000000000446f6a : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x00000000004473f8 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x000000000041bb3a : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x0000000000439771 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000462070 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000049db9f : add dword ptr [rcx - 0x77], ecx ; retf 0xb9e9
0x000000000049adb6 : add dword ptr [rcx - 0x78], eax ; xchg eax, esi ; jo 0x49adc6 ; add byte ptr [rax], al ; jmp 0x49ad94
0x0000000000445f4d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x00000000004042ed : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x00000000004256b7 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043f8eb : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000041be45 : add dword ptr [rcx], eax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000047772b : add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004752ca : add dword ptr [rcx], edi ; retf
0x00000000004ba835 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004c6e65 : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004c6da5 : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004c6e05 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004c6db6 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004c6e16 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6e76 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c2a6d : add dword ptr [rdi], 3 ; mov bh, 1 ; ret
0x00000000004c7c43 : add dword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004c7b92 : add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x000000000043e2f8 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e2e3 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000045be11 : add dword ptr [rdi], ecx ; test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041842e : add dword ptr [rdi], ecx ; test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041a7ad : add dword ptr [rdi], ecx ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000044739a : add dword ptr [rdi], ecx ; test edi, eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x000000000041d211 : add dword ptr [rdi], ecx ; test edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000474ad7 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475344 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043e1bd : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000049a070 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x0000000000403d75 : add dword ptr [rdx + 0x75], edx ; rol dword ptr [rax + 0x7549027a], 1 ; retf
0x000000000043dd82 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043597d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048854b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004bfc46 : add dword ptr [rdx + rax], -0xc ; ret
0x000000000046da07 : add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x00000000004ba50f : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004c0eb5 : add dword ptr [rdx], 0x43 ; ret
0x00000000004c6b75 : add dword ptr [rdx], 0x48 ; ret
0x00000000004c9264 : add dword ptr [rdx], 0x54 ; ret
0x00000000004c6634 : add dword ptr [rdx], 0x55 ; ret
0x00000000004c6b6c : add dword ptr [rdx], 0x5b ; ret
0x00000000004c920c : add dword ptr [rdx], 0x69 ; ret
0x00000000004c50bc : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000004c4e94 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000004c04b4 : add dword ptr [rdx], 2 ; ret
0x00000000004bfd52 : add dword ptr [rdx], ecx ; ret
0x00000000004bf673 : add dword ptr [rip + 0x2a00e52], 2 ; retf
0x0000000000416998 : add dword ptr [rip + 0x2b5c05], 1 ; ret
0x00000000004bf1b6 : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf1cc ; ret
0x00000000004bf1c4 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000439752 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004c0056 : add dword ptr [rsi], 0xa ; ret
0x00000000004c00c8 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000004c1be5 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000400d4d : add dword ptr [rsi], edx ; and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004c25c6 : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000497987 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c7c5a : add dword ptr es:[rdx], ecx ; ret
0x00000000004c6644 : add dword ptr fs:[rax], 0xfaae2800 ; call rdx
0x000000000041699a : add eax, 0x1002b5c ; ret
0x0000000000426d78 : add eax, 0x12ad3 ; ret
0x0000000000423848 : add eax, 0x14853 ; ret
0x00000000004261ea : add eax, 0x15e71 ; ret
0x00000000004267c4 : add eax, 0x17647 ; ret
0x00000000004213d5 : add eax, 0x1a966 ; ret
0x00000000004261ce : add eax, 0x1d ; ret
0x000000000044f78c : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004c172c : add eax, 0x2300e4a ; ret
0x0000000000488751 : add eax, 0x244b0a ; ret
0x0000000000476960 : add eax, 0x256892 ; jne 0x4769a9 ; ret
0x000000000047416c : add eax, 0x258bf7 ; mov qword ptr [rsi], rax ; ret
0x000000000047410b : add eax, 0x258c60 ; ret
0x000000000047402a : add eax, 0x258d41 ; add rsp, 8 ; ret
0x000000000044cba2 : add eax, 0x27fb51 ; ret
0x0000000000445832 : add eax, 0x287a91 ; ret
0x00000000004442e1 : add eax, 0x288fca ; test eax, eax ; je 0x4442f9 ; ret
0x0000000000420093 : add eax, 0x2aa6ec ; push rax ; retf 0x41
0x000000000041f2f5 : add eax, 0x2ab48a ; push rax ; retf 0x41
0x000000000041dcf6 : add eax, 0x2aca89 ; push rax ; retf 0x41
0x000000000041dd29 : add eax, 0x2ae8d6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416902 : add eax, 0x2b37b9 ; ret
0x0000000000416a06 : add eax, 0x2b5b99 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040158b : add eax, 0x2c8b00 ; xor eax, eax ; ret
0x0000000000400706 : add eax, 0x2ca9a5 ; pop rbp ; pop r12 ; ret
0x0000000000400965 : add eax, 0x2cb1f5 ; add ebx, esi ; ret
0x00000000004c1be3 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x0000000000489751 : add eax, 0x394d0000 ; retf
0x000000000043af88 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x00000000004397b8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000043b486 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000043b009 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x00000000004397f9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000047aab6 : add eax, 0x5b000000 ; ret
0x00000000004b1f9d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000418cc5 : add eax, 0x5c415d5b ; ret
0x00000000004b1fad : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x0000000000426e94 : add eax, 0x67 ; ret
0x000000000048a143 : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000043e1b7 : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000042327d : add eax, 0x83480000 ; ret 0x4910
0x000000000042a701 : add eax, 0x83480000 ; ret 0xe910
0x00000000004231d1 : add eax, 0x83480000 ; ret 0xeb10
0x000000000045677d : add eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000043af8b : add eax, 0x8428d48 ; ret
0x00000000004261e2 : add eax, 0x8449 ; ret
0x000000000048582a : add eax, 0x89000001 ; ret 0x348
0x0000000000424d68 : add eax, 0x894d0000 ; retf
0x0000000000449b1d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449e7e : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449e9b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000042f68a : add eax, 0xc0310000 ; ret
0x000000000043b00d : add eax, 0xc428d48 ; ret
0x000000000043baed : add eax, 0xc478d48 ; ret
0x00000000004413b2 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x00000000004413d7 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x0000000000441520 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x00000000004415b9 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000041a287 : add eax, 0xf6410000 ; ret 0xf01
0x0000000000435623 : add eax, 0xf7f0ff3 ; ret
0x000000000047396f : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000478a9a : add eax, 0xfffffff8 ; ret
0x000000000043e295 : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466811 : add eax, 1 ; ret
0x0000000000444b85 : add eax, 2 ; push rax ; call rbx
0x0000000000466808 : add eax, 2 ; ret
0x0000000000421628 : add eax, 3 ; ret
0x0000000000426ee7 : add eax, 4 ; ret
0x000000000044f6e9 : add eax, dword ptr [0] ; ret
0x0000000000470e38 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000418e63 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000041792b : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000047138e : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x0000000000418e3f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], cl ; retf 0x1b73
0x000000000049ddb1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; enter -0x72b4, 0x3d ; ret 0x22ed
0x000000000044dda8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046fd73 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042341d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a8a1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423441 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004457d6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000049e864 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; je 0x49e877 ; ret
0x000000000044011c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000046a6a3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004418fd : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000441954 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000004419d4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000441ad4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000412495 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000421629 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000040048a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000476a33 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; je 0x476aa4 ; pop rbx ; ret
0x0000000000495d0a : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e2f3 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000047e5bc : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x0000000000448deb : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x00000000004429b5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004976d9 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x4976f9
0x0000000000418432 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000442a55 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000470a28 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000400a47 : add eax, dword ptr [rax] ; mov eax, 0 ; leave ; ret
0x00000000004454c1 : add eax, dword ptr [rax] ; mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000044541b : add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x0000000000444dca : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000043e510 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e530 : add eax, dword ptr [rax] ; ret
0x00000000004c600b : add eax, dword ptr [rbx + 0xaf10204] ; ret
0x00000000004bfd3a : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000047ebe1 : add eax, dword ptr [rbx] ; call rax
0x00000000004c6db9 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004113a4 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047ce6d : add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x00000000004c7d13 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bf762 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000046affa : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000471c45 : add eax, dword ptr [rdi] ; call rax
0x0000000000478844 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475f99 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004c6e19 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c6e79 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004bf4b2 : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000004c4642 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004bfc42 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000004c25c2 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000004b3d59 : add eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004717ab : add eax, dword ptr [rsp] ; call rax
0x000000000049777f : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e5d8 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000049a0de : add eax, eax ; jmp r8
0x000000000049b606 : add eax, eax ; jmp rax
0x000000000045a578 : add eax, eax ; ret
0x0000000000425e06 : add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000049b2ae : add eax, ebp ; jmp rax
0x000000000049d63b : add eax, ebx ; cmp rdi, r8 ; jae 0x49d60b ; mov rdx, rcx ; jmp 0x49d623
0x0000000000416673 : add eax, ecx ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000425f0a : add eax, ecx ; ret
0x0000000000425f07 : add eax, edi ; add rax, rcx ; ret
0x00000000004c2981 : add eax, edi ; call rsp
0x00000000004a335d : add eax, edi ; jmp qword ptr [rax]
0x0000000000426144 : add eax, edi ; ret
0x0000000000423b16 : add eax, edx ; sub rax, rdi ; ret
0x000000000049bb8e : add eax, esi ; jmp rax
0x0000000000467387 : add eax, esi ; ret
0x000000000045a577 : add eax, r8d ; ret
0x0000000000457ab8 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047b8ad : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000047be5d : add ebp, eax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004b9477 : add ebp, ebp ; retf
0x00000000004717a7 : add ebx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000048878a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004c6e0a : add ebx, dword ptr [rbx + 3] ; ret
0x0000000000471443 : add ebx, dword ptr [rbx - 0xd] ; ret
0x00000000004bfd50 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x0000000000478b31 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004855aa : add ebx, ebp ; ret 0x8d48
0x00000000004357e3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040096a : add ebx, esi ; ret
0x00000000004268a4 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x426899 ; ret
0x0000000000486fc1 : add ecx, 8 ; mov esi, 1 ; jmp 0x486f9e
0x00000000004397a5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000418299 : add ecx, dword ptr [rax + 0x29] ; ret
0x0000000000449b3f : add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000464447 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000432aba : add ecx, dword ptr [rax + 0x39] ; retf 0x1073
0x00000000004153a5 : add ecx, dword ptr [rax + 0x39] ; retf 0x8948
0x000000000046dc1b : add ecx, dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000049b5ae : add ecx, dword ptr [rax + 0x63] ; ret
0x00000000004397a9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047de28 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041d53e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418d88 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000004345d8 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x0000000000447365 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000040e03d : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040e117 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000049ebd6 : add ecx, dword ptr [rax - 0x7f] ; jmp rax
0x0000000000411b27 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000048a103 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000435552 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004c6daa : add ecx, dword ptr [rbx + 3] ; ret
0x000000000043b424 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000047e47f : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004397a6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000004c1f9a : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c54a0 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000046b83d : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000045214c : add ecx, ebp ; ret
0x000000000046b3eb : add ecx, ebp ; retf 0xfffe
0x000000000042fcae : add ecx, ebx ; jmp r9
0x000000000042e652 : add ecx, ebx ; jmp rcx
0x000000000049a306 : add ecx, esi ; jmp rcx
0x0000000000470c27 : add edi, 0x1c ; mov eax, 0xca ; syscall
0x000000000049ee3f : add edi, dword ptr [rbp + 0x10] ; call r12
0x0000000000464757 : add edi, dword ptr [rcx] ; retf 0xf48
0x00000000004a3369 : add edi, eax ; jmp rax
0x000000000042fcab : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004be969 : add edi, esi ; call rdi
0x000000000047278c : add edx, dword ptr [rax] ; mov rax, rdx ; call rax
0x00000000004c9403 : add edx, dword ptr [rcx + rax + 0x41380e0a] ; ret
0x0000000000476455 : add edx, eax ; jmp 0x47646a
0x00000000004796c2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000452b13 : add edx, ebp ; call qword ptr [r10 + rax*8]
0x00000000004443d0 : add edx, ebx ; loopne 0x444434 ; pop rbp ; ret
0x00000000004bf622 : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000004c26ba : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000044d597 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00000000004c94da : add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000435703 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f3cc : add esi, ebx ; ret
0x000000000043e5c0 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042fca8 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000463378 : add esi, esi ; ret 0x7420
0x0000000000487ce7 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000040fe11 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e719 : add esp, 0x10 ; pop rbx ; ret
0x0000000000420577 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e701 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004736b2 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x0000000000473694 : add esp, 0x140 ; pop rbx ; ret
0x000000000043ff6d : add esp, 0x18 ; mov eax, edx ; ret
0x0000000000416df1 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410c97 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f3a0 : add esp, 0x18 ; ret
0x00000000004443b0 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000452393 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x00000000004880bc : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x00000000004458f1 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004150ff : add esp, 0x20 ; pop rbx ; ret
0x000000000047b149 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000040db98 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041495e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000488011 : add esp, 0x28 ; ret
0x000000000046ae42 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478729 : add esp, 0x30 ; pop rbx ; ret
0x000000000043ed60 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004787b6 : add esp, 0x38 ; ret
0x000000000047863c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046adb2 : add esp, 0x48 ; movzx eax, al ; ret
0x0000000000478848 : add esp, 0x48 ; ret
0x000000000043f717 : add esp, 0x4d ; add byte ptr [rax], al ; ret
0x00000000004785ca : add esp, 0x50 ; jmp qword ptr [rax]
0x0000000000488164 : add esp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x00000000004669cc : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f650 : add esp, 0x60 ; pop rbx ; ret
0x00000000004004ca : add esp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478932 : add esp, 0x68 ; ret
0x00000000004427cd : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040f931 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000046ab2b : add esp, 0x80 ; pop rbx ; ret
0x0000000000414517 : add esp, 0x80 ; ret
0x0000000000420036 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000046ac29 : add esp, 0x90 ; pop rbx ; ret
0x000000000046ac47 : add esp, 0x90 ; xor eax, eax ; pop rbx ; ret
0x000000000041305d : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040118f : add esp, 0x98 ; ret
0x000000000044fa49 : add esp, 0xd0 ; ret
0x000000000040f417 : add esp, 0xd8 ; ret
0x0000000000478505 : add esp, 8 ; jmp rax
0x0000000000411043 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000040fc9c : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043feca : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417998 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ebc0 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f513 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000488047 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041de9e : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004059e1 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401863 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412ca8 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002de : add esp, 8 ; ret
0x0000000000423969 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000473f81 : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004bab6b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x00000000004c69da : add esp, dword ptr [rdx + 0x380e0a01] ; ret
0x00000000004c7c59 : add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c7ef1 : add esp, edi ; jmp qword ptr [rax]
0x0000000000446e2d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x000000000042384a : add qword ptr [rax], rax ; ret
0x000000000041be44 : add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000004c7c42 : add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000047f54e : add r11b, bpl ; retf 0x1f0f
0x000000000042678c : add r11b, sil ; ret
0x00000000004357e2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435772 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435702 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000045f8fd : add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000495db0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049a0dd : add r8, rax ; jmp r8
0x00000000004744ba : add r8b, bpl ; call rdx
0x000000000045545d : add r8b, bpl ; pop rsp ; ret
0x0000000000454c1c : add r8b, bpl ; popfq ; retf
0x0000000000475056 : add r8b, bpl ; ret
0x000000000048e7ef : add r8b, bpl ; retf 0xf72f
0x0000000000475bef : add r8b, bpl ; retf 0xf8bb
0x00000000004740ef : add r8b, bpl ; retf 0xf8d6
0x0000000000474d76 : add r8b, bpl ; retf 0xfff8
0x000000000042fcad : add r9, r11 ; jmp r9
0x00000000004ba929 : add r9b, bl ; retf 0xea91
0x000000000041f31d : add r9b, bpl ; retf 0xfffd
0x000000000044b86b : add r9b, byte ptr [r8 + 0x39] ; int 0xf
0x0000000000449e83 : add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449ea0 : add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000497562 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000478a99 : add rax, -8 ; ret
0x000000000043e294 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466810 : add rax, 1 ; ret
0x0000000000466807 : add rax, 2 ; ret
0x0000000000466820 : add rax, 3 ; ret
0x000000000044f6e8 : add rax, qword ptr [0] ; ret
0x00000000004717aa : add rax, qword ptr [r12] ; call rax
0x0000000000471c44 : add rax, qword ptr [r15] ; call rax
0x0000000000448dea : add rax, qword ptr [rax] ; add byte ptr [rcx - 0x76ec7738], cl ; retf 0xe083
0x000000000047ebe0 : add rax, qword ptr [rbx] ; call rax
0x0000000000478843 : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475f98 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000044f6e7 : add rax, qword ptr fs:[0] ; ret
0x000000000049bb8d : add rax, r14 ; jmp rax
0x000000000049b605 : add rax, r8 ; jmp rax
0x000000000049b2ad : add rax, rbp ; jmp rax
0x0000000000425f09 : add rax, rcx ; ret
0x0000000000425f06 : add rax, rdi ; add rax, rcx ; ret
0x0000000000426143 : add rax, rdi ; ret
0x0000000000423b15 : add rax, rdx ; sub rax, rdi ; ret
0x000000000047be5c : add rbp, rax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004717a6 : add rbx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000042e651 : add rcx, r11 ; jmp rcx
0x000000000049a305 : add rcx, r14 ; jmp rcx
0x0000000000470c26 : add rdi, 0x1c ; mov eax, 0xca ; syscall
0x000000000049ee3e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000042fcaa : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000047278b : add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x0000000000452b12 : add rdx, r13 ; call qword ptr [r10 + rax*8]
0x00000000004796c1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000476454 : add rdx, rax ; jmp 0x47646b
0x0000000000487ce6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040fe10 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e718 : add rsp, 0x10 ; pop rbx ; ret
0x000000000043e700 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000473693 : add rsp, 0x140 ; pop rbx ; ret
0x000000000043ff6c : add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000410c96 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f39f : add rsp, 0x18 ; ret
0x00000000004443af : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000452392 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x00000000004880bb : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x00000000004458f0 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004150fe : add rsp, 0x20 ; pop rbx ; ret
0x000000000047b148 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000041495d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000488010 : add rsp, 0x28 ; ret
0x000000000046ae41 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478728 : add rsp, 0x30 ; pop rbx ; ret
0x000000000043ed5f : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004787b5 : add rsp, 0x38 ; ret
0x000000000047863b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046adb1 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000478847 : add rsp, 0x48 ; ret
0x00000000004785c9 : add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000488163 : add rsp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x00000000004669cb : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f64f : add rsp, 0x60 ; pop rbx ; ret
0x00000000004004c9 : add rsp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478931 : add rsp, 0x68 ; ret
0x00000000004427cc : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000046ab2a : add rsp, 0x80 ; pop rbx ; ret
0x0000000000414516 : add rsp, 0x80 ; ret
0x000000000046ac28 : add rsp, 0x90 ; pop rbx ; ret
0x000000000041305c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000040118e : add rsp, 0x98 ; ret
0x000000000044fa48 : add rsp, 0xd0 ; ret
0x000000000040f416 : add rsp, 0xd8 ; ret
0x0000000000478504 : add rsp, 8 ; jmp rax
0x0000000000411042 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000040fc9b : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043fec9 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417997 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040ebbf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f512 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000488046 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041de9d : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000401862 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412ca7 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x00000000004002dd : add rsp, 8 ; ret
0x0000000000423968 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000042c37e : add sil, sil ; ret 0x7404
0x000000000048854a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000004a37fc : and ah, ah ; clc ; call qword ptr [rax]
0x0000000000491cd5 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000488548 : and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000488754 : and al, 0 ; ret
0x0000000000417f6e : and al, 0x10 ; add al, ch ; retf 0x3a2
0x000000000048caaf : and al, 0x10 ; add byte ptr [rbp - 0x36], dh ; jmp 0x48ca8a
0x000000000043f67d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x000000000049c508 : and al, 0x10 ; add rsp, 0x28 ; ret
0x00000000004471d3 : and al, 0x10 ; call r12
0x000000000041b6bd : and al, 0x10 ; call rax
0x0000000000465029 : and al, 0x10 ; call rbx
0x000000000043faeb : and al, 0x10 ; mov eax, 0x101 ; syscall
0x000000000043fb6d : and al, 0x10 ; mov eax, 3 ; syscall
0x0000000000400c35 : and al, 0x10 ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x00000000004406b1 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004474c7 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447e2a : and al, 0x10 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000048800b : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000049cbb5 : and al, 0x10 ; mov rsi, qword ptr [r15] ; call r14
0x0000000000450646 : and al, 0x10 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000465675 : and al, 0x14 ; add al, ch ; ret
0x0000000000418cf6 : and al, 0x14 ; pop r12 ; ret
0x000000000041de9b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000044ba1c : and al, 0x18 ; call r14
0x0000000000400c92 : and al, 0x18 ; call rax
0x0000000000465024 : and al, 0x18 ; lea r9, [rsp + 0x10] ; call rbx
0x000000000041b6b8 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x0000000000444af8 : and al, 0x18 ; mov r9, r14 ; call rbx
0x0000000000448210 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000047b210 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x00000000004471ce : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000465102 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000418cc2 : and al, 0x1c ; je 0x418cd3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418cc1 : and al, 0x1c ; je 0x418cd4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004474cc : and al, 0x20 ; call rax
0x0000000000466b87 : and al, 0x20 ; lea rsi, [rsp + 0x40] ; call rbx
0x0000000000450c63 : and al, 0x20 ; mov rdi, r12 ; call r15
0x000000000046a47d : and al, 0x26 ; add byte ptr [rax + 0x39], cl ; retf
0x00000000004b96a4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000004787b0 : and al, 0x28 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x0000000000489bfb : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000447947 : and al, 0x28 ; call r12
0x0000000000448672 : and al, 0x28 ; call r14
0x0000000000446fd4 : and al, 0x28 ; call r15
0x0000000000447e2f : and al, 0x28 ; call rax
0x00000000004479fb : and al, 0x28 ; call rbx
0x0000000000466ea2 : and al, 0x28 ; lea rsi, [rsp + 0x30] ; call rbx
0x0000000000466c2f : and al, 0x28 ; lea rsi, [rsp + 0x40] ; call rbx
0x000000000041ebb3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000048fc8f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000044b25c : and al, 0x30 ; call r14
0x000000000047365f : and al, 0x30 ; call r9
0x000000000044987a : and al, 0x30 ; call rbx
0x000000000048812f : and al, 0x30 ; je 0x488143 ; mov edi, 0x6cb140 ; call rax
0x000000000040e0d9 : and al, 0x30 ; lea r15, [rbx + r14] ; call rax
0x0000000000466a6d : and al, 0x30 ; lea rcx, [rax + 1] ; call rbx
0x0000000000449cba : and al, 0x30 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447071 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004479f6 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000041accb : and al, 0x30 ; mov rdi, r9 ; mov eax, r8d ; syscall
0x000000000048229f : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000048ce32 : and al, 0x38 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000047895e : and al, 0x38 ; add rsp, 0x68 ; ret
0x000000000047365a : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000449875 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000478639 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004785c7 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000448bfa : and al, 0x40 ; call r15
0x0000000000466b8c : and al, 0x40 ; call rbx
0x0000000000448fa1 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000043ff6b : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000043f39e : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000041e1c3 : and al, 0x48 ; call rax
0x000000000046fac4 : and al, 0x48 ; lea edi, [rax + 0x6cb1e0] ; call rdx
0x000000000044230d : and al, 0x48 ; mov edx, eax ; mov eax, r12d ; syscall
0x0000000000447942 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000446fcf : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000448bf5 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000467292 : and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000049e03c : and al, 0x49 ; mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000044aa8b : and al, 0x49 ; mov esp, esi ; jmp 0x44aa61
0x000000000041af05 : and al, 0x4a ; add al, ch ; ret 0xffff
0x00000000004c3004 : and al, 0x4b ; add byte ptr [rax], al ; or al, dl ; std ; jmp qword ptr [rdx]
0x000000000044ba17 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041c9dd : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000418cf1 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000466da0 : and al, 0x60 ; lea rsi, [rsp + 0x30] ; call rbx
0x000000000041e4cb : and al, 0x68 ; call rax
0x000000000041f7ab : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004116ce : and al, 0x74 ; ret 0x8b4c
0x0000000000472cfa : and al, 0x75 ; ret
0x000000000047b9ce : and al, 0x78 ; call r12
0x000000000047be9d : and al, 0x78 ; lea rdi, [rsp + 0x78] ; call r12
0x000000000044866d : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b257 : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000048b7ef : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047c674 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000447151 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000041bec6 : and al, 0x89 ; ret 0xb48b
0x00000000004c7204 : and al, 0x8d ; add byte ptr [rax], al ; mov byte ptr [rax], bl ; sti ; call qword ptr [rax]
0x000000000041be42 : and al, 0x8d ; add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000043f5d5 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000046aef9 : and al, 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000043f479 : and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043f4d9 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000043f539 : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000043f729 : and al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000049c09b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000004787df : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000400c39 : and al, 0xc ; call r12
0x0000000000400c8d : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000488d4d : and al, 0xd5 ; and ch, bl ; add byte ptr [r8 + 1], cl ; retf 0x8b48
0x000000000047bc4a : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040888b : and al, 0xe8 ; call rbx
0x00000000004099e4 : and al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x00000000004099fa : and al, 0xe8 ; nop ; ret 0xffff
0x000000000040999b : and al, 0xe8 ; out dx, eax ; ret 0xffff
0x0000000000409a1c : and al, 0xe8 ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x0000000000409a32 : and al, 0xe8 ; pop rax ; ret 0xffff
0x0000000000406a17 : and al, 0xe8 ; ret
0x0000000000409a43 : and al, 0xe8 ; ret 0xffff
0x000000000040cfc0 : and al, 0xe8 ; retf 0xff8c
0x000000000041d410 : and al, 0xe8 ; retf 0xffa1
0x00000000004091c0 : and al, 0xe8 ; retf 0xffca
0x00000000004091e0 : and al, 0xe8 ; stosb byte ptr [rdi], al ; retf 0xffff
0x00000000004098f3 : and al, 0xe8 ; xchg eax, edi ; ret
0x00000000004085b5 : and al, 0xe9 ; retf
0x0000000000478670 : and al, 0xe9 ; retf 0x76
0x0000000000491a78 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000049cf95 : and al, 0xf ; ret 0x8348
0x000000000041c367 : and al, 0xf ; xchg eax, ebp ; ret 0x8348
0x000000000042c486 : and al, 0xf8 ; jne 0x42c362 ; ret
0x0000000000491a31 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491a37 : and al, 0xf8 ; ret
0x00000000004919eb : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004919f1 : and al, 0xfc ; ret
0x000000000044f7b7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000044f7bb : and al, 0xfe ; ret
0x000000000046a146 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000044fbcc : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000048987f : and al, 8 ; add byte ptr [rbp - 0x36], dh ; jmp 0x48985a
0x000000000043e716 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047acc2 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000409231 : and al, 8 ; call 0x405c94
0x0000000000409230 : and al, 8 ; call 0x405c95
0x00000000004405c8 : and al, 8 ; call rbx
0x0000000000488089 : and al, 8 ; je 0x48809d ; mov edi, 0x6cb140 ; call rax
0x000000000043f6e1 : and al, 8 ; jmp 0x43f658
0x000000000043f7e5 : and al, 8 ; mov eax, 0x4f ; syscall
0x0000000000478370 : and al, 8 ; mov edi, 0x6cb140 ; call rax
0x000000000041b774 : and al, 8 ; mov qword ptr [rsp], rcx ; call rdx
0x00000000004091a0 : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x405c98
0x000000000040919f : and al, 8 ; mov qword ptr [rsp], rdx ; call 0x405c99
0x000000000040e296 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000442352 : and al, 8 ; xor eax, eax ; syscall
0x00000000004a3814 : and al, ah ; clc ; push rax ; loope 0x4a381a ; call rax
0x00000000004a0a68 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000491e7e : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000410d36 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000040739e : and al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x000000000049edd3 : and al, byte ptr [rax] ; jne 0x49edbd ; pop rbx ; ret
0x000000000049e194 : and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000042391a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004a37e4 : and al, ch ; clc ; jmp qword ptr [rax]
0x0000000000403c10 : and al, ch ; retf 0x1a4
0x000000000047673b : and ax, 0xe900 ; mov esi, 0x89fffffe ; ret 0x758b
0x000000000045d4de : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004a0a66 : and bh, byte ptr [rsi + 0x22] ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a3ded : and bh, cl ; call rax
0x00000000004748b3 : and bl, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004627db : and bl, ch ; retf 0x9066
0x000000000040dc3f : and bl, dh ; ret
0x00000000004675be : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000419f33 : and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000414d24 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000049ea34 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000419fc9 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x0000000000410507 : and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x000000000045296e : and byte ptr [rax + 1], cl ; ret
0x00000000004239e8 : and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000423b0d : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000046590e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048f7d0 : and byte ptr [rax + rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x00000000004885b2 : and byte ptr [rax - 0x2f], cl ; jmp 0x488577
0x000000000040ea00 : and byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004bde1c : and byte ptr [rax - 0x6e5f0003], dl ; std ; jmp qword ptr [rax]
0x0000000000466b88 : and byte ptr [rax - 0x73], cl ; je 0x466bb7 ; call rbx
0x000000000041bbd3 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000045d40c : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000040ed43 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000469ad4 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x0000000000445f24 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x0000000000452446 : and byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000045aced : and byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000044f0c4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x44f0d8 ; call rax
0x000000000049d20b : and byte ptr [rax - 0x7b], cl ; ret 0x840f
0x0000000000445dbe : and byte ptr [rax - 0x7d], cl ; ret
0x0000000000419f34 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000412522 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000043fc2f : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043e5a3 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004920ce : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004bde14 : and byte ptr [rbp - 0x715f0003], cl ; std ; jmp qword ptr [rax]
0x00000000004c7d16 : and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bb448 : and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000405be8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004675bf : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004458f3 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bf765 : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000004bfd3d : and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000046063e : and byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x00000000004556a0 : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x00000000004bde24 : and byte ptr [rbx - 0x6b5f0003], dl ; std ; jmp qword ptr [rax]
0x0000000000462fc9 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004a3d08 : and byte ptr [rbx], dl ; stc ; jmp qword ptr [rax + 0x20fff912]
0x0000000000414d25 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00000000004c4576 : and byte ptr [rcx + 0xa], al ; ret
0x0000000000450c64 : and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000452395 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000004a3d00 : and byte ptr [rcx + rdi*8], dl ; jmp qword ptr [rax + 0x20fff913]
0x0000000000491a75 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000445eac : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x00000000004c30b0 : and byte ptr [rcx], dh ; clc ; jmp rsp
0x00000000004a3d18 : and byte ptr [rcx], dl ; stc ; jmp qword ptr [rax + 0x20fff910]
0x00000000004bde04 : and byte ptr [rdi - 0x775f0003], al ; std ; jmp qword ptr [rax]
0x0000000000445e99 : and byte ptr [rdi], cl ; test cl, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043bdf0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000044e205 : and byte ptr [rdx + 0x4a], 0 ; test rax, rax ; je 0x44e219 ; call rax
0x00000000004bde0c : and byte ptr [rdx - 0x745f0003], cl ; std ; jmp qword ptr [rax]
0x00000000004a3d10 : and byte ptr [rdx], dl ; stc ; jmp qword ptr [rax + 0x20fff911]
0x000000000042e6ea : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c4645 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004bde2c : and byte ptr [rsi - 0x685f0003], dl ; std ; jmp qword ptr [rax]
0x00000000004bffa0 : and byte ptr [rsi - 0xb], cl ; jmp qword ptr [rcx]
0x00000000004c8b00 : and byte ptr [rsi], dh ; std ; call rsp
0x00000000004a3af4 : and byte ptr [rsi], dl ; stc ; jmp qword ptr [rax + 0x10fff915]
0x0000000000466802 : and ch, 0xf ; je 0x466829 ; add rax, 2 ; ret
0x00000000004a377c : and ch, ah ; clc ; inc dword ptr [rax] ; out 0xf8, eax ; jmp rax
0x0000000000488d4f : and ch, bl ; add byte ptr [r8 + 1], cl ; retf 0x8b48
0x00000000004667ed : and cl, 0xf ; je 0x466815 ; ret
0x000000000041c6be : and cl, bpl ; ret 0xfff9
0x000000000047eb23 : and cl, byte ptr [rax + 0x29] ; fmul dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004262cd : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000041c6bf : and cl, ch ; ret 0xfff9
0x00000000004268b7 : and dh, dh ; ret 0x7504
0x000000000045d4dd : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004a37e8 : and dl, ch ; clc ; jmp qword ptr [rax]
0x0000000000497e4e : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000457919 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004bb1c2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000415c8c : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000048ee3c : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x000000000046896b : and dword ptr [rdi], edi ; add byte ptr es:[rax - 0x7d], cl ; ret
0x00000000004b8279 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004bb1c1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044f6eb : and eax, 0 ; ret
0x000000000049cd2a : and eax, 0x10468b48 ; add rsp, 8 ; ret
0x000000000047ca66 : and eax, 0x2d0 ; ret
0x000000000040ea51 : and eax, 0x30 ; call rax
0x000000000040ea09 : and eax, 0x30 ; call rdx
0x0000000000476963 : and eax, 0x38754000 ; ret
0x000000000043e50d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e52d : and eax, 0x3fc00 ; ret
0x000000000043e4ec : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004712e0 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000043f4fb : and eax, 0x4f ; add byte ptr [rax], al ; ret
0x000000000047416f : and eax, 0x6894800 ; ret
0x000000000043e560 : and eax, 0x7ff80000 ; ret
0x0000000000474a53 : and eax, 0x89485300 ; ret
0x000000000046a389 : and eax, 0x894c0026 ; ret
0x000000000041afc6 : and eax, 0x950f4100 ; ret
0x0000000000442a37 : and eax, 0xc ; cmp eax, 4 ; je 0x442a48 ; ret
0x0000000000406314 : and eax, 0xe8ef894c ; ret
0x0000000000400d4f : and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004444e6 : and eax, 0xffffffd0 ; or rax, 0xffffffffffffffff ; ret
0x0000000000478b2c : and eax, 2 ; sub eax, 1 ; ret
0x0000000000497ca5 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000491d59 : and eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; jmp 0x491d79
0x0000000000415c8d : and ebp, edi ; pop rbx ; ret
0x00000000004429d2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x4429e5 ; ret
0x00000000004b9974 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000042fc65 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042f398 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000041a04b : and ecx, dword ptr [rax + 0x39] ; ret
0x000000000041fe6c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000416a3c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x00000000004c5921 : and edx, edi ; jmp rdi
0x0000000000491a4e : and esi, 0xe0837fff ; jg 0x491a67 ; ret 0x5488
0x000000000043eb2e : and esp, esi ; mov rdi, rdx ; mov eax, r8d ; syscall
0x0000000000467017 : bnd je 0x467026 ; test edx, edx ; jne 0x467018 ; ret
0x000000000042cd5a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000426140 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000426150 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x0000000000426160 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x0000000000426130 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000042607f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042cf53 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000004239b6 : bsf eax, edx ; ret
0x0000000000423b12 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000042d070 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000423a02 : bsf rax, rdx ; ret
0x00000000004659d7 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000465c5b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000465b69 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x0000000000465a65 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x00000000004659d6 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000465c5a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000465b68 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x0000000000465a64 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000047bd57 : call 0x1009f57e
0x000000000047c6ba : call 0x1009fee1
0x00000000004c2bf8 : call 0x114c2418
0x00000000004c87f8 : call 0x114c84f2
0x0000000000452825 : call 0x1f54f317
0x000000000044b348 : call 0x2073698
0x000000000042c694 : call 0x24b751ed
0x000000000047393a : call 0x400352
0x000000000047393a : call 0x400357
0x0000000000411bac : call 0x400396
0x000000000041189c : call 0x400397
0x00000000004654d1 : call 0x4017c2
0x000000000047ed3e : call 0x4017c7
0x000000000040999c : call 0x405c92
0x000000000044b3ee : call 0x4076de
0x000000000041af08 : call 0x417152
0x000000000041bf11 : call 0x418162
0x000000000041d051 : call 0x419af2
0x00000000004205b1 : call 0x41c842
0x0000000000451a59 : call 0x41dd42
0x0000000000441dff : call 0x41e0e2
0x0000000000408674 : call 0x41e0e6
0x00000000004a0e73 : call 0x41e0e9
0x0000000000482039 : call 0x41e2a2
0x0000000000420380 : call 0x41f026
0x000000000040e871 : call 0x423988
0x000000000045ca28 : call 0x4268f7
0x00000000004100df : call 0x42c352
0x0000000000400721 : call 0x43e476
0x0000000000472824 : call 0x43eb02
0x0000000000473d10 : call 0x43ff82
0x0000000000456712 : call 0x442922
0x0000000000415ef1 : call 0x442992
0x0000000000402cad : call 0x44f6c2
0x000000000045dce8 : call 0x45a7a2
0x0000000000456d59 : call 0x4637b2
0x0000000000458796 : call 0x463876
0x000000000047810c : call 0x473d26
0x000000000048ceec : call 0x4791b2
0x00000000004180f3 : call 0x49068247
0x000000000047b547 : call 0x4911b697
0x000000000040fdb1 : call 0x49c8a2
0x00000000004babba : call 0x4c15d575
0x0000000000434d6a : call 0x4fc25d68
0x0000000000434d69 : call 0x4fc25d69
0x000000000047d6a3 : call 0x7cd51fb3
0x00000000004196fa : call 0xffffffff83466184
0x000000000047b8bb : call 0xffffffff8a09e1e2
0x000000000047ba22 : call 0xffffffff8a09e349
0x000000000047bc0f : call 0xffffffff8a09e536
0x000000000047c23b : call 0xffffffff8a09eb62
0x000000000047c398 : call 0xffffffff8a09ecbf
0x000000000047c566 : call 0xffffffff8a09ee8d
0x00000000004bab1a : call 0xffffffffab597610
0x00000000004b8ce3 : call 0xffffffffaf0e2b59
0x000000000047b53a : call 0xffffffffc270fd82
0x000000000041bfe8 : call 0xffffffffc27b07f9
0x00000000004598dc : call 0xffffffffc27ee0e6
0x000000000041c8a8 : call 0xffffffffc2cb10c1
0x000000000046933d : call 0xffffffffc37fdc4a
0x0000000000485f0a : call 0xffffffffc381ab14
0x0000000000466c6c : call 0xffffffffc3a2add2
0x000000000044fbc5 : call 0xffffffffc3f40b16
0x0000000000467c6c : call 0xffffffffc40dc4a5
0x0000000000426e57 : call 0xffffffffc412f7a8
0x0000000000423927 : call 0xffffffffc43ac278
0x000000000048ba79 : call 0xffffffffc7820286
0x000000000047350b : call 0xffffffffca8c4460
0x000000000047a4f4 : call 0xffffffffca943049
0x0000000000480004 : call 0xffffffffca948b59
0x000000000047a501 : call 0xffffffffce9c305b
0x0000000000480011 : call 0xffffffffce9c8b6b
0x00000000004c6928 : call 0xffffffffe74c6406
0x0000000000452b15 : call qword ptr [r10 + rax*8]
0x00000000004a3b17 : call qword ptr [rax + 0x10fff911]
0x00000000004a3b0f : call qword ptr [rax + 0x10fff912]
0x00000000004a3b07 : call qword ptr [rax + 0x10fff913]
0x00000000004a3aff : call qword ptr [rax + 0x10fff914]
0x00000000004a36df : call qword ptr [rax + 0x20fff8c3]
0x00000000004a38e7 : call qword ptr [rax + 0x20fff919]
0x00000000004a3abf : call qword ptr [rax + 0x20fff91d]
0x0000000000410577 : call qword ptr [rax + 0x80]
0x00000000004bde57 : call qword ptr [rax - 0x1f0002b3]
0x00000000004a3867 : call qword ptr [rax - 0x1f000726]
0x00000000004a387b : call qword ptr [rax - 0x1f000734]
0x00000000004a34a3 : call qword ptr [rax - 0x1f000775]
0x00000000004a334b : call qword ptr [rax]
0x0000000000400b58 : call qword ptr [rbx + 0x10]
0x00000000004015e8 : call qword ptr [rbx*8 + 0x6c9ed8]
0x000000000047e4c8 : call qword ptr [rbx]
0x00000000004a361b : call qword ptr [rcx - 0x3d]
0x000000000049a7fe : call qword ptr [rcx]
0x000000000046907d : call qword ptr [rdi]
0x00000000004a3993 : call qword ptr [rdx + 0x22fff91b]
0x0000000000452b16 : call qword ptr [rdx + rax*8]
0x00000000004bdf0f : call qword ptr [rdx - 0x2d00023a]
0x00000000004a3973 : call qword ptr [rdx]
0x00000000004a363f : call qword ptr [rsi + 0x16fff8bf]
0x00000000004a3647 : call qword ptr [rsi + 0x16fff8c0]
0x00000000004a364f : call qword ptr [rsi + 0x16fff8c1]
0x00000000004a366b : call qword ptr [rsi + 0x17fff8c5]
0x00000000004a363b : call qword ptr [rsi - 0x69000742]
0x00000000004929f2 : call qword ptr [rsi]
0x0000000000476fbc : call r11
0x0000000000400c3b : call r12
0x000000000040e060 : call r14
0x00000000004035c1 : call r15
0x000000000046297b : call r8
0x0000000000473661 : call r9
0x00000000004a3437 : call rax
0x0000000000402c6d : call rbx
0x000000000040558a : call rcx
0x00000000004035c2 : call rdi
0x000000000040ea0e : call rdx
0x000000000040e061 : call rsi
0x0000000000400c3c : call rsp
0x0000000000443520 : cdq ; add byte ptr [rdi - 0x76b6ff94], bl ; retf
0x000000000044f284 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000004baa20 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000416a07 : cdq ; pop rbx ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000441f43 : cdq ; sar ebp, 0xff ; mov rdi, qword ptr [r12] ; call rbx
0x00000000004c7119 : cdq ; std ; call rcx
0x000000000049ec13 : clc ; adc al, 0x4a ; add byte ptr [rbp + rax - 0x18], dh ; ret 0xf7f4
0x0000000000485dae : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000041bec3 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x000000000045900a : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004049e0 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7af0a707], al ; retf 0xfffb
0x000000000045dddd : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000041ecfc : clc ; add dword ptr [rbp - 0x77], ecx ; retf 0x894c
0x000000000040d5fc : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000043e1bc : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000047ce6c : clc ; add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x0000000000425f08 : clc ; add rax, rcx ; ret
0x00000000004a36de : clc ; call qword ptr [rax + 0x20fff8c3]
0x00000000004a3866 : clc ; call qword ptr [rax - 0x1f000726]
0x00000000004a387a : clc ; call qword ptr [rax - 0x1f000734]
0x00000000004a34a2 : clc ; call qword ptr [rax - 0x1f000775]
0x00000000004a343e : clc ; call qword ptr [rax]
0x00000000004c41c2 : clc ; call qword ptr [rbx]
0x00000000004a361a : clc ; call qword ptr [rcx - 0x3d]
0x00000000004a3626 : clc ; call qword ptr [rcx]
0x00000000004a366e : clc ; call qword ptr [rdi]
0x00000000004c3ad2 : clc ; call qword ptr [rdx]
0x00000000004a363e : clc ; call qword ptr [rsi + 0x16fff8bf]
0x00000000004a3646 : clc ; call qword ptr [rsi + 0x16fff8c0]
0x00000000004a364e : clc ; call qword ptr [rsi + 0x16fff8c1]
0x00000000004a366a : clc ; call qword ptr [rsi + 0x17fff8c5]
0x00000000004a363a : clc ; call qword ptr [rsi - 0x69000742]
0x00000000004a3642 : clc ; call qword ptr [rsi]
0x00000000004a3436 : clc ; call rax
0x00000000004c2982 : clc ; call rsp
0x000000000042fc09 : clc ; cmp rcx, rax ; jne 0x42fc3b ; xor eax, eax ; ret
0x000000000042fc08 : clc ; cmp rcx, rax ; jne 0x42fc3c ; xor eax, eax ; ret
0x00000000004746c0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004213b0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000412656 : clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000040175b : clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a3696 : clc ; dec dword ptr [rbx + 0x1bfff8c2] ; ret
0x000000000045515b : clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000456782 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000047a92d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004a370a : clc ; inc dword ptr [rax + 0x10fff8ed] ; loopne 0x4a3714 ; call rax
0x00000000004a374a : clc ; inc dword ptr [rax - 0x13] ; clc ; call rax
0x00000000004a3746 : clc ; inc dword ptr [rax - 0x15] ; clc ; inc dword ptr [rax - 0x13] ; clc ; call rax
0x00000000004a3776 : clc ; inc dword ptr [rax - 0x1d] ; clc ; jmp qword ptr [rax]
0x00000000004a37f6 : clc ; inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a3862 : clc ; inc dword ptr [rax - 0x27] ; clc ; call qword ptr [rax - 0x1f000726]
0x00000000004a3886 : clc ; inc dword ptr [rax - 0x2f000730] ; sar eax, 1 ; jmp qword ptr [rax]
0x00000000004a3832 : clc ; inc dword ptr [rax - 0x2f000737] ; retf 0xfff8
0x00000000004a346e : clc ; inc dword ptr [rax - 0x2f000786] ; jnp 0x4a3478 ; jmp qword ptr [rax]
0x00000000004a3876 : clc ; inc dword ptr [rax - 0x35] ; clc ; call qword ptr [rax - 0x1f000734]
0x00000000004a349e : clc ; inc dword ptr [rax - 0x76] ; clc ; call qword ptr [rax - 0x1f000775]
0x00000000004a3706 : clc ; inc dword ptr [rax - 0x7f000715] ; in eax, dx ; clc ; call qword ptr [rax]
0x00000000004a34b6 : clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a3592 : clc ; inc dword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp qword ptr [rax]
0x00000000004a377e : clc ; inc dword ptr [rax] ; out 0xf8, eax ; jmp rax
0x00000000004a36da : clc ; inc dword ptr [rax] ; ret
0x00000000004a3572 : clc ; inc dword ptr [rax] ; sahf ; clc ; jmp qword ptr [rax]
0x000000000044e529 : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004a3366 : clc ; inc eax ; add edi, eax ; jmp rax
0x00000000004a347e : clc ; inc eax ; jg 0x4a3480 ; call qword ptr [rax]
0x00000000004a358a : clc ; inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp rax
0x00000000004a3616 : clc ; inc ecx ; ret 0xfff8
0x00000000004a35da : clc ; inc edx ; mov esi, 0xbc60fff8 ; clc ; call qword ptr [rax]
0x00000000004a365e : clc ; inc esi ; ret
0x0000000000449d0e : clc ; jg 0x449c9d ; ret 0x5c77
0x00000000004a335e : clc ; jmp qword ptr [rax]
0x000000000047e418 : clc ; jmp qword ptr [rsi + 0xf]
0x00000000004c3f22 : clc ; jmp qword ptr [rsi]
0x00000000004a386a : clc ; jmp rax
0x00000000004c3b62 : clc ; jmp rbx
0x00000000004a35f2 : clc ; jmp rcx
0x00000000004c30b2 : clc ; jmp rsp
0x000000000042c487 : clc ; jne 0x42c361 ; ret
0x00000000004a36ee : clc ; lcall [rax] ; loopne 0x4a36f0 ; jmp rax
0x00000000004a369a : clc ; lcall [rbx] ; ret
0x000000000049c710 : clc ; leave ; ret
0x00000000004b9682 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004316e7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000432057 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434af7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432257 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434a67 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432457 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349d7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431703 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043594c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000049c7a8 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000043f409 : clc ; mov rsi, rdx ; mov eax, 5 ; syscall
0x0000000000491a32 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004a3462 : clc ; push qword ptr [rax + 0x50fff874] ; jbe 0x4a346c ; jmp qword ptr [rax]
0x00000000004a343a : clc ; push qword ptr [rax + 0x64] ; clc ; call qword ptr [rax]
0x00000000004a345a : clc ; push qword ptr [rax + 0x71] ; clc ; call qword ptr [rax]
0x00000000004a34aa : clc ; push qword ptr [rax + 0x79] ; clc ; jmp rax
0x00000000004a347a : clc ; push qword ptr [rax + 0x7e] ; clc ; inc eax ; jg 0x4a3484 ; call qword ptr [rax]
0x00000000004a37f2 : clc ; push qword ptr [rax - 0x20] ; clc ; inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a378e : clc ; push qword ptr [rax - 0x21] ; clc ; push qword ptr [rax] ; loope 0x4a3798 ; call qword ptr [rax]
0x00000000004a380e : clc ; push qword ptr [rax - 0x22] ; clc ; jmp qword ptr [rax]
0x00000000004a36d6 : clc ; push qword ptr [rax - 0x3e] ; clc ; inc dword ptr [rax] ; ret
0x00000000004a3792 : clc ; push qword ptr [rax] ; loope 0x4a3794 ; call qword ptr [rax]
0x00000000004a375e : clc ; push qword ptr [rax] ; out 0xf8, eax ; call qword ptr [rax]
0x00000000004a3452 : clc ; push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; clc ; call rax
0x0000000000410d3a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000415ce0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000442b51 : clc ; push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415c88 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00000000004a360e : clc ; push qword ptr [rcx + 0x31fff8c1] ; ret 0xfff8
0x00000000004a3622 : clc ; push qword ptr [rcx - 0x3c] ; clc ; call qword ptr [rcx]
0x00000000004a3612 : clc ; push qword ptr [rcx] ; ret 0xfff8
0x0000000000415165 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000046ac0c : clc ; push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a365a : clc ; push qword ptr [rsi] ; ret
0x00000000004a3362 : clc ; push rax ; add bh, al ; inc eax ; add edi, eax ; jmp rax
0x00000000004a34b2 : clc ; push rax ; clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a379a : clc ; push rax ; in al, 0xf8 ; call rax
0x00000000004a3816 : clc ; push rax ; loope 0x4a3818 ; call rax
0x00000000004a37b2 : clc ; push rax ; loopne 0x4a37b4 ; call rax
0x00000000004a35ea : clc ; push rax ; mov esi, 0xbc35fff8 ; clc ; jmp rcx
0x0000000000416932 : clc ; ret
0x00000000004bc6e8 : clc ; ret 0x4b
0x000000000042af24 : clc ; rol ch, 1 ; jns 0x42af05 ; retf 0xead3
0x000000000042b074 : clc ; rol ch, 1 ; jns 0x42b055 ; retf 0xead3
0x000000000042b1c4 : clc ; rol ch, 1 ; jns 0x42b1a5 ; retf 0xead3
0x000000000042b314 : clc ; rol ch, 1 ; jns 0x42b2f5 ; retf 0xead3
0x000000000042b464 : clc ; rol ch, 1 ; jns 0x42b445 ; retf 0xead3
0x000000000042b5b4 : clc ; rol ch, 1 ; jns 0x42b595 ; retf 0xead3
0x000000000042b704 : clc ; rol ch, 1 ; jns 0x42b6e5 ; retf 0xead3
0x000000000042b854 : clc ; rol ch, 1 ; jns 0x42b835 ; retf 0xead3
0x000000000042b9a4 : clc ; rol ch, 1 ; jns 0x42b985 ; retf 0xead3
0x000000000042baf4 : clc ; rol ch, 1 ; jns 0x42bad5 ; retf 0xead3
0x000000000042bc44 : clc ; rol ch, 1 ; jns 0x42bc25 ; retf 0xead3
0x000000000042bd94 : clc ; rol ch, 1 ; jns 0x42bd75 ; retf 0xead3
0x000000000042bee4 : clc ; rol ch, 1 ; jns 0x42bec5 ; retf 0xead3
0x000000000042c034 : clc ; rol ch, 1 ; jns 0x42c015 ; retf 0xead3
0x000000000042c184 : clc ; rol ch, 1 ; jns 0x42c165 ; retf 0xead3
0x00000000004963d4 : clc ; rol ch, 1 ; jns 0x4963b5 ; retf 0xead3
0x0000000000496554 : clc ; rol ch, 1 ; jns 0x496535 ; retf 0xead3
0x00000000004966d4 : clc ; rol ch, 1 ; jns 0x4966b5 ; retf 0xead3
0x0000000000496854 : clc ; rol ch, 1 ; jns 0x496835 ; retf 0xead3
0x00000000004969d4 : clc ; rol ch, 1 ; jns 0x4969b5 ; retf 0xead3
0x0000000000496b54 : clc ; rol ch, 1 ; jns 0x496b35 ; retf 0xead3
0x0000000000496cd4 : clc ; rol ch, 1 ; jns 0x496cb5 ; retf 0xead3
0x0000000000496e54 : clc ; rol ch, 1 ; jns 0x496e35 ; retf 0xead3
0x0000000000496fd4 : clc ; rol ch, 1 ; jns 0x496fb5 ; retf 0xead3
0x0000000000497154 : clc ; rol ch, 1 ; jns 0x497135 ; retf 0xead3
0x00000000004972d4 : clc ; rol ch, 1 ; jns 0x4972b5 ; retf 0xead3
0x0000000000497454 : clc ; rol ch, 1 ; jns 0x497435 ; retf 0xead3
0x00000000004975d4 : clc ; rol ch, 1 ; jns 0x4975b5 ; retf 0xead3
0x0000000000497754 : clc ; rol ch, 1 ; jns 0x497735 ; retf 0xead3
0x00000000004978d4 : clc ; rol ch, 1 ; jns 0x4978b5 ; retf 0xead3
0x000000000047908a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004782fd : clc ; std ; jbe 0x47830c ; ret
0x000000000044ef15 : clc ; syscall
0x0000000000426781 : cld ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x000000000043e50f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e52f : cld ; add eax, dword ptr [rax] ; ret
0x00000000004c819a : cld ; call qword ptr [rax]
0x00000000004c81b2 : cld ; call qword ptr [rdx]
0x0000000000480d1f : cld ; cmove rsi, r9 ; jmp 0x480cee
0x000000000047abd0 : cld ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000045ca2b : cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x000000000047143e : cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x000000000043e5be : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e4ee : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004c7ef2 : cld ; jmp qword ptr [rax]
0x00000000004c5fdc : cld ; jp 0x4c5fe6 ; add al, dl ; push rcx ; cli ; jmp rsp
0x00000000004ba405 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4ba3d4 ; retf
0x0000000000431e72 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432075 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432275 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432475 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043595e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000403966 : cld ; mov eax, 3 ; syscall
0x00000000004329a8 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431aa6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c86 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431c86 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c06 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431e66 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b86 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004318c6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d06 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004919ec : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004c3ddc : cld ; pop rax ; add byte ptr [rax], al ; mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004c36dc : cld ; push rcx ; add byte ptr [rax], al ; js 0x4c36e2 ; call qword ptr [rcx]
0x00000000004c81dc : cld ; pushfq ; add byte ptr [rax], al ; or esp, edi ; call qword ptr [rdx]
0x00000000004268d8 : cld ; ret
0x00000000004a396c : cld ; sbb cl, bh ; jmp qword ptr [rdx + 0x12fff918]
0x00000000004b8b23 : cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004b8b36 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bdff8 : cld ; xlatb ; std ; call rsp
0x000000000041fe69 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000420049 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004674d6 : cli ; add al, byte ptr [rbp + 0x29] ; in eax, 0x29 ; retf 0x8d41
0x000000000041db9b : cli ; add byte ptr [rax - 0x418aff94], ch ; ret
0x000000000047ca39 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000004141ff : cli ; add ch, al ; pop rdx ; retf
0x000000000046751a : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000458d7f : cli ; add ch, byte ptr [rcx] ; retf 0xd189
0x00000000004896f3 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048971c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000045c5ec : cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x0000000000410718 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043e25c : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000004494cf : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000474ad6 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475343 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043dd81 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043597c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047b8ac : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004bab19 : cli ; call 0xffffffffab597611
0x00000000004c664a : cli ; call rdx
0x00000000004c52a2 : cli ; call rsi
0x0000000000481624 : cli ; dec dword ptr [rdi] ; retf 0x8d89
0x000000000043296b : cli ; jg 0x43297e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000435937 : cli ; jg 0x43594a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043dd41 : cli ; jg 0x43dd53 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dec6 : cli ; jg 0x43ded8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004c574a : cli ; jmp qword ptr [rax]
0x00000000004c6c42 : cli ; jmp qword ptr [rdx]
0x00000000004c5922 : cli ; jmp rdi
0x00000000004c53da : cli ; jmp rdx
0x00000000004c692a : cli ; jmp rsi
0x00000000004c5fe2 : cli ; jmp rsp
0x0000000000432278 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004262e8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000047b5e2 : cli ; or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x000000000047b396 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000048a0a8 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004bafa1 : cli ; push 0x6e ; ja 0x4baf2e ; ret 0x48f
0x00000000004b9a45 : cli ; ret 0xac65
0x000000000044295b : cli ; setae al ; ret
0x00000000004b98f0 : cli ; test bh, dl ; retf 0xdf7f
0x0000000000423a59 : cli ; test rdx, rdx ; je 0x423a79 ; bsf rax, rdx ; ret
0x0000000000465868 : cli ; test rdx, rdx ; je 0x465899 ; bsf rax, rdx ; ret
0x00000000004b868a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004c94db : cmc ; add al, byte ptr [rax] ; ret
0x0000000000496008 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000443cac : cmc ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x000000000041dee0 : cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bf94a : cmc ; call qword ptr [rax]
0x00000000004c0172 : cmc ; call qword ptr [rcx]
0x00000000004c087a : cmc ; call qword ptr [rdx]
0x00000000004c0792 : cmc ; call qword ptr [rsi]
0x00000000004c116a : cmc ; call rdx
0x0000000000487007 : cmc ; jmp 0x486fd6
0x00000000004c0642 : cmc ; jmp qword ptr [rax]
0x00000000004bffa2 : cmc ; jmp qword ptr [rcx]
0x00000000004bf7aa : cmc ; jmp qword ptr [rsi]
0x00000000004bb3c9 : cmc ; mov ch, 0xab ; ret
0x0000000000400966 : cmc ; mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x0000000000434c0a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431afe : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043d2d3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004b8277 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047abdd : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043d2d7 : cmc ; sub eax, edx ; ret
0x00000000004baa05 : cmc ; xlatb ; ret 0x4e27
0x000000000049cb17 : cmova eax, edx ; ret
0x0000000000467381 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000417139 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000417138 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000043f39b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000464f91 : cmove eax, ecx ; ret
0x000000000043f680 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00000000004213b3 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000425e62 : cmove eax, edx ; ret
0x0000000000480d21 : cmove esi, ecx ; jmp 0x480cec
0x0000000000464f90 : cmove r8, rcx ; ret
0x000000000043f39a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000046b280 : cmove rax, r9 ; ret
0x00000000004213b2 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000425e61 : cmove rax, rdx ; ret
0x0000000000480d20 : cmove rsi, r9 ; jmp 0x480ced
0x0000000000414c7b : cmovg eax, ecx ; test rdx, rdx ; jne 0x414c79 ; ret
0x0000000000463b8b : cmovg eax, ecx ; test rdx, rdx ; jne 0x463b89 ; ret
0x0000000000400546 : cmovle eax, ecx ; jmp 0x400519
0x0000000000413713 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421433 : cmovne eax, edx ; ret
0x0000000000421432 : cmovne rax, rdx ; ret
0x0000000000443c53 : cmovno eax, dword ptr [rbx - 0x76bef907] ; ret 0x840f
0x0000000000444620 : cmovns eax, dword ptr [rbx - 0x76b30f1a] ; imul eax ; ret
0x0000000000425ebd : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x000000000045674d : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x0000000000446d1c : cmovs eax, edx ; ret
0x0000000000419e70 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000049ca48 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000489d20 : cmovs edi, dword ptr [rcx] ; retf 0xf48
0x0000000000426780 : cmp ah, 0x42 ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000480d1e : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480cef
0x00000000004be7c9 : cmp ah, dh ; call qword ptr [rdx]
0x0000000000440611 : cmp al, 0x24 ; call rbx
0x000000000049e03b : cmp al, 0x24 ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000040e0dd : cmp al, 0x33 ; call rax
0x00000000004b9680 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004c3e1c : cmp al, 0x59 ; add byte ptr [rax], al ; ror cl, 0xfd ; call qword ptr [rbx]
0x00000000004b8583 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004bb06b : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x000000000048aa5b : cmp al, 9 ; ja 0x489660 ; jmp 0x48aa39
0x000000000048dc93 : cmp al, 9 ; ja 0x48c880 ; jmp 0x48dc71
0x00000000004913db : cmp al, 9 ; ja 0x48f6e0 ; jmp 0x4913b9
0x000000000043d796 : cmp al, byte ptr [rsi - 1] ; jne 0x43d7bc ; xor eax, eax ; ret
0x0000000000426136 : cmp al, dh ; ret
0x0000000000441ea2 : cmp al, dl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000426135 : cmp al, r14b ; ret
0x00000000004c8d21 : cmp bh, ch ; call rcx
0x0000000000453253 : cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004c7759 : cmp bl, bh ; jmp qword ptr [rdx]
0x0000000000487289 : cmp bl, ch ; ret 0x8148
0x000000000042cb93 : cmp bl, dh ; ret
0x00000000004103bb : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000045dfc6 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000401353 : cmp byte ptr [rax + 0x39], cl ; ret 0x2773
0x0000000000426c9f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000426177 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000043fcf7 : cmp byte ptr [rax - 0x75], cl ; jl 0x43fd28 ; or byte ptr [rax + 0x29], cl ; ret
0x00000000004405c4 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000041654e : cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x00000000004103bc : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000459b3a : cmp byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000483297 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000426166 : cmp byte ptr [rax], ah ; ret
0x0000000000415133 : cmp byte ptr [rax], al ; je 0x415144 ; ret
0x000000000049c2f5 : cmp byte ptr [rax], al ; je 0x49c36b ; add rsp, 0x18 ; ret
0x0000000000421430 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000426156 : cmp byte ptr [rax], dl ; ret
0x0000000000426155 : cmp byte ptr [rax], r10b ; ret
0x0000000000426165 : cmp byte ptr [rax], r12b ; ret
0x000000000042142f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004c2a6c : cmp byte ptr [rbx + 0x1b70307], al ; ret
0x00000000004c6e15 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004c6e75 : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c6db5 : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000043ed62 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000047365b : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x0000000000479ab9 : cmp byte ptr [rbx - 0x7ad7dbbc], cl ; ror byte ptr [rdi], 0x84 ; retf 1
0x0000000000460305 : cmp byte ptr [rbx], cl ; jmp rax
0x0000000000464a67 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x0000000000476f96 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004740ed : cmp byte ptr [rdi + 0x4b], bl ; add al, ch ; retf 0xf8d6
0x00000000004150f8 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042f0dd : cmp byte ptr [rdi], dl ; ret
0x000000000042fbf0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fbd9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fbc2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e67e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a3470 : cmp byte ptr [rdx - 8], 0xff ; sar byte ptr [rbx - 8], 1 ; jmp qword ptr [rax]
0x000000000045545b : cmp byte ptr [rip + 0x5ce8004b], ch ; ret
0x0000000000454bcf : cmp byte ptr [rip - 0x1717ffb5], ch ; retf
0x0000000000454c01 : cmp byte ptr [rip - 0x4917ffb5], ch ; retf
0x0000000000454c1a : cmp byte ptr [rip - 0x6217ffb5], ch ; retf
0x0000000000455431 : cmp byte ptr [rip - 0x7917ffb5], ch ; ret
0x000000000046b27c : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x0000000000449b83 : cmp byte ptr [rsi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004bef88 : cmp ch, bh ; hlt ; call qword ptr [rax]
0x000000000045d7af : cmp ch, cl ; retf
0x000000000040d83d : cmp ch, cl ; retf 0xfffb
0x000000000041a970 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000481f7b : cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x0000000000473bae : cmp cl, byte ptr [rax - 0x77] ; retf
0x000000000047a9b9 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0xfc7f
0x0000000000461b0d : cmp cl, byte ptr [rbx] ; jmp rax
0x000000000046b27f : cmp cl, byte ptr [rcx + 0xf] ; rol ebx, 0x4c ; mov eax, ecx ; ret
0x00000000004302a1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x00000000004303f1 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x0000000000430541 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x0000000000430691 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x00000000004307e1 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x0000000000430931 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x0000000000430a81 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x0000000000430bd1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x0000000000430d21 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x0000000000430e71 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x0000000000430fc1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x0000000000431111 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x0000000000431261 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x00000000004313b1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x0000000000431501 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x0000000000432fea : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000043316a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x00000000004332ea : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000043346a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x00000000004335ea : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000043376a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x00000000004338ea : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000433a6a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000433bea : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000433d6a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x0000000000433eea : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000043406a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x00000000004341ea : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000043436a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000004344ea : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004bb446 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004897b6 : cmp cl, ch ; ret
0x00000000004c1168 : cmp cl, dl ; cmc ; call rdx
0x000000000046b24e : cmp dh, byte ptr [rbp + 4] ; test ecx, ecx ; jne 0x46b20a ; xor eax, eax ; ret
0x000000000043597b : cmp dl, 1 ; jb 0x43598d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043dd80 : cmp dl, 1 ; jb 0x43dd8e ; mov byte ptr [rdi], cl ; ret
0x000000000043defa : cmp dl, 1 ; jb 0x43df08 ; mov byte ptr [rdi], cl ; ret
0x0000000000464a38 : cmp dword ptr [rax + 0x30], 0 ; je 0x464a46 ; ret
0x000000000043471c : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000461629 : cmp dword ptr [rbx], ecx ; jmp rax
0x0000000000450ace : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x0000000000415131 : cmp dword ptr [rdi + 0x38], 0 ; je 0x415146 ; ret
0x0000000000442b40 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x000000000049cb14 : cmp dword ptr [rsi + 8], ecx ; cmova eax, edx ; ret
0x000000000048caad : cmp dword ptr [rsp + 0x10], 0 ; jne 0x48ca84 ; jmp 0x48ca8c
0x000000000048987d : cmp dword ptr [rsp + 8], 0 ; jne 0x489854 ; jmp 0x48985c
0x000000000043f5d3 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000004746bf : cmp eax, -1 ; cmove rax, rdx ; ret
0x0000000000415164 : cmp eax, -1 ; je 0x415179 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415c87 : cmp eax, -1 ; je 0x415c98 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464c4a : cmp eax, -1 ; je 0x464c5b ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464c8e : cmp eax, -1 ; je 0x464c9f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000410d39 : cmp eax, -1 ; jne 0x410d46 ; pop rbx ; ret
0x0000000000415cdf : cmp eax, -1 ; jne 0x415cd0 ; pop rbx ; ret
0x0000000000442b50 : cmp eax, -1 ; jne 0x442b50 ; xor eax, eax ; leave ; ret
0x00000000004782fc : cmp eax, -3 ; jbe 0x47830d ; ret
0x000000000047afa9 : cmp eax, 0x251a16 ; call rax
0x000000000047ae6c : cmp eax, 0x251b53 ; jmp rax
0x00000000004b896b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000040dc39 : cmp eax, 0xfffff000 ; ja 0x40dc68 ; ret
0x000000000043f3c6 : cmp eax, 0xfffff000 ; ja 0x43f3d8 ; ret
0x000000000043f415 : cmp eax, 0xfffff000 ; ja 0x43f428 ; ret
0x000000000043f5a4 : cmp eax, 0xfffff000 ; ja 0x43f5e8 ; ret
0x000000000044fae1 : cmp eax, 0xfffff000 ; ja 0x44faf8 ; ret
0x000000000046a958 : cmp eax, 0xfffff000 ; ja 0x46a970 ; pop rbx ; ret
0x000000000046ace6 : cmp eax, 0xfffff000 ; ja 0x46acf8 ; ret
0x000000000046ad3b : cmp eax, 0xfffff000 ; ja 0x46ad50 ; ret
0x000000000043e60b : cmp eax, 2 ; je 0x43e61f ; xor eax, eax ; ret
0x0000000000442a3a : cmp eax, 4 ; je 0x442a45 ; ret
0x0000000000413165 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x413178 ; movzx eax, byte ptr [rax] ; ret
0x00000000004413b1 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x0000000000474708 : cmp eax, dword ptr [rsi + rdx] ; jae 0x4746b8 ; xor eax, eax ; ret
0x00000000004ba837 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000416a39 : cmp eax, ecx ; jae 0x416a67 ; movzx eax, byte ptr [rax] ; ret
0x000000000043d7b3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004784d4 : cmp eax, esi ; je 0x4784e4 ; ret
0x00000000004429d6 : cmp ebx, 0xa ; je 0x4429e1 ; ret
0x000000000044431e : cmp ebx, eax ; setne dl ; jmp 0x44430a
0x00000000004717a1 : cmp ecx, dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004a070c : cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; retf 0xf7d9
0x000000000046d70e : cmp ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rsp + 0x48], 0x83 ; ret
0x0000000000447dc9 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000467380 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000464f8e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000040eebf : cmp ecx, dword ptr [rdx] ; add byte ptr [rax + 0x63], cl ; retf 0x894c
0x000000000042fc0b : cmp ecx, eax ; jne 0x42fc39 ; xor eax, eax ; ret
0x0000000000473fe6 : cmp ecx, edx ; jne 0x473fc5 ; ret
0x00000000004c3141 : cmp edi, eax ; call qword ptr [rax]
0x000000000049d63e : cmp edi, eax ; jae 0x49d608 ; mov rdx, rcx ; jmp 0x49d620
0x000000000045a565 : cmp edi, ecx ; ja 0x45a550 ; mov eax, r8d ; ret
0x000000000046ae8e : cmp edi, edx ; ja 0x46aebd ; ret
0x000000000047ca38 : cmp edx, 0 ; mov eax, edx ; jle 0x47ca50 ; ret
0x000000000041db9a : cmp edx, 0x6ca800 ; jne 0x41db69 ; ret
0x0000000000473ff8 : cmp edx, eax ; jne 0x473fa2 ; mov eax, dword ptr [rsi + 4] ; ret
0x00000000004268a8 : cmp edx, ecx ; jne 0x426895 ; ret
0x000000000044295a : cmp edx, edi ; setae al ; ret
0x0000000000467016 : cmp edx, esi ; je 0x467027 ; test edx, edx ; jne 0x467019 ; ret
0x0000000000416a79 : cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000044d595 : cmp esi, 3 ; je 0x44d5a6 ; pop rbx ; ret
0x00000000004baa04 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000464cea : cmp esi, ecx ; jb 0x464ce7 ; lea eax, [rdx + rdi] ; ret
0x0000000000415d1a : cmp esi, ecx ; jne 0x415d17 ; lea eax, [rdx + rdi] ; ret
0x0000000000464a37 : cmp qword ptr [rax + 0x30], 0 ; je 0x464a47 ; ret
0x0000000000415130 : cmp qword ptr [rdi + 0x38], 0 ; je 0x415147 ; ret
0x000000000049cb13 : cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000048caac : cmp qword ptr [rsp + 0x10], 0 ; jne 0x48ca85 ; jmp 0x48ca8d
0x000000000048987c : cmp qword ptr [rsp + 8], 0 ; jne 0x489855 ; jmp 0x48985d
0x000000000042cb92 : cmp r11b, r14b ; ret
0x00000000004429d5 : cmp r11d, 0xa ; je 0x4429e2 ; ret
0x0000000000480d1d : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x480cf0
0x0000000000474707 : cmp r8, qword ptr [rsi + rdx] ; jae 0x4746b9 ; xor eax, eax ; ret
0x000000000040dc38 : cmp rax, -0x1000 ; ja 0x40dc69 ; ret
0x000000000043f3c5 : cmp rax, -0x1000 ; ja 0x43f3d9 ; ret
0x000000000043f414 : cmp rax, -0x1000 ; ja 0x43f429 ; ret
0x000000000043f5a3 : cmp rax, -0x1000 ; ja 0x43f5e9 ; ret
0x000000000044fae0 : cmp rax, -0x1000 ; ja 0x44faf9 ; ret
0x000000000046a957 : cmp rax, -0x1000 ; ja 0x46a971 ; pop rbx ; ret
0x000000000046ace5 : cmp rax, -0x1000 ; ja 0x46acf9 ; ret
0x000000000046ad3a : cmp rax, -0x1000 ; ja 0x46ad51 ; ret
0x00000000004746be : cmp rax, -1 ; cmove rax, rdx ; ret
0x00000000004782fb : cmp rax, -3 ; jbe 0x47830e ; ret
0x0000000000413164 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x413179 ; movzx eax, byte ptr [rax] ; ret
0x0000000000416a38 : cmp rax, rcx ; jae 0x416a68 ; movzx eax, byte ptr [rax] ; ret
0x00000000004784d3 : cmp rax, rsi ; je 0x4784e5 ; ret
0x0000000000464f8d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042fc0a : cmp rcx, rax ; jne 0x42fc3a ; xor eax, eax ; ret
0x0000000000473fe5 : cmp rcx, rdx ; jne 0x473fc6 ; ret
0x000000000049d63d : cmp rdi, r8 ; jae 0x49d609 ; mov rdx, rcx ; jmp 0x49d621
0x000000000046ae8d : cmp rdi, rdx ; ja 0x46aebe ; ret
0x0000000000473ff7 : cmp rdx, r8 ; jne 0x473fa3 ; mov eax, dword ptr [rsi + 4] ; ret
0x00000000004268a7 : cmp rdx, rcx ; jne 0x426896 ; ret
0x00000000004268a6 : cmp rdx, rcx ; jne 0x426897 ; ret
0x0000000000442959 : cmp rdx, rdi ; setae al ; ret
0x0000000000464ce9 : cmp rsi, rcx ; jb 0x464ce8 ; lea eax, [rdx + rdi] ; ret
0x0000000000415d19 : cmp rsi, rcx ; jne 0x415d18 ; lea eax, [rdx + rdi] ; ret
0x0000000000496607 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496907 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497807 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c8afd : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; and byte ptr [rsi], dh ; std ; call rsp
0x000000000041c846 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000425c15 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000497507 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000042f689 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004005da : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e1 ; ret
0x00000000004b8a36 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4b8a02 ; mov ecx, 0x5b92ac50 ; retf
0x000000000042a1b6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497207 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496f07 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004bab51 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004a3658 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff8
0x00000000004099e6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000000000047abd1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000420095 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sub al, byte ptr [rax] ; push rax ; retf 0x41
0x00000000004a3595 : cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp qword ptr [rax]
0x00000000004b851f : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x000000000046ee15 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000000000441f35 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar ebp, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x000000000043df05 : cmpsd dword ptr [rsi], dword ptr [rdi] ; shr dword ptr [rax], 1 ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000487af5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000041305f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049b604 : cwde ; add rax, r8 ; jmp rax
0x0000000000402cac : cwde ; call 0x44f6c3
0x0000000000402cab : cwde ; call 0x44f6c4
0x00000000004c8798 : cwde ; frndint ; call qword ptr [rax]
0x00000000004425e4 : cwde ; mov eax, 3 ; syscall
0x0000000000414e8c : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000047ed2b : cwde ; retf
0x000000000042071f : cwde ; retf 0x2a
0x000000000047e1e7 : cwde ; retf 0x4b
0x00000000004394b1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000041b8c6 : dec byte ptr [r8 - 0x75] ; ret
0x000000000048e3f5 : dec byte ptr [r8 - 0x77] ; fisttp qword ptr [rax - 0x77] ; retf
0x00000000004394b2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000047a0c6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x000000000041b944 : dec byte ptr [rax - 0x73] ; ret
0x000000000045d13c : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffffb60 ; call rax
0x000000000041b8c7 : dec byte ptr [rax - 0x75] ; ret
0x000000000048e3f6 : dec byte ptr [rax - 0x77] ; fisttp qword ptr [rax - 0x77] ; retf
0x000000000046571d : dec byte ptr [rax - 0x77] ; ret
0x000000000040e29a : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000047e61d : dec dword ptr [r13 + r9*4 + 0x7c] ; ret
0x0000000000483173 : dec dword ptr [r8 + 0x39] ; ret
0x00000000004782f9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x478310 ; ret
0x000000000041b0fc : dec dword ptr [r9 - 0x7b] ; ret 0x840f
0x00000000004106d9 : dec dword ptr [rax + 0x29] ; ret
0x00000000004395f2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000473bf1 : dec dword ptr [rax + 0x29] ; ret 0x48e9
0x000000000045e7a6 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041925d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000041d8dd : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x0000000000418915 : dec dword ptr [rax + 0x39] ; ret
0x0000000000480e44 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000485c3d : dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004708e5 : dec dword ptr [rax + 0x39] ; ret 0xed75
0x000000000047484a : dec dword ptr [rax + 0x63] ; ret
0x000000000045e8ce : dec dword ptr [rax + 0x63] ; retf
0x000000000046a94c : dec dword ptr [rax + 0x63] ; sti ; mov eax, 3 ; syscall
0x000000000046255b : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462caf : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000465c59 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000004746c1 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004213b1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000045966e : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000412657 : dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000041073c : dec dword ptr [rax + 1] ; ret
0x000000000047db87 : dec dword ptr [rax + 1] ; ret 0x3948
0x000000000045d6f6 : dec dword ptr [rax - 0x39] ; ret
0x000000000045ca2c : dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004118c7 : dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000480dae : dec dword ptr [rax - 0x39] ; ret 0xfffe
0x000000000043edcc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000049b041 : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x0000000000419233 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2173
0x000000000041d8b2 : dec dword ptr [rax - 0x73] ; adc byte ptr [rax + 0x39], cl ; retf 0x2273
0x00000000004697ae : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x39] ; ret
0x0000000000478d8d : dec dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; retf 0x4df0
0x00000000004748b5 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004103b8 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000481f78 : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x00000000004a0709 : dec dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; retf 0xf7d9
0x000000000044034d : dec dword ptr [rax - 0x75] ; jge 0x440357 ; call rbx
0x0000000000440600 : dec dword ptr [rax - 0x75] ; jge 0x44060a ; call rbx
0x0000000000442198 : dec dword ptr [rax - 0x75] ; jge 0x4421a2 ; call rbx
0x00000000004793b7 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041bbbf : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x0000000000414141 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x000000000047875c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000483fb2 : dec dword ptr [rax - 0x77] ; add cl, byte ptr [rax + 1] ; ret
0x0000000000488787 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000426a18 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000004a0715 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xf7d9
0x000000000045f33d : dec dword ptr [rax - 0x77] ; fucomip st(0) ; retf 0x72
0x0000000000451a55 : dec dword ptr [rax - 0x77] ; iretd ; call 0x41dd46
0x000000000049ee3a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040175c : dec dword ptr [rax - 0x77] ; ret
0x000000000046ae7e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x0000000000483fff : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000041de81 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000044f962 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000045e76a : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000466596 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000483889 : dec dword ptr [rax - 0x77] ; ret 0x89e9
0x0000000000455397 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000046df50 : dec dword ptr [rax - 0x77] ; ret 0x8be9
0x000000000045ff36 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000004828bd : dec dword ptr [rax - 0x77] ; ret 0xc6e9
0x000000000042132e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000046b443 : dec dword ptr [rax - 0x77] ; ret 0xf0eb
0x0000000000402b88 : dec dword ptr [rax - 0x77] ; ret 0xf4e9
0x00000000004591fd : dec dword ptr [rax - 0x77] ; retf
0x000000000047d7c5 : dec dword ptr [rax - 0x77] ; retf 0x1b8
0x000000000044815e : dec dword ptr [rax - 0x77] ; retf 0x8440
0x0000000000456501 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x000000000049db84 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x00000000004786c1 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000487af8 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000463e2e : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x00000000004843f4 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], cl ; test bh, bl ; retf 0xffff
0x0000000000468fd9 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x5a], 0xbf ; ret
0x0000000000485dab : dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004782fa : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x47830f ; ret
0x0000000000453e11 : dec dword ptr [rax - 0x7d] ; jge 0x453e4e ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040414c : dec dword ptr [rax - 0x7d] ; ret
0x000000000041920f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000448cf2 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000470cef : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000470cdd : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000457174 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x000000000046a2b6 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000470d7b : dec dword ptr [rax - 0x7d] ; ret 0x8908
0x00000000004857a2 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x0000000000453256 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000434720 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000046caa0 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x00000000004bdf4b : dec dword ptr [rax] ; retf
0x000000000049db9b : dec dword ptr [rbp + rcx*4 + 0x42] ; add dword ptr [rcx - 0x77], ecx ; retf 0xb9e9
0x000000000047e61e : dec dword ptr [rbp + rcx*4 + 0x7c] ; ret
0x000000000049b679 : dec dword ptr [rbp - 0x75] ; adc cl, byte ptr [rcx + 1] ; ret 0x3ee9
0x0000000000478e8c : dec dword ptr [rbp - 0x75] ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x45f8
0x000000000044080e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000046de1f : dec dword ptr [rbp - 0x77] ; imul ecx ; retf
0x00000000004a3697 : dec dword ptr [rbx + 0x1bfff8c2] ; ret
0x000000000041b4ff : dec dword ptr [rbx + 0x2af2fe15] ; add dh, dh ; ret 0xf02
0x00000000004787dc : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000447f26 : dec dword ptr [rbx + 0x79c98508] ; jrcxz 0x447f1f ; retf
0x000000000049b95c : dec dword ptr [rcx + 0x21] ; retf 0x894c
0x0000000000484646 : dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x0000000000455654 : dec dword ptr [rcx + 0x29] ; ret
0x000000000046dc91 : dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049b93e : dec dword ptr [rcx + 0x29] ; retf 0x894c
0x000000000049b9c6 : dec dword ptr [rcx + 0x31] ; retf 0x894c
0x0000000000455263 : dec dword ptr [rcx + 0x39] ; ret
0x000000000046cad2 : dec dword ptr [rcx + 0x39] ; ret 0x830f
0x00000000004551e1 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047241a : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000049b967 : dec dword ptr [rcx + 0x39] ; retf 0x894c
0x000000000049d6ac : dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x0000000000469786 : dec dword ptr [rcx + 0x6b] ; ret
0x000000000045ad6c : dec dword ptr [rcx + 0xf40244c] ; ret 0x548b
0x000000000049b9f2 : dec dword ptr [rcx + 1] ; retf 0x894c
0x000000000049b9fd : dec dword ptr [rcx + 9] ; retf 0x894c
0x0000000000452822 : dec dword ptr [rcx + rcx*4 - 0x18] ; jmp 0x4527f7
0x0000000000452eb9 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, rbx ; call rax
0x0000000000467ede : dec dword ptr [rcx - 0x50f0b73f] ; retf
0x0000000000480ebf : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000402ca7 : dec dword ptr [rcx - 0x67ba7639] ; call 0x44f6c8
0x0000000000440185 : dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044060e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440218 : dec dword ptr [rcx - 0x75] ; jge 0x440222 ; call rbx
0x000000000044033f : dec dword ptr [rcx - 0x75] ; jge 0x440349 ; call rbx
0x0000000000440482 : dec dword ptr [rcx - 0x75] ; jge 0x44048c ; call rbx
0x00000000004405f2 : dec dword ptr [rcx - 0x75] ; jge 0x4405fc ; call rbx
0x0000000000441e10 : dec dword ptr [rcx - 0x75] ; jge 0x441e1a ; call rbx
0x0000000000441f38 : dec dword ptr [rcx - 0x75] ; jge 0x441f42 ; call rbx
0x000000000044207b : dec dword ptr [rcx - 0x75] ; jge 0x442085 ; call rbx
0x000000000044217c : dec dword ptr [rcx - 0x75] ; jge 0x442186 ; call rbx
0x000000000047ce2c : dec dword ptr [rcx - 0x77] ; imul ecx ; ret
0x0000000000453e53 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000446198 : dec dword ptr [rcx - 0x77] ; ret 0x11e9
0x000000000044e9f7 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x0000000000456483 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041b0fd : dec dword ptr [rcx - 0x7b] ; ret 0x840f
0x0000000000485f07 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc381ab17
0x00000000004bdf43 : dec dword ptr [rdi - 0x14000236] ; retf
0x000000000043f715 : dec dword ptr [rdi] ; add esp, 0x4d ; add byte ptr [rax], al ; ret
0x000000000043f4f9 : dec dword ptr [rdi] ; and eax, 0x4f ; add byte ptr [rax], al ; ret
0x0000000000484326 : dec dword ptr [rdi] ; lahf ; ret 0xb60f
0x0000000000486bdf : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x000000000044290c : dec dword ptr [rdi] ; or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x0000000000446d1b : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000404637 : dec dword ptr [rdi] ; retf
0x0000000000481625 : dec dword ptr [rdi] ; retf 0x8d89
0x00000000004428ef : dec dword ptr [rdi] ; sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x00000000004107f1 : dec dword ptr [rdi] ; test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000004494b4 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x77000000], ch ; retf 0xe281
0x000000000046dea9 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x18000000], ch ; retf
0x000000000048b2b7 : dec dword ptr [rdi] ; test byte ptr [rsi + rax + 0x63480000], al ; retf 0x8348
0x000000000043d640 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047097c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x0000000000416a7b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485aff : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000047a92e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000459cb6 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x000000000043ecbd : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000043f465 : dec dword ptr [rdi] ; xor dword ptr [rax + rdx*2], 0 ; ret
0x000000000047a44d : dec ecx ; ret
0x00000000004a3aab : dec edx ; sbb cl, bh ; push qword ptr [rax + 0x18] ; stc ; jmp rax
0x00000000004395f1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x00000000004626e6 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000448cf1 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046dc90 : dec qword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000040dc14 : div byte ptr [rbp + 0x31] ; mov eax, 0xba ; syscall
0x0000000000465762 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000045a86d : div byte ptr [rip + 0xf4c004b] ; ret 0xf4c
0x000000000047abdc : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a575 : div ecx ; add eax, r8d ; ret
0x000000000043e5c1 : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004631c6 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047abdb : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040054c : enter -0x1401, -0x3b ; ret
0x000000000040053c : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000043d7b4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000049ddb6 : enter -0x72b4, 0x3d ; ret 0x22ed
0x00000000004394ae : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004395ee : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004793bb : enter -0x74b8, 0x14 ; ret
0x000000000046d884 : enter -0x76b4, -7 ; mov r15, rax ; jmp 0x46d858
0x0000000000442b3e : enter -0x7cb8, 0x7c ; retf 0x1f8
0x0000000000440264 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000451a52 : enter -2, -1 ; mov rdi, rcx ; call 0x41dd49
0x00000000004ad55c : enter 0, 0 ; retf
0x00000000004b15b0 : enter 0, 0 ; retf 0
0x00000000004ae708 : enter 0x10, 0 ; retf
0x0000000000448def : enter 0x1388, -0x77 ; retf 0xe083
0x0000000000416a3a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000047a74e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000422a4d : enter 0x31c3, -0x40 ; ret
0x00000000004c1f73 : enter 0x380e, 0x41 ; ret
0x00000000004188cd : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000041b0c5 : enter 0x4801, -0x7d ; ret 0x4810
0x000000000047dd90 : enter 0x4b, -0x41 ; retf 0x4b
0x000000000048cee8 : enter 0x4b7f, 0 ; call 0x4791b6
0x00000000004bc6e0 : enter 0x4bc2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret 0x4b
0x000000000046b206 : enter 0x4f75, -0xd ; ret
0x00000000004bb1bc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004adf08 : enter 0xa, 0 ; retf
0x00000000004ae308 : enter 0xd, 0 ; retf
0x000000000042f736 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421481 : enter 0xf66, -0x15 ; ret
0x0000000000425f0b : enter 0xfc3, 0x1f ; add byte ptr [rax + 1], cl ; retf 0x8348
0x00000000004b17b0 : enter 1, 0 ; retf 1
0x00000000004aeac0 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004b19b0 : enter 2, 0 ; retf 2
0x00000000004b1bb0 : enter 3, 0 ; retf 3
0x00000000004b1db0 : enter 4, 0 ; retf 4
0x00000000004b1fb0 : enter 5, 0 ; retf 5
0x00000000004b21b0 : enter 6, 0 ; retf 6
0x00000000004b23b0 : enter 7, 0 ; retf 7
0x00000000004b25b0 : enter 8, 0 ; retf 8
0x00000000004b27b0 : enter 9, 0 ; retf 9
0x0000000000414dd7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000004152d3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000040f419 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000442b46 : fadd dword ptr [rax] ; leave ; ret
0x000000000041cb6f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000411c30 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004443b2 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c94d8 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000004113a7 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047b8b9 : fadd st(1) ; call 0xffffffff8a09e1e4
0x000000000047ba20 : fadd st(1) ; call 0xffffffff8a09e34b
0x000000000047c239 : fadd st(1) ; call 0xffffffff8a09eb64
0x000000000047c396 : fadd st(1) ; call 0xffffffff8a09ecc1
0x0000000000441e00 : fadd st(2), st(0) ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000477aa5 : fadd st(3) ; mov eax, 0xffffffff ; ret
0x000000000042f281 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049ec64 : fbstp tbyte ptr [rbp - 0x17] ; pop rbx ; ret
0x00000000004ba7f8 : fcmovb st(0), st(3) ; ret
0x000000000044f1fe : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00000000004c2401 : fcomi st(7) ; jmp qword ptr [rbx]
0x0000000000468d27 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040fa6a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000040fb4f : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043fecf : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041e0d6 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004bb579 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004015eb : fcomp dword ptr [rsi - 0x7cb7ff94] ; ret
0x00000000004c41bc : fcomp qword ptr [rax + rax] ; jo 0x4c41a4 ; clc ; call qword ptr [rbx]
0x00000000004c3ebc : fcomp qword ptr [rcx] ; add byte ptr [rax - 0x48], ah ; clc ; call qword ptr [rcx]
0x00000000004b97e0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000041de7f : fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004c6aa9 : fdiv st(2), st(0) ; call rsi
0x00000000004403ed : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000440480 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x44048e ; call rbx
0x00000000004a3811 : fdivp st(0) ; jmp qword ptr [rax]
0x0000000000440209 : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000440216 : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; jge 0x440224 ; call rbx
0x00000000004c69b1 : fdivr st(2) ; jmp rdi
0x00000000004b8b35 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004be3d5 : fdivr st(5) ; call rsp
0x00000000004be3d1 : fdivr st(5) ; inc dword ptr [rax + rbx*8] ; std ; call rsp
0x000000000043d7b8 : fdivr st(7) ; ret
0x000000000043f5d2 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x0000000000464444 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x0000000000489d1d : fiadd dword ptr [rbx + 0x39480fe2] ; retf 0xf48
0x000000000043ffec : fiadd dword ptr [rcx - 0x7d] ; retf 0x3140
0x00000000004409c9 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004bb3c6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x00000000004442c5 : fidivr dword ptr [rax + 1] ; ret
0x000000000043e1df : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x00000000004004a4 : fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x000000000045a568 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000048a6b5 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000432bf0 : fimul dword ptr [rax + 0x39] ; retf 0x6a77
0x000000000045c5e9 : fimul dword ptr [rax - 0x3f] ; cli ; add cl, byte ptr [rax + 0x39] ; retf 0x97e
0x00000000004126f5 : fimul dword ptr [rax - 0x77] ; out dx, al ; mov eax, r13d ; syscall
0x000000000047b5e6 : fimul dword ptr [rax - 0x77] ; retf
0x00000000004107e0 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000048adbe : fimul dword ptr [rax - 0x7d] ; in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x0000000000404e48 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000426a42 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000048d2cc : fimul dword ptr [rcx + 1] ; ror byte ptr [rcx + 0x39], cl ; retf
0x000000000048aed2 : fimul word ptr [rax + 0x29] ; ret
0x00000000004119be : fimul word ptr [rax - 0x77] ; ret
0x0000000000459fff : fimul word ptr [rax - 0x77] ; retf
0x000000000047324a : fimul word ptr [rax - 0x7d] ; ret
0x000000000047a5bc : fimul word ptr [rbp + 0x11] ; retf
0x000000000047a57e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47a5d8
0x000000000048008e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x4800e8
0x000000000044fc30 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x000000000041180f : fimul word ptr [rcx + rcx*4 - 0x19] ; mov eax, r9d ; syscall
0x00000000004a0713 : fincstp ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret 0xf7d9
0x00000000004003d4 : fistp qword ptr [rax + 1] ; syscall
0x0000000000414e45 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb5 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004176f8 : fisttp dword ptr [rax + 0x21] ; ret
0x00000000004681a2 : fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x000000000043fbe7 : fisttp dword ptr [rax + 0xf] ; ret
0x000000000049ec61 : fisttp dword ptr [rax - 0x77] ; fbstp tbyte ptr [rbp - 0x17] ; pop rbx ; ret
0x0000000000474219 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000048dda3 : fisttp dword ptr [rax - 0x77] ; jl 0x48ddd4 ; sbb byte ptr [rax + 0x63], cl ; retf
0x0000000000479621 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000049b600 : fisttp dword ptr [rbx + 0x63] ; add al, 0x98 ; add rax, r8 ; jmp rax
0x000000000047963b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000469155 : fisttp dword ptr [rdi] ; retf 0x3948
0x0000000000440ea9 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000041e4fe : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x00000000004480f7 : fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000048e3f9 : fisttp qword ptr [rax - 0x77] ; retf
0x000000000041c909 : fisttp word ptr [rax + 9] ; ret 0x8948
0x000000000045411a : fisttp word ptr [rax - 0x77] ; retf 0x8948
0x0000000000455e65 : fisttp word ptr [rax - 0x77] ; retf 0x894c
0x00000000004796bf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000452724 : fisttp word ptr [rbp - 0x77] ; imul eax ; ret
0x000000000042b4ed : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042f651 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f351 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000432a3c : fisubr word ptr [rcx] ; ret 0xfec5
0x000000000042661d : fld dword ptr [rbx + 0x294807e1] ; retf 0x8548
0x000000000046915a : fld dword ptr [rcx + 0xf] ; retf
0x000000000047d7f2 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000400c9a : fld qword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x860f
0x00000000004b9821 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000491a7a : fld xword ptr [rsp - 0x18] ; ret
0x000000000044f7b9 : fldcw word ptr [rsp - 2] ; ret
0x0000000000426069 : fldenv [rsi + 0xf] ; je 0x4260c6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042ce97 : fldenv [rsi + 0xf] ; je 0x42cef4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042f6d1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425f61 : fldenv [rsi + 0xf] ; xlatb ; ret
0x000000000047a624 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000418e9f : fmul dword ptr [rax + 0x39] ; ret
0x000000000047e801 : fmul dword ptr [rax + 0x39] ; ret 0x4976
0x000000000047eb26 : fmul dword ptr [rax + 0x39] ; ret 0x860f
0x000000000043da87 : fmul dword ptr [rax + 9] ; retf 0x4466
0x000000000048f107 : fmul dword ptr [rax - 0x39] ; ret
0x0000000000458881 : fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004114a1 : fmul dword ptr [rax - 0x77] ; ret
0x0000000000484649 : fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000047d243 : fmul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x000000000046998c : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000411b2a : fmul dword ptr [rcx + 0x21] ; ret
0x000000000045af7e : fmul dword ptr [rcx + 0xf] ; ret
0x000000000049a8ad : fmul dword ptr [rcx + 9] ; ret 0x65e9
0x000000000049ab45 : fmul dword ptr [rcx + 9] ; ret 0x85e9
0x000000000049d63c : fmul dword ptr [rcx + rdi - 0x39] ; jae 0x49d60a ; mov rdx, rcx ; jmp 0x49d622
0x000000000045cfdb : fmul dword ptr [rdi] ; ret
0x000000000048add7 : fmul qword ptr [rcx + 0x19] ; ret 0x8545
0x000000000048a45c : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x0000000000421809 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004272bf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000048f002 : fmul st(0) ; ret
0x000000000048ef80 : fmulp st(1) ; ret
0x00000000004bb06a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x000000000040dbe5 : fpatan ; ret
0x00000000004a3865 : fprem ; call qword ptr [rax - 0x1f000726]
0x00000000004c8799 : frndint ; call qword ptr [rax]
0x000000000042f451 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b9507 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004b9880 : fstp st(0) ; ret 0xde5d
0x00000000004015ea : fstp st(0) ; sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004405fd : fstp st(2), st(0) ; std ; dec dword ptr [rax - 0x75] ; jge 0x44060d ; call rbx
0x00000000004b8a4b : fstp st(3), st(0) ; retf 0xeb83
0x000000000040dc68 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042f751 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000438324 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004bae38 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000047ca62 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x00000000004c46bc : fsub qword ptr [rcx] ; add al, dl ; jge 0x4c46c3 ; call rdi
0x000000000043dbcb : fsub qword ptr [rsi + 0xf] ; jmp 0x43db97
0x000000000042f551 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042159c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000440262 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000441d6b : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000044216a : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004417d8 : fsubp st(0) ; ret 0xffe8
0x00000000004416d8 : fsubp st(0) ; ret 0xffe9
0x00000000004412d0 : fsubp st(0) ; retf 0xffed
0x00000000004bb558 : fucom st(5) ; loop 0x4bb5b1 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a080f : fucomi st(0) ; retf
0x000000000047efa5 : fucomi st(1) ; ret
0x000000000044ddb7 : fucomip st(0) ; ret
0x00000000004a0718 : fucomip st(0) ; ret 0xf7d9
0x000000000041bf10 : fucomip st(0) ; ret 0xffff
0x000000000045f340 : fucomip st(0) ; retf 0x72
0x0000000000418120 : fucomip st(0) ; retf 0xff97
0x0000000000445992 : fucomip st(3) ; ret
0x000000000041f808 : fucomp st(0) ; retf
0x00000000004681a6 : fucompp ; ret 0xfffe
0x00000000004bab9e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000494e09 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043ecc0 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000045c6a3 : hlt ; add byte ptr es:[rax + 0x63], cl ; retf 0x8948
0x0000000000495d09 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004427cb : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004be9aa : hlt ; call qword ptr [rax]
0x00000000004beed2 : hlt ; call qword ptr [rbx]
0x00000000004be7ca : hlt ; call qword ptr [rdx]
0x000000000044aa8e : hlt ; jmp 0x44aa5e
0x000000000048aa5f : hlt ; jmp 0x48aa66
0x00000000004b9908 : hlt ; jmp 0x4b98dd
0x0000000000434b8a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431cee : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043eb2f : hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000043d2c3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004c53d4 : hlt ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; test al, 5 ; cli ; jmp rdx
0x00000000004c41d4 : hlt ; pop rsp ; add byte ptr [rax], al ; js 0x4c41bc ; clc ; call qword ptr [rax]
0x00000000004bfc49 : hlt ; ret
0x000000000047efe5 : hlt ; retf
0x00000000004b9a43 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000043d2c7 : hlt ; sub eax, edx ; ret
0x00000000004c15d4 : hlt ; xor byte ptr [rax], al ; add byte ptr [rax - 0xd], bh ; cmc ; call qword ptr [rdx]
0x00000000004c18fa : idiv bh ; ret
0x000000000043ec7d : idiv byte ptr [rax + 2] ; syscall
0x000000000044cbdf : idiv byte ptr [rdi + 0x4a61a8] ; mov eax, ecx ; syscall
0x00000000004016a6 : idiv byte ptr [rdi + 1] ; call rax
0x0000000000446d16 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000049d6aa : idiv edi ; dec dword ptr [rcx + 0x63] ; add byte ptr [r8 + 1], r9b ; ret
0x000000000049bb2f : idiv edi ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004a006b : idiv edi ; nop dword ptr [rax] ; ret
0x00000000004a0028 : idiv edi ; nop word ptr [rax + rax] ; ret
0x00000000004a0a28 : idiv edi ; ret
0x00000000004c1ed2 : idiv edi ; retf 2
0x0000000000441d85 : imul eax ; push rbp ; ret
0x0000000000442607 : imul eax ; ret
0x000000000046e218 : imul eax ; ret 0xfafe
0x0000000000442118 : imul eax ; ret 0xfdbf
0x000000000047a9cf : imul eax ; retf
0x000000000044b4ed : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000043be21 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000004251e7 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000424be7 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x00000000004473cb : imul eax, dword ptr [rdx], 0 ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x0000000000444319 : imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x00000000004a070f : imul ebx, dword ptr [rax], -0x18 ; retf 0xf7d9
0x000000000047ce2f : imul ecx ; ret
0x000000000046de22 : imul ecx ; retf
0x00000000004133a4 : imul ecx, dword ptr [rax + 0x63], -0x2f ; mov eax, 2 ; syscall
0x000000000041d5f9 : imul ecx, dword ptr [rax - 0x73], 0x39481048 ; retf 0x1373
0x00000000004c434d : imul ecx, dword ptr [rdx], 0x4a08070c ; or eax, dword ptr [rdx] ; retf
0x00000000004248e7 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x000000000049b959 : imul edi, ecx, -1 ; dec dword ptr [rcx + 0x21] ; retf 0x894c
0x00000000004242e7 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000423fe7 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000423ce7 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000467384 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000497ca4 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x000000000041af04 : imul esp, dword ptr [rdx + rcx*2], 0 ; call 0x417156
0x000000000043b29c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000004c1dc4 : in al, 0x38 ; add byte ptr [rax], al ; mov byte ptr [rcx - 9], al ; call qword ptr [rax]
0x0000000000403916 : in al, 0x4c ; mov edi, esp ; mov eax, 3 ; syscall
0x00000000004bae81 : in al, 0x4c ; pop rax ; retf
0x000000000042391c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043e258 : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000004c81c4 : in al, 0x9c ; add byte ptr [rax], al ; or rsp, rdi ; call qword ptr [rax]
0x00000000004c87c4 : in al, 0xa2 ; add byte ptr [rax], al ; xchg rax, rbx ; cld ; call qword ptr [rax]
0x0000000000485fea : in al, 0xf ; lahf ; ret 0x2941
0x0000000000457bf8 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x0000000000434b6a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004268ab : in al, 0xf3 ; ret
0x00000000004a37fd : in al, 0xf8 ; call qword ptr [rax]
0x00000000004a379d : in al, 0xf8 ; call rax
0x00000000004c49f9 : in al, 0xf9 ; jmp rax
0x0000000000405569 : in al, 1 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004be7c4 : in al, 2 ; add byte ptr [rax], al ; or byte ptr [rax], bh ; hlt ; call qword ptr [rdx]
0x000000000041e0c3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000414a94 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2de
0x000000000041ca8c : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0x25e
0x000000000047a9bc : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0xfc7f
0x0000000000474805 : in al, dx ; add byte ptr [rax], dl ; add byte ptr [rax], al ; mov rsi, rsp ; syscall
0x00000000004231d0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000400a46 : in al, dx ; add eax, dword ptr [rax] ; mov eax, 0 ; leave ; ret
0x000000000047143d : in al, dx ; cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x0000000000420094 : in al, dx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sub al, byte ptr [rax] ; push rax ; retf 0x41
0x0000000000491a79 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000442444 : in al, dx ; mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x0000000000431cea : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434f6a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000465597 : in al, dx ; or al, ch ; ret 1
0x000000000041cba7 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004bb06d : in al, dx ; retf 0xae32
0x00000000004c4cc1 : in al, dx ; stc ; call qword ptr [rsi]
0x00000000004baf9e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4baf31 ; ret 0x48f
0x00000000004baf9d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4baf32 ; ret 0x48f
0x000000000043ed48 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000004b96a3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004674da : in eax, 0x29 ; retf 0x8d41
0x000000000042696a : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000452282 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004b8939 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000045a94b : in eax, 0xdf ; loopne 0x45a8dc ; ret 0xe680
0x00000000004bb559 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004b96fa : in eax, 0xe5 ; retf 0x2a91
0x0000000000466803 : in eax, 0xf ; je 0x466828 ; add rax, 2 ; ret
0x0000000000434bea : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042c3ca : in eax, 0xf3 ; ret
0x00000000004a377d : in eax, 0xf8 ; inc dword ptr [rax] ; out 0xf8, eax ; jmp rax
0x00000000004a375d : in eax, 0xf8 ; push qword ptr [rax] ; out 0xf8, eax ; call qword ptr [rax]
0x00000000004baa21 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000405475 : in eax, 1 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000048adc1 : in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x000000000041f8f3 : in eax, dx ; call 0x42c353
0x00000000004a370d : in eax, dx ; clc ; call qword ptr [rax]
0x00000000004a374d : in eax, dx ; clc ; call rax
0x000000000049ecaf : in eax, dx ; jne 0x49ec91 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000043dae2 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x0000000000431afa : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434fea : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000495810 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478dcb : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x000000000047e4d2 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414c82 : in eax, dx ; ret
0x0000000000469cff : in eax, dx ; retf
0x000000000043dc32 : in eax, dx ; sub rax, 1 ; ret
0x000000000049cd55 : in eax, dx ; xor eax, eax ; add rsp, 8 ; ret
0x000000000043def8 : inc bl ; cmp dl, 1 ; jb 0x43df0a ; mov byte ptr [rdi], cl ; ret
0x00000000004329c6 : inc bl ; jb 0x4329d6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004268d1 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004150f2 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000045e1aa : inc byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf
0x000000000044d596 : inc byte ptr [rbx] ; je 0x44d5a5 ; pop rbx ; ret
0x00000000004a370b : inc dword ptr [rax + 0x10fff8ed] ; loopne 0x4a3713 ; call rax
0x00000000004a3acb : inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004a38b3 : inc dword ptr [rax + 0x1f] ; stc ; call rax
0x00000000004a3de7 : inc dword ptr [rax + 0x40] ; stc ; inc eax ; and bh, cl ; call rax
0x00000000004bde53 : inc dword ptr [rax + 0x4b] ; std ; call qword ptr [rax - 0x1f0002b3]
0x00000000004a3357 : inc dword ptr [rax + 0x50fff800] ; add eax, edi ; jmp qword ptr [rax]
0x00000000004bddc7 : inc dword ptr [rax + 0x6a] ; std ; call qword ptr [rax]
0x00000000004be3d3 : inc dword ptr [rax + rbx*8] ; std ; call rsp
0x00000000004a374b : inc dword ptr [rax - 0x13] ; clc ; call rax
0x00000000004a3747 : inc dword ptr [rax - 0x15] ; clc ; inc dword ptr [rax - 0x13] ; clc ; call rax
0x00000000004a3777 : inc dword ptr [rax - 0x1d] ; clc ; jmp qword ptr [rax]
0x00000000004a37f7 : inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a3863 : inc dword ptr [rax - 0x27] ; clc ; call qword ptr [rax - 0x1f000726]
0x00000000004bde63 : inc dword ptr [rax - 0x2f0002ac] ; push rsi ; std ; jmp qword ptr [rax]
0x00000000004a3887 : inc dword ptr [rax - 0x2f000730] ; sar eax, 1 ; jmp qword ptr [rax]
0x00000000004a3833 : inc dword ptr [rax - 0x2f000737] ; retf 0xfff8
0x00000000004a346f : inc dword ptr [rax - 0x2f000786] ; jnp 0x4a3477 ; jmp qword ptr [rax]
0x00000000004a3877 : inc dword ptr [rax - 0x35] ; clc ; call qword ptr [rax - 0x1f000734]
0x000000000045352a : inc dword ptr [rax - 0x4d343] ; jmp qword ptr [rax]
0x00000000004556dc : inc dword ptr [rax - 0x50f43] ; jmp qword ptr [rax]
0x00000000004a349f : inc dword ptr [rax - 0x76] ; clc ; call qword ptr [rax - 0x1f000775]
0x00000000004a3707 : inc dword ptr [rax - 0x7f000715] ; in eax, dx ; clc ; call qword ptr [rax]
0x00000000004a3b23 : inc dword ptr [rax] ; adc cl, bh ; push qword ptr [rax + 0xf] ; stc ; jmp rax
0x0000000000460283 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000045399c : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffa
0x000000000042fc67 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004a34b7 : inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a3593 : inc dword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp qword ptr [rax]
0x00000000004a3e37 : inc dword ptr [rax] ; ja 0x4a3e38 ; call qword ptr [rax]
0x00000000004a3dfb : inc dword ptr [rax] ; jbe 0x4a3dfc ; call qword ptr [rax]
0x00000000004a3e8f : inc dword ptr [rax] ; jl 0x4a3e90 ; call qword ptr [rax]
0x00000000004a3e5b : inc dword ptr [rax] ; js 0x4a3e5c ; jmp qword ptr [rax]
0x00000000004a377f : inc dword ptr [rax] ; out 0xf8, eax ; jmp rax
0x00000000004a3d27 : inc dword ptr [rax] ; psubw mm7, mm7 ; jo 0x4a3d44 ; stc ; call rax
0x00000000004a36db : inc dword ptr [rax] ; ret
0x00000000004a3573 : inc dword ptr [rax] ; sahf ; clc ; jmp qword ptr [rax]
0x00000000004a38e3 : inc dword ptr [rax] ; sbb bh, cl ; call qword ptr [rax + 0x20fff919]
0x0000000000460b36 : inc dword ptr [rbp + 0x29] ; retf
0x000000000047d035 : inc dword ptr [rbp + 0x31] ; dec dword ptr [rax - 0x77] ; retf
0x000000000047143f : inc dword ptr [rbp + 0x5b0378c0] ; ret
0x0000000000473650 : inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000045b450 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x45b4d5 ; ret
0x000000000041a4a5 : inc dword ptr [rbx + rcx*4 + 0x15] ; ret
0x0000000000460677 : inc dword ptr [rbx - 0x10ab43] ; jmp qword ptr [rax]
0x000000000040d5fa : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049d1e2 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000044e527 : inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000045875f : inc dword ptr [rbx - 0x7af00008] ; retf 0xfffd
0x00000000004687ec : inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x00000000004076b2 : inc dword ptr [rbx - 0x7bf0fe08] ; ret
0x000000000040a732 : inc dword ptr [rbx - 0x7bf0fe08] ; retf
0x000000000043e5bf : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e4ef : inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004441b4 : inc dword ptr [rcx + 0xf] ; mov dh, 0x4b ; add al, 0x89 ; retf 0xeac0
0x000000000045e349 : inc dword ptr [rcx + 0xf] ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000045e1a7 : inc dword ptr [rcx + 1] ; inc byte ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf
0x00000000004a3a67 : inc dword ptr [rcx + rbx - 7] ; call rsp
0x0000000000477a70 : inc dword ptr [rcx + rcx*4 - 0x40] ; sub eax, ecx ; ret
0x000000000047eaa3 : inc dword ptr [rcx + rdi + 0x4d] ; mov eax, 0x89459673 ; retf
0x0000000000487004 : inc dword ptr [rcx - 0x77] ; cmc ; jmp 0x486fd9
0x000000000044e52a : inc dword ptr [rcx - 0x77] ; ret
0x0000000000413c45 : inc dword ptr [rcx - 0x7f] ; retf 0
0x0000000000413d9a : inc dword ptr [rcx - 0x80] ; retf 0x4d80
0x0000000000413de5 : inc dword ptr [rcx - 0x80] ; retf 0xe980
0x00000000004c94d5 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x000000000048b309 : inc dword ptr [rdi + rcx + 0x44] ; retf 0xf741
0x000000000047ff10 : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a399f : inc dword ptr [rdx + 0x1a] ; stc ; call rdx
0x00000000004a398f : inc dword ptr [rdx] ; sbb al, 0xf9 ; call qword ptr [rdx + 0x22fff91b]
0x000000000042bccd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004a38fb : inc dword ptr [rsi + 0x1e] ; stc ; call rsi
0x00000000004a3367 : inc eax ; add edi, eax ; jmp rax
0x00000000004a3deb : inc eax ; and bh, cl ; call rax
0x00000000004a3e53 : inc eax ; ja 0x4a3e54 ; jmp rax
0x00000000004a3e2b : inc eax ; jbe 0x4a3e2c ; call rax
0x00000000004a347f : inc eax ; jg 0x4a347f ; call qword ptr [rax]
0x00000000004a3e83 : inc eax ; jnp 0x4a3e84 ; jmp rax
0x00000000004a358b : inc eax ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp rax
0x00000000004bde73 : inc eax ; pop rbp ; std ; call qword ptr [rax]
0x00000000004bdee3 : inc eax ; ret 0xfffd
0x0000000000464f9c : inc ebx ; nop ; xor eax, eax ; ret
0x000000000043d7b9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000412d18 : inc ebx ; nop word ptr [rax + rax] ; ret
0x0000000000477aab : inc ebx ; sub eax, edx ; ret
0x00000000004a3617 : inc ecx ; ret 0xfff8
0x0000000000460432 : inc edi ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004a35db : inc edx ; mov esi, 0xbc60fff8 ; clc ; call qword ptr [rax]
0x00000000004a397f : inc edx ; sbb eax, 0x1d52fff9 ; stc ; jmp rdx
0x0000000000481416 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000484446 : inc esi ; add dh, byte ptr [rax] ; jmp 0x480ee3
0x00000000004a365f : inc esi ; ret
0x000000000046fc2f : insb byte ptr [rdi], dx ; add al, ch ; retf 0xb903
0x0000000000402c6b : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x00000000004882e6 : insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf 0x8948
0x000000000041d747 : insb byte ptr [rdi], dx ; add byte ptr [rax + 0xf], cl ; retf 0x894c
0x0000000000401431 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x0000000000443583 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x000000000041d1a5 : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0xf4c
0x00000000004015ed : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041db9e : insb byte ptr [rdi], dx ; add byte ptr [rbp - 0x42], dh ; ret
0x0000000000470ee5 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004434c9 : insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000004434f6 : insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x000000000047afe6 : insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000047be61 : insb byte ptr [rdi], dx ; and al, 0x78 ; call r12
0x0000000000491a7b : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044f7ba : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x00000000004a3451 : insb byte ptr [rdi], dx ; clc ; push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; clc ; call rax
0x00000000004be3d0 : insb byte ptr [rdi], dx ; fdivr st(5) ; inc dword ptr [rax + rbx*8] ; std ; call rsp
0x00000000004bb55e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004100e0 : insb byte ptr [rdi], dx ; ret 1
0x0000000000478d90 : insb byte ptr [rdi], dx ; retf 0x4df0
0x00000000004ba926 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000004bddcd : insb byte ptr [rdi], dx ; std ; push rax ; insd dword ptr [rdi], dx ; std ; call rax
0x0000000000495090 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fe6f : insd dword ptr [rdi], dx ; add byte ptr [rax], r8b ; ret
0x0000000000495f90 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000462c51 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004bb55f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000043f36f : insd dword ptr [rdi], dx ; push rcx ; add byte ptr [rax], al ; ret
0x00000000004b990d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004bddd1 : insd dword ptr [rdi], dx ; std ; call rax
0x00000000004ba81f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000478c73 : int 0x48
0x000000000044477f : int 0x7b
0x000000000040600f : int 0x80
0x00000000004c1ef1 : int 0xa
0x000000000042acaf : int 0xcb
0x000000000044b86f : int 0xf
0x0000000000488abf : int 0xfc
0x000000000045a576 : int1 ; add eax, r8d ; ret
0x0000000000444afc : int1 ; call rbx
0x0000000000473fe4 : int1 ; cmp rcx, rdx ; jne 0x473fc7 ; ret
0x000000000043de7b : int1 ; jl 0x43decc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de9c : int1 ; jl 0x43deed ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043deaf : int1 ; jl 0x43df00 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043df84 : int1 ; jl 0x43dfd5 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dfdc : int1 ; jl 0x43e02d ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043e079 : int1 ; jl 0x43e0ca ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000480d23 : int1 ; jmp 0x480cea
0x0000000000480d22 : int1 ; jmp 0x480ceb
0x000000000049a307 : int1 ; jmp rcx
0x00000000004ba7e4 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004349db : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004322bf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043d293 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000470ce5 : int1 ; or byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000043e5c2 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004a0e7b : int1 ; ret
0x00000000004baf36 : int1 ; ret 0x5803
0x0000000000469b2b : int1 ; sub eax, 0x950f0026 ; ret 0xf748
0x000000000043d297 : int1 ; sub eax, edx ; ret
0x0000000000451a58 : iretd ; call 0x41dd43
0x000000000041acfb : iretd ; mov eax, 3 ; syscall
0x000000000041accf : iretd ; mov eax, r8d ; syscall
0x000000000044210d : iretd ; mov edi, 0x8b49fffd ; call rbx
0x000000000040dc3e : ja 0x40dc63 ; ret
0x0000000000426832 : ja 0x426843 ; ret
0x000000000042c358 : ja 0x42c352 ; ret 0x7401
0x0000000000435da3 : ja 0x435da7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043b3e7 : ja 0x43b3ed ; ret
0x000000000043b403 : ja 0x43b40d ; mov dword ptr [rdi], ecx ; ret
0x000000000043b444 : ja 0x43b453 ; mov qword ptr [rdi], rcx ; ret
0x000000000043b4c9 : ja 0x43b4dd ; ret
0x000000000043b51f : ja 0x43b537 ; ret
0x000000000043b5a1 : ja 0x43b5bd ; ret
0x000000000043ba07 : ja 0x43ba11 ; lea rax, [rdi + 2] ; ret
0x000000000043ba23 : ja 0x43ba31 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000043ba74 : ja 0x43ba87 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x000000000043bb59 : ja 0x43bb71 ; lea rax, [rdi + 0x10] ; ret
0x000000000043bbcf : ja 0x43bbeb ; lea rax, [rdi + 0x14] ; ret
0x000000000043bc51 : ja 0x43bc71 ; lea rax, [rdi + 0x18] ; ret
0x000000000043eb2d : ja 0x43eb59 ; hlt ; mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000043f3cb : ja 0x43f3d3 ; ret
0x000000000043f41a : ja 0x43f423 ; ret
0x000000000043f5a9 : ja 0x43f5e3 ; ret
0x000000000043f64d : ja 0x43f697 ; add rsp, 0x60 ; pop rbx ; ret
0x000000000044fae6 : ja 0x44faf3 ; ret
0x000000000045a567 : ja 0x45a54e ; mov eax, r8d ; ret
0x000000000046a95d : ja 0x46a96b ; pop rbx ; ret
0x000000000046aceb : ja 0x46acf3 ; ret
0x000000000046ad40 : ja 0x46ad4b ; ret
0x000000000046ae90 : ja 0x46aebb ; ret
0x00000000004790ee : ja 0x479140 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000484ce4 : ja 0x484c71 ; ret 0x348
0x000000000048765b : ja 0x4875e8 ; ret 0x348
0x000000000048aa5d : ja 0x48965e ; jmp 0x48aa37
0x000000000048dc95 : ja 0x48c87e ; jmp 0x48dc6f
0x00000000004913dd : ja 0x48f6de ; jmp 0x4913b7
0x00000000004a3e39 : ja 0x4a3e36 ; call qword ptr [rax]
0x00000000004a3e3d : ja 0x4a3e3a ; jmp qword ptr [rax]
0x00000000004a3e51 : ja 0x4a3e52 ; inc eax ; ja 0x4a3e56 ; jmp rax
0x00000000004a3e55 : ja 0x4a3e52 ; jmp rax
0x00000000004a3e59 : ja 0x4a3e5a ; inc dword ptr [rax] ; js 0x4a3e5e ; jmp qword ptr [rax]
0x00000000004bafa4 : ja 0x4baf2b ; ret 0x48f
0x00000000004bdde5 : ja 0x4bddea ; push qword ptr [rax] ; jns 0x4bddee ; call qword ptr [rax]
0x0000000000413168 : jae 0x413175 ; movzx eax, byte ptr [rax] ; ret
0x0000000000416a3b : jae 0x416a65 ; movzx eax, byte ptr [rax] ; ret
0x000000000044409c : jae 0x444029 ; retf 0x8d48
0x00000000004442c4 : jae 0x4442a7 ; mov eax, 1 ; ret
0x000000000043f36d : jae 0x4444e6 ; ret
0x000000000047470b : jae 0x4746b5 ; xor eax, eax ; ret
0x000000000049d640 : jae 0x49d606 ; mov rdx, rcx ; jmp 0x49d61e
0x00000000004a0069 : jae 0x4a0053 ; idiv edi ; nop dword ptr [rax] ; ret
0x00000000004b9562 : jae 0x4b9544 ; jo 0x4b95e0 ; mov ebp, 0xfb67d10d ; ret
0x00000000004ba3fe : jae 0x4ba3d9 ; push rsi ; pop rdx ; je 0x4ba3ce ; ret 0xacfc
0x00000000004bf1c1 : jae 0x4bf1d9 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004c4ea7 : jae 0x4c4eb5 ; ret
0x00000000004302ca : jb 0x4302da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043041a : jb 0x43042a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043056a : jb 0x43057a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004306ba : jb 0x4306ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043080a : jb 0x43081a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043095a : jb 0x43096a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430aaa : jb 0x430aba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430bfa : jb 0x430c0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d4a : jb 0x430d5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e9a : jb 0x430eaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430fea : jb 0x430ffa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043113a : jb 0x43114a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043128a : jb 0x43129a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004313da : jb 0x4313ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043152a : jb 0x43153a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004328c1 : jb 0x4328aa ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432924 : jb 0x43290d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00000000004329c8 : jb 0x4329d4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043597e : jb 0x43598a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043dd67 : jb 0x43dd77 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043dd73 : jb 0x43dd89 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043dd83 : jb 0x43dd8b ; mov byte ptr [rdi], cl ; ret
0x000000000043dee5 : jb 0x43def4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043def0 : jb 0x43df03 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043defd : jb 0x43df05 ; mov byte ptr [rdi], cl ; ret
0x0000000000464cec : jb 0x464ce5 ; lea eax, [rdx + rdi] ; ret
0x000000000049afa3 : jb 0x49afad ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004a3b78 : jb 0x4a3b92 ; stc ; jmp rdx
0x00000000004babb8 : jb 0x4bac12 ; call 0x4c15d577
0x0000000000401438 : jbe 0x40144c ; syscall
0x0000000000414e8b : jbe 0x414e2b ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000426176 : jbe 0x4261b5 ; add rax, rdi ; ret
0x0000000000426186 : jbe 0x4261b7 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000426196 : jbe 0x4261b7 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000004261a6 : jbe 0x4261b7 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042c3c3 : jbe 0x42c3de ; lea rdi, [rdi + 0x10] ; jne 0x42c3b9 ; ret
0x000000000045ad32 : jbe 0x45acbf ; ret 0x8166
0x000000000046421a : jbe 0x464190 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004782ff : jbe 0x47830a ; ret
0x000000000049de36 : jbe 0x49de48 ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004a3469 : jbe 0x4a3465 ; jmp qword ptr [rax]
0x00000000004a3dfd : jbe 0x4a3dfa ; call qword ptr [rax]
0x00000000004a3e01 : jbe 0x4a3dfe ; jmp qword ptr [rax]
0x00000000004a3e2d : jbe 0x4a3e2a ; call rax
0x00000000004a3e29 : jbe 0x4a3e2a ; inc eax ; jbe 0x4a3e2e ; call rax
0x00000000004a3e31 : jbe 0x4a3e2e ; jmp rax
0x00000000004a3e35 : jbe 0x4a3e36 ; inc dword ptr [rax] ; ja 0x4a3e3a ; call qword ptr [rax]
0x00000000004bae3c : jbe 0x4bae0f ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004bae3b : jbe 0x4bae10 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004008dd : je 0x4008f8 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040092b : je 0x400940 ; pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x000000000040095a : je 0x40096a ; mov edi, 0x4be4e0 ; call rax
0x00000000004009a8 : je 0x40099a ; call rax
0x0000000000400c34 : je 0x400c62 ; adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x00000000004016a3 : je 0x4016b7 ; xor esi, esi ; mov edi, 1 ; call rax
0x00000000004021e9 : je 0x4021fd ; lea rdi, [rbx + 0x80] ; call rax
0x0000000000402435 : je 0x402449 ; lea rdi, [rbx + 0x80] ; call rax
0x0000000000402d14 : je 0x402d24 ; mov edi, 0x6cc060 ; call rax
0x0000000000402f63 : je 0x402f7d ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403157 : je 0x403171 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403572 : je 0x403582 ; mov edi, 0x6cc0a0 ; call rax
0x00000000004035ba : je 0x4035cc ; mov edi, 0x6cc0a0 ; call r15
0x00000000004036ba : je 0x4036ca ; mov edi, 0x6cc0a0 ; call rax
0x000000000040f8ee : je 0x40f8fd ; mov eax, edx ; pop rbx ; ret
0x0000000000412cf4 : je 0x412d30 ; movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x000000000041427b : je 0x414221 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414e53 : je 0x414e0d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414fc3 : je 0x414f7d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000415135 : je 0x415142 ; ret
0x0000000000415167 : je 0x415176 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415c8a : je 0x415c95 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000041782d : je 0x417a4e ; mov rdx, rax ; jmp 0x417858
0x0000000000417dfa : je 0x417e01 ; pop rbx ; ret
0x0000000000417ed7 : je 0x417edd ; call rax
0x0000000000418cc4 : je 0x418cd1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041acca : je 0x41acf9 ; xor byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x000000000041e1c2 : je 0x41e1eb ; call rax
0x000000000041ebb2 : je 0x41ebde ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000041f0f8 : je 0x41f0fe ; call rax
0x00000000004210f9 : je 0x421102 ; ret
0x0000000000421382 : je 0x421397 ; mov eax, 0x16 ; ret
0x00000000004213d1 : je 0x4213e3 ; lea rax, [rip + 0x1a966] ; ret
0x0000000000422b03 : je 0x422acd ; lea r10, [r10 + r9] ; jmp r10
0x00000000004237d5 : je 0x4237dd ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000423844 : je 0x423856 ; lea rax, [rip + 0x14853] ; ret
0x00000000004239b4 : je 0x4239be ; bsf eax, edx ; ret
0x00000000004239b4 : je 0x4239bf ; bsf eax, edx ; ret
0x0000000000423a5d : je 0x423a75 ; bsf rax, rdx ; ret
0x0000000000423a5d : je 0x423a76 ; bsf rax, rdx ; ret
0x00000000004239fc : je 0x423a89 ; bsf rax, rdx ; ret
0x000000000042572b : je 0x425756 ; sub byte ptr [rax - 0x77], cl ; retf
0x000000000042606c : je 0x4260c3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004261de : je 0x4261f1 ; lea rax, [rip + 0x8449] ; ret
0x00000000004267c0 : je 0x4267d2 ; lea rax, [rip + 0x17647] ; ret
0x0000000000426d74 : je 0x426d86 ; lea rax, [rip + 0x12ad3] ; ret
0x0000000000429243 : je 0x42920d ; lea r10, [r10 + r9] ; jmp r10
0x000000000042add3 : je 0x42ad9d ; lea r10, [r10 + r9] ; jmp r10
0x000000000042ce9a : je 0x42cef1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042cf51 : je 0x42cf69 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x000000000042f9c7 : je 0x42f9d1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043e4fd : je 0x43e4c6 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e4d5 : je 0x43e4c8 ; movzx eax, cl ; pop rbx ; ret
0x000000000043e4fd : je 0x43e4c8 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e60e : je 0x43e61c ; xor eax, eax ; ret
0x000000000043e609 : je 0x43e629 ; cmp eax, 2 ; je 0x43e621 ; xor eax, eax ; ret
0x000000000043e65d : je 0x43e643 ; ret
0x000000000043e748 : je 0x43e758 ; mov edi, 0x6cc720 ; call rax
0x000000000043e760 : je 0x43e770 ; mov edi, 0x6cc720 ; call rax
0x000000000043eac0 : je 0x43eaa1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f468 : je 0x43f4be ; add byte ptr [rax], al ; ret
0x000000000043ff2a : je 0x43ff31 ; ret
0x0000000000441270 : je 0x441282 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004429d9 : je 0x4429de ; ret
0x0000000000442a3d : je 0x442a42 ; ret
0x0000000000443fd3 : je 0x443fe3 ; mov edi, 0x6cb140 ; call rax
0x0000000000444161 : je 0x444171 ; mov edi, 0x6cb140 ; call rax
0x00000000004442e8 : je 0x4442f2 ; ret
0x0000000000444304 : je 0x444319 ; mov dword ptr [rip + 0x285c8c], edx ; pop rbx ; ret
0x0000000000444af7 : je 0x444b23 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000448bf4 : je 0x448c23 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000044d598 : je 0x44d5a3 ; pop rbx ; ret
0x000000000044d593 : je 0x44d5a8 ; cmp esi, 3 ; je 0x44d5a8 ; pop rbx ; ret
0x000000000044db20 : je 0x44db30 ; mov edi, 0x6cc720 ; call rax
0x000000000044db4f : je 0x44db67 ; mov edi, 0x6cc720 ; call rax
0x000000000044dc50 : je 0x44dc56 ; call rax
0x000000000044dcaf : je 0x44dcbf ; mov edi, 0x6cc720 ; call rax
0x000000000044de28 : je 0x44de3f ; mov edi, 0x6cc720 ; call rax
0x000000000044e108 : je 0x44e118 ; mov edi, 0x6cc720 ; call rax
0x000000000044e20c : je 0x44e212 ; call rax
0x000000000044f0cb : je 0x44f0d1 ; call rax
0x000000000044f68b : je 0x44f693 ; ret
0x0000000000450c62 : je 0x450c8f ; and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000462fc8 : je 0x462ff2 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000463c56 : je 0x463ca6 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000463c55 : je 0x463ca7 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000464a3c : je 0x464a42 ; ret
0x0000000000464a6a : je 0x464acc ; pop rbp ; pop r12 ; ret
0x0000000000464b0f : je 0x464b71 ; pop rbp ; pop r12 ; ret
0x0000000000464c4d : je 0x464c58 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464c91 : je 0x464c9c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000046586c : je 0x465895 ; bsf rax, rdx ; ret
0x000000000046586c : je 0x465896 ; bsf rax, rdx ; ret
0x00000000004657fc : je 0x4658a9 ; bsf rax, rdx ; ret
0x00000000004667e9 : je 0x466809 ; mov cl, dl ; and cl, 0xf ; je 0x466819 ; ret
0x00000000004667f0 : je 0x466812 ; ret
0x0000000000466805 : je 0x466826 ; add rax, 2 ; ret
0x0000000000466b8b : je 0x466bb4 ; call rbx
0x0000000000466c33 : je 0x466c5c ; call rbx
0x0000000000467018 : je 0x467025 ; test edx, edx ; jne 0x467017 ; ret
0x000000000046aa02 : je 0x46aa20 ; xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x000000000046b215 : je 0x46b204 ; ret
0x000000000046dce8 : je 0x46dc73 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x0000000000470e74 : je 0x470e84 ; mov edi, 0x6cb100 ; call rax
0x0000000000474e68 : je 0x474e78 ; mov edi, 0x6cb140 ; call rax
0x0000000000474e90 : je 0x474ea0 ; mov edi, 0x6cb140 ; call rax
0x0000000000474f06 : je 0x474f16 ; mov edi, 0x6cb140 ; call rax
0x000000000047642b : je 0x47643f ; mov rdi, qword ptr [rbp - 0x88] ; call rax
0x000000000047644e : je 0x47649a ; shl rdx, 5 ; add rdx, rax ; jmp 0x476471
0x0000000000476a1c : je 0x476a41 ; pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x00000000004769d3 : je 0x476a47 ; mov edi, 0x6cb140 ; call rax
0x0000000000476a37 : je 0x476aa0 ; pop rbx ; ret
0x0000000000476b74 : je 0x476b7b ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000476d6f : je 0x476d76 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047838e : je 0x478359 ; mov edi, 0x6cb140 ; call rax
0x000000000047836f : je 0x47839d ; or byte ptr [rdi + 0x6cb140], bh ; call rax
0x00000000004784d6 : je 0x4784e2 ; ret
0x00000000004784ec : je 0x4784fc ; mov edi, 0x6cb140 ; call rax
0x000000000047a93a : je 0x47a945 ; mov eax, edx ; pop rbx ; ret
0x000000000047b232 : je 0x47b246 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047be9c : je 0x47becb ; js 0x47bef1 ; lea edi, [rsp + 0x78] ; call r12
0x000000000047e908 : je 0x47e918 ; mov edi, 0x6cb140 ; call rax
0x000000000047e934 : je 0x47e944 ; mov edi, 0x6cb140 ; call rax
0x000000000047ebda : je 0x47ebee ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000482037 : je 0x48204b ; call 0x41e2a4
0x000000000048790b : je 0x487898 ; ret 0x348
0x000000000048808b : je 0x48809b ; mov edi, 0x6cb140 ; call rax
0x00000000004880b2 : je 0x4880c2 ; mov edi, 0x6cb140 ; call rax
0x0000000000488131 : je 0x488141 ; mov edi, 0x6cb140 ; call rax
0x000000000048815a : je 0x48816a ; mov edi, 0x6cb140 ; call rax
0x00000000004885b0 : je 0x4885de ; and byte ptr [rax - 0x2f], cl ; jmp 0x488579
0x0000000000494293 : je 0x49425d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000496243 : je 0x49620d ; lea r10, [r10 + r9] ; jmp r10
0x000000000049a075 : je 0x49a053 ; ret
0x000000000049c340 : je 0x49c2f8 ; add rsp, 0x18 ; ret
0x000000000049c2f7 : je 0x49c369 ; add rsp, 0x18 ; ret
0x000000000049e233 : je 0x49e244 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e249 ; ret
0x000000000049e3ed : je 0x49e457 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049e868 : je 0x49e873 ; ret
0x000000000049eada : je 0x49eaea ; mov edi, 0x6cb100 ; call rax
0x000000000049eb9b : je 0x49ebab ; mov edi, 0x6cb100 ; call rax
0x00000000004a083e : je 0x4a0849 ; call rax
0x00000000004b896c : je 0x4b899a ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004b96c8 : je 0x4b9693 ; xor al, 0xd8 ; ret
0x00000000004b9907 : je 0x4b9904 ; jmp 0x4b98de
0x00000000004ba402 : je 0x4ba3ca ; ret 0xacfc
0x00000000004bf1ba : je 0x4bf1c8 ; ret
0x00000000004c591d : je 0x4c5925 ; add al, dh ; and edx, edi ; jmp rdi
0x0000000000411cb2 : jg 0x411d2b ; mov eax, 3 ; syscall
0x0000000000412cf8 : jg 0x412d6e ; xor eax, eax ; syscall
0x0000000000426842 : jg 0x426894 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000004268a0 : jg 0x4268ec ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000426967 : jg 0x426980 ; jne 0x426957 ; mov rax, rdi ; ret
0x000000000042c3c7 : jg 0x42c3de ; jne 0x42c3b5 ; ret
0x0000000000431ea9 : jg 0x431efc ; ret
0x0000000000431ef0 : jg 0x431f40 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000431ef5 : jg 0x431f48 ; retf
0x0000000000431f2f : jg 0x431f7a ; ret
0x0000000000431f6f : jg 0x431fba ; retf
0x00000000004320a9 : jg 0x4320fc ; ret 0x894c
0x00000000004320f0 : jg 0x432140 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000004320f5 : jg 0x432148 ; retf 0x894c
0x000000000043212f : jg 0x43217a ; ret 0x894c
0x000000000043216b : jg 0x4321b6 ; retf 0x894c
0x00000000004328c0 : jg 0x43293c ; loopne 0x432891 ; jp 0x43294d ; jp 0x4328c0 ; ret
0x000000000043296c : jg 0x43297d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000004349b8 : jg 0x434a09 ; loope 0x4349b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434a2f : jg 0x434a7a ; ret 0xff2
0x0000000000434a48 : jg 0x434a99 ; loop 0x434a47 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434abf : jg 0x434b0a ; ret
0x0000000000434ad8 : jg 0x434b29 ; jrcxz 0x434ad7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b68 : jg 0x434bb9 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434be8 : jg 0x434c39 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c68 : jg 0x434cb9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ce8 : jg 0x434d39 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d68 : jg 0x434db9 ; call 0x4fc25d6a
0x0000000000434de8 : jg 0x434e39 ; jmp 0x4fc25dea
0x0000000000434e45 : jg 0x434e95 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000434e4f : jg 0x434e9a ; retf 0xff2
0x0000000000434ec5 : jg 0x434f15 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000434ecf : jg 0x434f1a ; retf
0x0000000000434f68 : jg 0x434fb9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434fe8 : jg 0x435039 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435078 : jg 0x4350c9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004350f8 : jg 0x435149 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043516c : jg 0x435177 ; ret
0x00000000004351c6 : jg 0x4351d9 ; ret
0x00000000004351c1 : jg 0x435211 ; psllq mm1, qword ptr [rdi] ; jg 0x4351de ; ret
0x0000000000435236 : jg 0x435249 ; ret
0x00000000004352a6 : jg 0x4352b9 ; ret
0x00000000004352a1 : jg 0x4352f1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000435316 : jg 0x435329 ; ret
0x0000000000435311 : jg 0x435361 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435386 : jg 0x435399 ; ret
0x0000000000435381 : jg 0x4353d1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004353f6 : jg 0x435409 ; ret
0x00000000004353f1 : jg 0x435441 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435466 : jg 0x435479 ; ret
0x0000000000435461 : jg 0x4354b1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004354d6 : jg 0x4354e9 ; ret
0x00000000004354d1 : jg 0x435521 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435546 : jg 0x435559 ; ret
0x00000000004355b6 : jg 0x4355c9 ; ret
0x0000000000435626 : jg 0x435639 ; ret
0x0000000000435621 : jg 0x435671 ; add eax, 0xf7f0ff3 ; ret
0x0000000000435696 : jg 0x4356a9 ; ret
0x0000000000435691 : jg 0x4356e1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435706 : jg 0x435719 ; ret
0x0000000000435701 : jg 0x435751 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435776 : jg 0x435789 ; ret
0x0000000000435771 : jg 0x4357c1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004357e6 : jg 0x4357f9 ; ret
0x00000000004357e1 : jg 0x435831 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435924 : jg 0x435935 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000435938 : jg 0x435949 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000435daa : jg 0x435da6 ; ret
0x000000000043b4b6 : jg 0x43b4c1 ; ret
0x000000000043b4c6 : jg 0x43b4d4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b4da : jg 0x43b4e9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b4f9 : jg 0x43b507 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b509 : jg 0x43b517 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b519 : jg 0x43b52a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b53a : jg 0x43b549 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b55a : jg 0x43b569 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b57a : jg 0x43b589 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b59a : jg 0x43b5ac ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b5dd : jg 0x43b5ef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b5fd : jg 0x43b60f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b61b : jg 0x43b62b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b63b : jg 0x43b64b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b65b : jg 0x43b66b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043b67b : jg 0x43b68b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043bb46 : jg 0x43bb55 ; lea rax, [rdi + 0xf] ; ret
0x000000000043bb56 : jg 0x43bb68 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x000000000043bb89 : jg 0x43bb9b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000043bba9 : jg 0x43bbbb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000043bccf : jg 0x43bd2f ; or eax, 0x1c478d48 ; ret
0x000000000043dd42 : jg 0x43dd52 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dde3 : jg 0x43de34 ; loopne 0x43de38 ; sub eax, edx ; vzeroupper ; ret
0x000000000043dec7 : jg 0x43ded7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043debd : jg 0x43dedd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043e490 : jg 0x43e4cd ; ret 0x2b77
0x0000000000449d0f : jg 0x449c9c ; ret 0x5c77
0x0000000000472820 : jg 0x472828 ; add byte ptr [rax], al ; call 0x43eb06
0x000000000047f341 : jg 0x47f347 ; add byte ptr [rcx], bh ; ret
0x0000000000491a54 : jg 0x491a61 ; ret 0x5488
0x00000000004a3481 : jg 0x4a347d ; call qword ptr [rax]
0x00000000004c62b9 : jg 0x4c62b7 ; jmp rdi
0x000000000040e05e : jge 0x40e063 ; call r14
0x000000000044021b : jge 0x44021f ; call rbx
0x0000000000440342 : jge 0x440346 ; call rbx
0x0000000000440350 : jge 0x440354 ; call rbx
0x0000000000440485 : jge 0x440489 ; call rbx
0x00000000004405f5 : jge 0x4405f9 ; call rbx
0x0000000000440603 : jge 0x440607 ; call rbx
0x0000000000440a56 : jge 0x440a21 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000441e13 : jge 0x441e17 ; call rbx
0x0000000000441f3b : jge 0x441f3f ; call rbx
0x000000000044207e : jge 0x442082 ; call rbx
0x000000000044217f : jge 0x442183 ; call rbx
0x000000000044219b : jge 0x44219f ; call rbx
0x00000000004424f6 : jge 0x4424a7 ; mov eax, 3 ; syscall
0x00000000004425e3 : jge 0x442584 ; mov eax, 3 ; syscall
0x0000000000453e14 : jge 0x453e4b ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000466594 : jge 0x466596 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000004669c6 : jge 0x4669cb ; call r12
0x000000000049c70f : jge 0x49c70c ; leave ; ret
0x000000000049c7a7 : jge 0x49c7aa ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c83b : jge 0x49c838 ; leave ; ret
0x000000000049c887 : jge 0x49c88a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c950 : jge 0x49c953 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c9df : jge 0x49c9dc ; leave ; ret
0x000000000049ca30 : jge 0x49ca33 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049ee40 : jge 0x49ee55 ; call r12
0x00000000004a3ecd : jge 0x4a3eca ; call rax
0x00000000004a3ed5 : jge 0x4a3ed2 ; call qword ptr [rax]
0x00000000004a3ed1 : jge 0x4a3ed2 ; push rax ; jge 0x4a3ed6 ; call qword ptr [rax]
0x00000000004b89ca : jge 0x4b89ab ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004ba314 : jge 0x4ba385 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004c46c1 : jge 0x4c46be ; call rdi
0x0000000000400c38 : jl 0x400c62 ; or al, 0x41 ; call rsp
0x0000000000400c8c : jl 0x400cba ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000041402b : jl 0x414076 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b315 : jl 0x41b340 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041b44c : jl 0x41b477 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004358a4 : jl 0x4358f3 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004358e0 : jl 0x43592f ; adc dword ptr [rcx - 1], ebx ; ret
0x0000000000435ade : jl 0x435b2d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435c45 : jl 0x435c94 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000435da7 : jl 0x435df6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000043de7c : jl 0x43decb ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de9d : jl 0x43deec ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043deb0 : jl 0x43deff ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043df85 : jl 0x43dfd4 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dfdd : jl 0x43e02c ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043e07a : jl 0x43e0c9 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000043f5d4 : jl 0x43f600 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043f5d4 : jl 0x43f601 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043f7e4 : jl 0x43f812 ; or byte ptr [rax + 0x4f], bh ; syscall
0x000000000043faea : jl 0x43fb18 ; adc byte ptr [rax + 0x101], bh ; syscall
0x000000000043fb6c : jl 0x43fb9a ; adc byte ptr [rax + 3], bh ; syscall
0x000000000043fcfa : jl 0x43fd25 ; or byte ptr [rax + 0x29], cl ; ret
0x00000000004406b0 : jl 0x4406de ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004474c6 : jl 0x4474f4 ; adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447e29 : jl 0x447e57 ; adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044820f : jl 0x44823d ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000448bf9 : jl 0x448c23 ; call r15
0x0000000000448fa0 : jl 0x448fce ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000449cb9 : jl 0x449ce7 ; xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044abc5 : jl 0x44abf3 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044d178 : jl 0x44d1a3 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000044fc62 : jl 0x44fc8d ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045296c : jl 0x452997 ; and byte ptr [rax + 1], cl ; ret
0x0000000000459008 : jl 0x458fd2 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045aceb : jl 0x45ad16 ; and byte ptr [rax - 0x77], cl ; retf 0x30be
0x000000000045cbec : jl 0x45cc17 ; and byte ptr [rax + 1], cl ; ret
0x00000000004649b5 : jl 0x464951 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000473659 : jl 0x473688 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x0000000000475054 : jl 0x4750bc ; add r8b, bpl ; ret
0x000000000047b9cd : jl 0x47b9f7 ; js 0x47ba16 ; call rsp
0x000000000047bce2 : jl 0x47bd0c ; js 0x47bd2b ; call rsp
0x000000000047bea1 : jl 0x47becb ; js 0x47beea ; call rsp
0x000000000047c0a9 : jl 0x47c0d3 ; js 0x47c0f2 ; call rsp
0x000000000047d6a7 : jl 0x47d673 ; adc byte ptr [rax - 0x77], cl ; retf 0x8b48
0x000000000048987e : jl 0x4898a9 ; or byte ptr [rax], al ; jne 0x489853 ; jmp 0x48985b
0x000000000048caae : jl 0x48cad9 ; adc byte ptr [rax], al ; jne 0x48ca83 ; jmp 0x48ca8b
0x000000000048dda6 : jl 0x48ddd1 ; sbb byte ptr [rax + 0x63], cl ; retf
0x000000000049ad62 : jl 0x49ad8d ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004a3e91 : jl 0x4a3e8e ; call qword ptr [rax]
0x00000000004a3ea9 : jl 0x4a3ea6 ; call rax
0x00000000004a3ead : jl 0x4a3eaa ; jmp rax
0x00000000004a3eb5 : jl 0x4a3eb2 ; call qword ptr [rax]
0x00000000004a3eb1 : jl 0x4a3eb2 ; push rax ; jl 0x4a3eb6 ; call qword ptr [rax]
0x00000000004ba512 : jl 0x4ba571 ; leave ; retf
0x00000000004bddf1 : jl 0x4bddf2 ; call rax
0x00000000004c285c : jl 0x4c28a8 ; add byte ptr [rax], al ; add byte ptr [rax], 0xf8 ; call qword ptr [rdi]
0x00000000004c3b5c : jl 0x4c3bbb ; add byte ptr [rax], al ; mov al, 0x9a ; clc ; jmp rbx
0x00000000004c745c : jl 0x4c73f4 ; add byte ptr [rax], al ; loopne 0x4c7493 ; sti ; call rsp
0x00000000004239fe : jle 0x423a07 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004239fe : jle 0x423a08 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044d5e2 : jle 0x44d5f5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000467472 : jle 0x467442 ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x0000000000468573 : jle 0x468543 ; add byte ptr [r8 - 0x77], cl ; ret
0x000000000047ca3d : jle 0x47ca4b ; ret
0x00000000004a347d : jle 0x4a347d ; inc eax ; jg 0x4a3481 ; call qword ptr [rax]
0x00000000004b89c2 : jle 0x4b895b ; xlatb ; retf 0xa1eb
0x00000000004ba585 : jle 0x4ba5c0 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000004216dd : jmp 0x100c4029
0x0000000000421786 : jmp 0x100c40d2
0x00000000004218c6 : jmp 0x100c4212
0x0000000000421a06 : jmp 0x100c4352
0x0000000000421b46 : jmp 0x100c4492
0x0000000000421c86 : jmp 0x100c45d2
0x0000000000421dc6 : jmp 0x100c4712
0x0000000000421f06 : jmp 0x100c4852
0x0000000000422046 : jmp 0x100c4992
0x0000000000422186 : jmp 0x100c4ad2
0x00000000004222c6 : jmp 0x100c4c12
0x0000000000422406 : jmp 0x100c4d52
0x0000000000422546 : jmp 0x100c4e92
0x0000000000422686 : jmp 0x100c4fd2
0x00000000004227c6 : jmp 0x100c5112
0x0000000000422906 : jmp 0x100c5252
0x0000000000422b29 : jmp 0x100c5475
0x0000000000422bb6 : jmp 0x100c5502
0x0000000000422c86 : jmp 0x100c55d2
0x0000000000422d56 : jmp 0x100c56a2
0x0000000000422e16 : jmp 0x100c5762
0x0000000000422ee6 : jmp 0x100c5832
0x0000000000422fb6 : jmp 0x100c5902
0x0000000000423086 : jmp 0x100c59d2
0x0000000000423156 : jmp 0x100c5aa2
0x0000000000423226 : jmp 0x100c5b72
0x00000000004232f6 : jmp 0x100c5c42
0x00000000004233c6 : jmp 0x100c5d12
0x0000000000423496 : jmp 0x100c5de2
0x0000000000423566 : jmp 0x100c5eb2
0x0000000000423636 : jmp 0x100c5f82
0x0000000000423706 : jmp 0x100c6052
0x0000000000423bed : jmp 0x100c6539
0x0000000000423cc6 : jmp 0x100c6612
0x0000000000423e46 : jmp 0x100c6792
0x0000000000423fc6 : jmp 0x100c6912
0x0000000000424146 : jmp 0x100c6a92
0x00000000004242c6 : jmp 0x100c6c12
0x0000000000424446 : jmp 0x100c6d92
0x00000000004245c6 : jmp 0x100c6f12
0x0000000000424746 : jmp 0x100c7092
0x00000000004248c6 : jmp 0x100c7212
0x0000000000424a46 : jmp 0x100c7392
0x0000000000424bc6 : jmp 0x100c7512
0x0000000000424d46 : jmp 0x100c7692
0x0000000000424ec6 : jmp 0x100c7812
0x0000000000425046 : jmp 0x100c7992
0x00000000004251c6 : jmp 0x100c7b12
0x0000000000427077 : jmp 0x100c99c3
0x00000000004271fc : jmp 0x100c9b48
0x000000000042740c : jmp 0x100c9d58
0x000000000042761c : jmp 0x100c9f68
0x000000000042782c : jmp 0x100ca178
0x0000000000427a3c : jmp 0x100ca388
0x0000000000427c4c : jmp 0x100ca598
0x0000000000427e5c : jmp 0x100ca7a8
0x000000000042806c : jmp 0x100ca9b8
0x000000000042827c : jmp 0x100cabc8
0x000000000042848c : jmp 0x100cadd8
0x000000000042869c : jmp 0x100cafe8
0x00000000004288ac : jmp 0x100cb1f8
0x0000000000428abc : jmp 0x100cb408
0x0000000000428ccc : jmp 0x100cb618
0x0000000000428edc : jmp 0x100cb828
0x00000000004292af : jmp 0x100cbbfb
0x0000000000429418 : jmp 0x100cbd64
0x00000000004295b8 : jmp 0x100cbf04
0x0000000000429758 : jmp 0x100cc0a4
0x00000000004298f8 : jmp 0x100cc244
0x0000000000429a98 : jmp 0x100cc3e4
0x0000000000429c38 : jmp 0x100cc584
0x0000000000429dd8 : jmp 0x100cc724
0x0000000000429f78 : jmp 0x100cc8c4
0x000000000042a118 : jmp 0x100cca64
0x000000000042a2b8 : jmp 0x100ccc04
0x000000000042a458 : jmp 0x100ccda4
0x000000000042a5f8 : jmp 0x100ccf44
0x000000000042a798 : jmp 0x100cd0e4
0x000000000042a938 : jmp 0x100cd284
0x000000000042aad8 : jmp 0x100cd424
0x000000000042ae25 : jmp 0x100cd771
0x000000000042af2e : jmp 0x100cd87a
0x000000000042b07e : jmp 0x100cd9ca
0x000000000042b1ce : jmp 0x100cdb1a
0x000000000042b31e : jmp 0x100cdc6a
0x000000000042b46e : jmp 0x100cddba
0x000000000042b5be : jmp 0x100cdf0a
0x000000000042b70e : jmp 0x100ce05a
0x000000000042b85e : jmp 0x100ce1aa
0x000000000042b9ae : jmp 0x100ce2fa
0x000000000042bafe : jmp 0x100ce44a
0x000000000042bc4e : jmp 0x100ce59a
0x000000000042bd9e : jmp 0x100ce6ea
0x000000000042beee : jmp 0x100ce83a
0x000000000042c03e : jmp 0x100ce98a
0x000000000042c18e : jmp 0x100ceada
0x000000000042d1cd : jmp 0x100cfb19
0x000000000042d276 : jmp 0x100cfbc2
0x000000000042d396 : jmp 0x100cfce2
0x000000000042d4b6 : jmp 0x100cfe02
0x000000000042d5d6 : jmp 0x100cff22
0x000000000042d6f6 : jmp 0x100d0042
0x000000000042d816 : jmp 0x100d0162
0x000000000042d936 : jmp 0x100d0282
0x000000000042da56 : jmp 0x100d03a2
0x000000000042db76 : jmp 0x100d04c2
0x000000000042dc96 : jmp 0x100d05e2
0x000000000042ddb6 : jmp 0x100d0702
0x000000000042ded6 : jmp 0x100d0822
0x000000000042dff6 : jmp 0x100d0942
0x000000000042e116 : jmp 0x100d0a62
0x000000000042e236 : jmp 0x100d0b82
0x00000000004360d7 : jmp 0x100d8a23
0x000000000043625c : jmp 0x100d8ba8
0x000000000043645c : jmp 0x100d8da8
0x000000000043665c : jmp 0x100d8fa8
0x000000000043685c : jmp 0x100d91a8
0x0000000000436a5c : jmp 0x100d93a8
0x0000000000436c5c : jmp 0x100d95a8
0x0000000000436e5c : jmp 0x100d97a8
0x000000000043705c : jmp 0x100d99a8
0x000000000043725c : jmp 0x100d9ba8
0x000000000043745c : jmp 0x100d9da8
0x000000000043765c : jmp 0x100d9fa8
0x000000000043785c : jmp 0x100da1a8
0x0000000000437a5c : jmp 0x100da3a8
0x0000000000437c5c : jmp 0x100da5a8
0x0000000000437e5c : jmp 0x100da7a8
0x0000000000491cb7 : jmp 0x10134603
0x0000000000491e5c : jmp 0x101347a8
0x00000000004920ac : jmp 0x101349f8
0x00000000004922fc : jmp 0x10134c48
0x000000000049254c : jmp 0x10134e98
0x000000000049279c : jmp 0x101350e8
0x00000000004929ec : jmp 0x10135338
0x0000000000492c3c : jmp 0x10135588
0x0000000000492e8c : jmp 0x101357d8
0x00000000004930dc : jmp 0x10135a28
0x000000000049332c : jmp 0x10135c78
0x000000000049357c : jmp 0x10135ec8
0x00000000004937cc : jmp 0x10136118
0x0000000000493a1c : jmp 0x10136368
0x0000000000493c6c : jmp 0x101365b8
0x0000000000493ebc : jmp 0x10136808
0x00000000004942ff : jmp 0x10136c4b
0x0000000000494498 : jmp 0x10136de4
0x0000000000494678 : jmp 0x10136fc4
0x0000000000494858 : jmp 0x101371a4
0x0000000000494a28 : jmp 0x10137374
0x0000000000494c08 : jmp 0x10137554
0x0000000000494de8 : jmp 0x10137734
0x0000000000494fc8 : jmp 0x10137914
0x00000000004951a8 : jmp 0x10137af4
0x0000000000495388 : jmp 0x10137cd4
0x0000000000495568 : jmp 0x10137eb4
0x0000000000495748 : jmp 0x10138094
0x0000000000495928 : jmp 0x10138274
0x0000000000495b08 : jmp 0x10138454
0x0000000000495ce8 : jmp 0x10138634
0x0000000000495ec8 : jmp 0x10138814
0x0000000000496295 : jmp 0x10138be1
0x00000000004963de : jmp 0x10138d2a
0x000000000049655e : jmp 0x10138eaa
0x00000000004966de : jmp 0x1013902a
0x000000000049685e : jmp 0x101391aa
0x00000000004969de : jmp 0x1013932a
0x0000000000496b5e : jmp 0x101394aa
0x0000000000496cde : jmp 0x1013962a
0x0000000000496e5e : jmp 0x101397aa
0x0000000000496fde : jmp 0x1013992a
0x000000000049715e : jmp 0x10139aaa
0x00000000004972de : jmp 0x10139c2a
0x000000000049745e : jmp 0x10139daa
0x00000000004975de : jmp 0x10139f2a
0x000000000049775e : jmp 0x1013a0aa
0x00000000004978de : jmp 0x1013a22a
0x0000000000497c87 : jmp 0x1013a5d3
0x0000000000497e2c : jmp 0x1013a778
0x000000000049806c : jmp 0x1013a9b8
0x00000000004982ac : jmp 0x1013abf8
0x00000000004984ec : jmp 0x1013ae38
0x000000000049872c : jmp 0x1013b078
0x000000000049896c : jmp 0x1013b2b8
0x0000000000498bac : jmp 0x1013b4f8
0x0000000000498dec : jmp 0x1013b738
0x000000000049902c : jmp 0x1013b978
0x000000000049926c : jmp 0x1013bbb8
0x00000000004994ac : jmp 0x1013bdf8
0x00000000004996ec : jmp 0x1013c038
0x000000000049992c : jmp 0x1013c278
0x0000000000499b6c : jmp 0x1013c4b8
0x0000000000499dac : jmp 0x1013c6f8
0x0000000000400549 : jmp 0x400516
0x00000000004007bd : jmp 0x400782
0x0000000000401081 : jmp 0x400fe1
0x0000000000402112 : jmp 0x402128
0x00000000004118c3 : jmp 0x4117cb
0x0000000000416bd5 : jmp 0x416ba2
0x0000000000417ef3 : jmp 0x417f40
0x000000000041a4a1 : jmp 0x419ed2
0x000000000041aecd : jmp 0x41a3dc
0x000000000041aede : jmp 0x41acf9
0x0000000000421484 : jmp 0x42144a
0x00000000004215d8 : jmp 0x42159d
0x000000000042cfac : jmp 0x42cf72
0x000000000042d0f8 : jmp 0x42d0bd
0x000000000042ead8 : jmp 0x42eaa6
0x000000000042eb56 : jmp 0x42eb24
0x000000000042efe8 : jmp 0x42efb6
0x000000000042f066 : jmp 0x42f034
0x000000000043da8e : jmp 0x43da54
0x000000000043db5f : jmp 0x43db25
0x000000000043dbce : jmp 0x43db94
0x000000000043f6e3 : jmp 0x43f656
0x0000000000440023 : jmp 0x43ffc6
0x0000000000443e1c : jmp 0x4438ff
0x0000000000445993 : jmp 0x445959
0x0000000000445e0e : jmp 0x445dd3
0x0000000000448303 : jmp 0x4482d1
0x000000000044aa8f : jmp 0x44aa5d
0x000000000044f5cf : jmp 0x44f1f1
0x0000000000450461 : jmp 0x45046b
0x0000000000452826 : jmp 0x4527f3
0x0000000000456c53 : jmp 0x456c2f
0x000000000045879b : jmp 0x458569
0x00000000004627e4 : jmp 0x4627a9
0x00000000004627e3 : jmp 0x4627aa
0x0000000000464f7b : jmp 0x464f41
0x0000000000464f7a : jmp 0x464f42
0x000000000046608b : jmp 0x465ee1
0x000000000046a14b : jmp 0x46a110
0x000000000046aa40 : jmp 0x46aa06
0x000000000046bcdf : jmp 0x46bcad
0x000000000046d88b : jmp 0x46d851
0x00000000004707ac : jmp 0x4703d3
0x0000000000473d18 : jmp 0x473ce5
0x0000000000479761 : jmp 0x47972f
0x0000000000479e41 : jmp 0x479e0f
0x000000000047a582 : jmp 0x47a5d4
0x000000000047d6ec : jmp 0x47d6fe
0x000000000047ed25 : jmp 0x47eae4
0x000000000047ca55 : jmp 0x47f21b
0x000000000047f550 : jmp 0x47f51d
0x0000000000480092 : jmp 0x4800e4
0x0000000000480d24 : jmp 0x480ce9
0x000000000048444a : jmp 0x480edf
0x000000000048554c : jmp 0x481ffc
0x0000000000483a85 : jmp 0x483a4a
0x00000000004855ab : jmp 0x485570
0x00000000004856e9 : jmp 0x4856b6
0x0000000000486fc9 : jmp 0x486f96
0x0000000000487008 : jmp 0x486fd5
0x000000000048728a : jmp 0x48724f
0x00000000004885b5 : jmp 0x488574
0x000000000048aa63 : jmp 0x48aa31
0x000000000048aa60 : jmp 0x48aa65
0x000000000048dc9b : jmp 0x48dc69
0x000000000048dc98 : jmp 0x48dc9d
0x0000000000459fc3 : jmp 0x49102913
0x00000000004913e3 : jmp 0x4913b1
0x0000000000491d5e : jmp 0x491d74
0x00000000004964de : jmp 0x4964f4
0x0000000000496ade : jmp 0x496af4
0x0000000000496dde : jmp 0x496df4
0x00000000004970de : jmp 0x4970f4
0x00000000004973de : jmp 0x4973f4
0x00000000004976de : jmp 0x4976f4
0x000000000049adbe : jmp 0x49ad8c
0x00000000004b8bca : jmp 0x4b8c09
0x00000000004b9909 : jmp 0x4b98dc
0x00000000004ba589 : jmp 0x4ba557
0x00000000004ba900 : jmp 0x4ba894
0x00000000004ba8ff : jmp 0x4ba895
0x00000000004baad6 : jmp 0x4baaa4
0x00000000004bdf48 : jmp 0x4bdf16
0x0000000000434dea : jmp 0x4fc25de8
0x0000000000434de9 : jmp 0x4fc25de9
0x0000000000448e52 : jmp 0xffffffff810f1178
0x0000000000449105 : jmp 0xffffffff810f142b
0x00000000004b8b77 : jmp 0xffffffff9115a54e
0x000000000046945b : jmp 0xffffffffbf091dab
0x00000000004790f1 : jmp 0xffffffffc3571a46
0x000000000047b589 : jmp 0xffffffffca70fdd1
0x000000000041cb3c : jmp 0xffffffffcb7b1346
0x000000000041ccad : jmp 0xffffffffcb7b14b7
0x000000000041d7e3 : jmp 0xffffffffcb7b1fed
0x000000000047b513 : jmp 0xffffffffcbd0fd1d
0x00000000004a3ce3 : jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3af7 : jmp qword ptr [rax + 0x10fff915]
0x00000000004a3d1b : jmp qword ptr [rax + 0x20fff910]
0x00000000004a3d13 : jmp qword ptr [rax + 0x20fff911]
0x00000000004a3d0b : jmp qword ptr [rax + 0x20fff912]
0x00000000004a3d03 : jmp qword ptr [rax + 0x20fff913]
0x00000000004a3cfb : jmp qword ptr [rax + 0x20fff914]
0x00000000004bddff : jmp qword ptr [rax + 0x20fffd85]
0x00000000004bde07 : jmp qword ptr [rax + 0x20fffd88]
0x00000000004bde0f : jmp qword ptr [rax + 0x20fffd8b]
0x00000000004bde17 : jmp qword ptr [rax + 0x20fffd8e]
0x00000000004bde1f : jmp qword ptr [rax + 0x20fffd91]
0x00000000004bde27 : jmp qword ptr [rax + 0x20fffd94]
0x00000000004bde2f : jmp qword ptr [rax + 0x20fffd97]
0x000000000041cd19 : jmp qword ptr [rax]
0x00000000004836ae : jmp qword ptr [rbx + rcx*4 + 1]
0x00000000004bdf2f : jmp qword ptr [rbx - 0x1f000238]
0x00000000004c1e2b : jmp qword ptr [rbx]
0x00000000004bffa3 : jmp qword ptr [rcx]
0x00000000004bb1c4 : jmp qword ptr [rdi]
0x00000000004a396f : jmp qword ptr [rdx + 0x12fff918]
0x00000000004a3977 : jmp qword ptr [rdx + 0x32fff91e]
0x00000000004a3997 : jmp qword ptr [rdx]
0x000000000047e419 : jmp qword ptr [rsi + 0xf]
0x00000000004a38f3 : jmp qword ptr [rsi]
0x00000000004216b9 : jmp r10
0x0000000000476c21 : jmp r11
0x000000000049a0e0 : jmp r8
0x000000000042fcb0 : jmp r9
0x00000000004a386b : jmp rax
0x0000000000476c22 : jmp rbx
0x000000000042063e : jmp rcx
0x0000000000461d4e : jmp rdi
0x00000000004216ba : jmp rdx
0x00000000004a3923 : jmp rsi
0x00000000004a3a4f : jmp rsp
0x00000000004005db : jne 0x4005e0 ; ret
0x000000000040dbe4 : jne 0x40dbc2 ; ret
0x000000000040dc15 : jne 0x40dc4f ; mov eax, 0xba ; syscall
0x000000000040fb4b : jne 0x40fb61 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410d3c : jne 0x410d43 ; pop rbx ; ret
0x0000000000413505 : jne 0x413512 ; ret
0x0000000000414c81 : jne 0x414c73 ; ret
0x0000000000415991 : jne 0x4159a8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000415ce2 : jne 0x415ccd ; pop rbx ; ret
0x0000000000415d1c : jne 0x415d15 ; lea eax, [rdx + rdi] ; ret
0x00000000004165d6 : jne 0x4165cb ; ret
0x000000000041dba0 : jne 0x41db63 ; ret
0x0000000000421624 : jne 0x421636 ; lea rax, [rip + 3] ; ret
0x0000000000426129 : jne 0x426185 ; xor rax, rax ; ret
0x00000000004260e9 : jne 0x4261a9 ; xor rax, rax ; ret
0x00000000004261ca : jne 0x4261dd ; lea rax, [rip + 0x1d] ; ret
0x00000000004268aa : jne 0x426893 ; ret
0x0000000000426a13 : jne 0x4268ff ; mov rax, rdi ; ret
0x0000000000426969 : jne 0x426955 ; mov rax, rdi ; ret
0x0000000000426e90 : jne 0x426ea2 ; lea rax, [rip + 0x67] ; ret
0x0000000000426ee3 : jne 0x426ef5 ; lea rax, [rip + 4] ; ret
0x000000000042c488 : jne 0x42c360 ; ret
0x000000000042c3c9 : jne 0x42c3b3 ; ret
0x000000000042e61c : jne 0x42e606 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042fc0d : jne 0x42fc37 ; xor eax, eax ; ret
0x000000000042f201 : jne 0x42fc3b ; xor eax, eax ; ret
0x000000000042f229 : jne 0x42fc47 ; xor eax, eax ; ret
0x000000000043be35 : jne 0x43bdc6 ; lea rax, [rdi + 3] ; ret
0x000000000043be07 : jne 0x43bdc6 ; lea rax, [rdi + 7] ; ret
0x000000000043be06 : jne 0x43bdc7 ; lea rax, [rdi + 7] ; ret
0x000000000043d594 : jne 0x43d7a8 ; xor eax, eax ; ret
0x000000000043d799 : jne 0x43d7b9 ; xor eax, eax ; ret
0x000000000043d641 : jne 0x43d7bd ; xor eax, eax ; ret
0x000000000043d7b1 : jne 0x43d7be ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000043d8c1 : jne 0x43d8b2 ; ret
0x000000000043d971 : jne 0x43d962 ; ret
0x000000000043dae1 : jne 0x43dad6 ; lea rax, [rcx - 1] ; ret
0x000000000043dc31 : jne 0x43dc26 ; sub rax, 1 ; ret
0x000000000043f457 : jne 0x43f474 ; mov eax, 2 ; syscall
0x000000000043f4b7 : jne 0x43f4d4 ; mov eax, 0 ; syscall
0x000000000043f517 : jne 0x43f534 ; mov eax, 1 ; syscall
0x000000000043f707 : jne 0x43f724 ; mov eax, 3 ; syscall
0x00000000004409c8 : jne 0x4409b0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004427ca : jne 0x4427c8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000044283a : jne 0x442838 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000442982 : jne 0x442979 ; pop rdx ; pop r10 ; ret
0x0000000000442972 : jne 0x442984 ; nop ; mov eax, 0xca ; syscall
0x0000000000442b53 : jne 0x442b4d ; xor eax, eax ; leave ; ret
0x0000000000445e0c : jne 0x445de3 ; jmp 0x445dd5
0x000000000044e525 : jne 0x44e52a ; inc dword ptr [rbx - 0x76be0008] ; ret
0x0000000000452281 : jne 0x45226d ; mov rax, rsi ; ret
0x0000000000452305 : jne 0x4522e5 ; mov rax, rsi ; ret
0x0000000000463b91 : jne 0x463b83 ; ret
0x0000000000465763 : jne 0x46576e ; xor rax, rax ; ret
0x0000000000466935 : jne 0x466942 ; mov dword ptr [r9 + 8], esi ; ret
0x0000000000466fdb : jne 0x466f96 ; mov rax, rdx ; ret
0x000000000046701c : jne 0x467013 ; ret
0x000000000046aed7 : jne 0x46aef4 ; mov eax, 0x14 ; syscall
0x000000000046b253 : jne 0x46b205 ; xor eax, eax ; ret
0x000000000046b207 : jne 0x46b25b ; ret
0x000000000046b24f : jne 0x46b25d ; test ecx, ecx ; jne 0x46b209 ; xor eax, eax ; ret
0x0000000000473ffa : jne 0x473fa0 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000473fe8 : jne 0x473fc3 ; ret
0x0000000000474107 : jne 0x47411a ; mov rax, qword ptr [rip + 0x258c60] ; ret
0x0000000000474150 : jne 0x474123 ; ret
0x0000000000476966 : jne 0x4769a3 ; ret
0x0000000000476965 : jne 0x4769a4 ; ret
0x00000000004787b3 : jne 0x4787c6 ; add rsp, 0x38 ; ret
0x0000000000478855 : jne 0x478868 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047892d : jne 0x478970 ; xor eax, eax ; add rsp, 0x68 ; ret
0x00000000004789e5 : jne 0x4789f8 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047abb0 : jne 0x47abc6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047ca54 : jne 0x47ca48 ; mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000047e368 : jne 0x47e325 ; nop word ptr [rax + rax] ; call rbx
0x000000000047ed23 : jne 0x47ed19 ; jmp 0x47eae6
0x0000000000489882 : jne 0x48984f ; jmp 0x489857
0x000000000048cab2 : jne 0x48ca7f ; jmp 0x48ca87
0x0000000000491ab0 : jne 0x491ac2 ; lea rax, [rip + 0x67] ; ret
0x0000000000491b03 : jne 0x491b15 ; lea rax, [rip + 4] ; ret
0x000000000049c403 : jne 0x49c3fc ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000049c467 : jne 0x49c45c ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000049c70b : jne 0x49c704 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c837 : jne 0x49c830 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c9db : jne 0x49c9d4 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049cd54 : jne 0x49cd4b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049cdb4 : jne 0x49cdab ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049e239 : jne 0x49e243 ; ret
0x000000000049e254 : jne 0x49e263 ; ret
0x000000000049e474 : jne 0x49e483 ; ret
0x000000000049e873 : jne 0x49e882 ; mov eax, 8 ; ret
0x000000000049ec65 : jne 0x49ec53 ; pop rbx ; ret
0x000000000049ecb0 : jne 0x49ec90 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049edd5 : jne 0x49edbb ; pop rbx ; ret
0x00000000004a3df1 : jne 0x4a3dee ; jmp rax
0x00000000004a3df9 : jne 0x4a3dfa ; inc dword ptr [rax] ; jbe 0x4a3dfe ; call qword ptr [rax]
0x00000000004b8a37 : jne 0x4b8a01 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004ba9cb : jne 0x4ba9f2 ; retf 0x32dd
0x00000000004c1b41 : jne 0x4c1b3b ; call qword ptr [rax]
0x00000000004261eb : jno 0x42624f ; add dword ptr [rax], eax ; ret
0x000000000042f4be : jno 0x42f4cd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004358a0 : jno 0x4358a9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000435ada : jno 0x435ae3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000435c41 : jno 0x435c52 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000435da6 : jno 0x435e2a ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000044206b : jno 0x442034 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000466933 : jno 0x466942 ; jne 0x466944 ; mov dword ptr [r9 + 8], esi ; ret
0x0000000000466939 : jno 0x466946 ; ret
0x0000000000478fe4 : jno 0x479036 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004a345d : jno 0x4a3459 ; call qword ptr [rax]
0x00000000004a3624 : jno 0x4a35ed ; clc ; call qword ptr [rcx]
0x000000000041249b : jnp 0x41250f ; syscall
0x00000000004a3475 : jnp 0x4a3471 ; jmp qword ptr [rax]
0x00000000004a3e81 : jnp 0x4a3e82 ; inc eax ; jnp 0x4a3e86 ; jmp rax
0x00000000004a3e85 : jnp 0x4a3e82 ; jmp rax
0x00000000004a3e8d : jnp 0x4a3e8e ; inc dword ptr [rax] ; jl 0x4a3e92 ; call qword ptr [rax]
0x00000000004b93e5 : jnp 0x4b93a2 ; ret
0x00000000004ba3e2 : jnp 0x4ba440 ; retf
0x00000000004ba7e9 : jnp 0x4ba836 ; retf 0x99e0
0x00000000004bb449 : jnp 0x4bb48a ; retf
0x00000000004bdded : jnp 0x4bddf2 ; push rax ; jl 0x4bddf6 ; call rax
0x00000000004007b7 : jns 0x4006ab ; jmp 0x400788
0x000000000042af27 : jns 0x42af02 ; retf 0xead3
0x000000000042b077 : jns 0x42b052 ; retf 0xead3
0x000000000042b1c7 : jns 0x42b1a2 ; retf 0xead3
0x000000000042b317 : jns 0x42b2f2 ; retf 0xead3
0x000000000042b467 : jns 0x42b442 ; retf 0xead3
0x000000000042b5b7 : jns 0x42b592 ; retf 0xead3
0x000000000042b707 : jns 0x42b6e2 ; retf 0xead3
0x000000000042b857 : jns 0x42b832 ; retf 0xead3
0x000000000042b9a7 : jns 0x42b982 ; retf 0xead3
0x000000000042baf7 : jns 0x42bad2 ; retf 0xead3
0x000000000042bc47 : jns 0x42bc22 ; retf 0xead3
0x000000000042bd97 : jns 0x42bd72 ; retf 0xead3
0x000000000042bee7 : jns 0x42bec2 ; retf 0xead3
0x000000000042c037 : jns 0x42c012 ; retf 0xead3
0x000000000042c187 : jns 0x42c162 ; retf 0xead3
0x00000000004358a7 : jns 0x4358aa ; ret
0x0000000000435ae1 : jns 0x435ae4 ; ret
0x0000000000435c48 : jns 0x435c53 ; ret
0x000000000046a1bc : jns 0x46a1cb ; add byte ptr [rax - 0x77], cl ; retf 0x2d75
0x000000000046f55c : jns 0x46f56a ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x00000000004963d7 : jns 0x4963b2 ; retf 0xead3
0x0000000000496557 : jns 0x496532 ; retf 0xead3
0x00000000004966d7 : jns 0x4966b2 ; retf 0xead3
0x0000000000496857 : jns 0x496832 ; retf 0xead3
0x00000000004969d7 : jns 0x4969b2 ; retf 0xead3
0x0000000000496b57 : jns 0x496b32 ; retf 0xead3
0x0000000000496cd7 : jns 0x496cb2 ; retf 0xead3
0x0000000000496e57 : jns 0x496e32 ; retf 0xead3
0x0000000000496fd7 : jns 0x496fb2 ; retf 0xead3
0x0000000000497157 : jns 0x497132 ; retf 0xead3
0x00000000004972d7 : jns 0x4972b2 ; retf 0xead3
0x0000000000497457 : jns 0x497432 ; retf 0xead3
0x00000000004975d7 : jns 0x4975b2 ; retf 0xead3
0x0000000000497757 : jns 0x497732 ; retf 0xead3
0x00000000004978d7 : jns 0x4978b2 ; retf 0xead3
0x000000000049c2f4 : jns 0x49c337 ; add byte ptr [rdx + rbp*2 + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004a34ad : jns 0x4a34a9 ; jmp rax
0x00000000004b84ee : jns 0x4b8484 ; ret 0xf869
0x00000000004b84ed : jns 0x4b8485 ; ret 0xf869
0x00000000004ba8fe : jns 0x4ba955 ; jmp 0x4ba896
0x00000000004bdde9 : jns 0x4bddea ; call qword ptr [rax]
0x000000000043e3ab : jns 0xffffffffe9336d95 ; retf
0x000000000040f5ed : jo 0x40f610 ; add al, bpl ; retf 0xff21
0x0000000000411cb3 : jo 0x411c73 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000413384 : jo 0x4133d5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463c0a : jo 0x463c22 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000046712c : jo 0x467140 ; xchg eax, ebp ; ret 0x8b4c
0x000000000047a88a : jo 0x47a817 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000047a889 : jo 0x47a818 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000049adba : jo 0x49adc2 ; add byte ptr [rax], al ; jmp 0x49ad90
0x00000000004a343c : jo 0x4a34a5 ; clc ; call qword ptr [rax]
0x00000000004a345c : jo 0x4a34d2 ; clc ; call qword ptr [rax]
0x00000000004a347c : jo 0x4a3503 ; clc ; inc eax ; jg 0x4a3482 ; call qword ptr [rax]
0x00000000004a34ac : jo 0x4a352a ; clc ; jmp rax
0x00000000004a36d8 : jo 0x4a36a1 ; clc ; inc dword ptr [rax] ; ret
0x00000000004a3790 : jo 0x4a3778 ; clc ; push qword ptr [rax] ; loope 0x4a3796 ; call qword ptr [rax]
0x00000000004a37f4 : jo 0x4a37dd ; clc ; inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a3810 : jo 0x4a37f3 ; clc ; jmp qword ptr [rax]
0x00000000004a3ab0 : jo 0x4a3acd ; stc ; jmp rax
0x00000000004a3b28 : jo 0x4a3b3c ; stc ; jmp rax
0x00000000004a3d2c : jo 0x4a3d3f ; stc ; call rax
0x00000000004b9564 : jo 0x4b95de ; mov ebp, 0xfb67d10d ; ret
0x00000000004bde70 : jo 0x4bded4 ; std ; inc eax ; pop rbp ; std ; call qword ptr [rax]
0x00000000004c13d1 : jo 0x4c13d7 ; retf 0xe0a
0x00000000004c41c0 : jo 0x4c41a0 ; clc ; call qword ptr [rbx]
0x00000000004c41f0 : jo 0x4c41d0 ; clc ; call qword ptr [rdx]
0x00000000004268f5 : jp 0x4268ef ; ret 0x7401
0x00000000004328c6 : jp 0x4328ba ; ret
0x0000000000432929 : jp 0x43291d ; ret
0x00000000004328bf : jp 0x432949 ; jb 0x4328ac ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000004328c4 : jp 0x432949 ; jp 0x4328bc ; ret
0x0000000000464f79 : jp 0x464fbe ; jmp 0x464f43
0x000000000047b70e : jp 0x47b723 ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000488785 : jp 0x48878e ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004a3471 : jp 0x4a346d ; call rax
0x00000000004b96f3 : jp 0x4b96ad ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004c5fdd : jp 0x4c5fe5 ; add al, dl ; push rcx ; cli ; jmp rsp
0x00000000004055f9 : jrcxz 0x405601 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000405661 : jrcxz 0x405669 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000434ada : jrcxz 0x434ad5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ad9 : jrcxz 0x434ad6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004429d3 : jrcxz 0x442998 ; cmp r11d, 0xa ; je 0x4429e4 ; ret
0x0000000000447f2c : jrcxz 0x447f19 ; retf
0x000000000045b456 : jrcxz 0x45b4cf ; ret
0x000000000045d468 : jrcxz 0x45d462 ; ret 0xf40
0x00000000004a3779 : jrcxz 0x4a3775 ; jmp qword ptr [rax]
0x00000000004a3778 : jrcxz 0x4a3776 ; jmp qword ptr [rax]
0x00000000004a3799 : jrcxz 0x4a3799 ; push rax ; in al, 0xf8 ; call rax
0x00000000004b8345 : jrcxz 0x4b839f ; ret
0x00000000004ba50d : jrcxz 0x4ba4d0 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004bb069 : jrcxz 0x4bb04d ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000004c6c41 : jrcxz 0x4c6c3f ; jmp qword ptr [rdx]
0x000000000040922c : js 0x40924f ; mov qword ptr [rsp + 8], rax ; call 0x405c99
0x000000000040923f : js 0x40925a ; mov qword ptr [rsp + 8], rax ; call 0x405c99
0x0000000000409252 : js 0x409265 ; mov qword ptr [rsp + 8], rax ; call 0x405c99
0x000000000040926a : js 0x40928d ; mov qword ptr [rsp + 8], rax ; call 0x405c99
0x000000000040927d : js 0x409298 ; mov qword ptr [rsp + 8], rax ; call 0x405c99
0x0000000000409996 : js 0x4099b0 ; mov qword ptr [rsp], rax ; call 0x405c98
0x00000000004099a7 : js 0x4099b9 ; mov qword ptr [rsp], rax ; call 0x405c98
0x00000000004099bd : js 0x4099df ; mov qword ptr [rsp], rax ; call 0x405c98
0x00000000004099ce : js 0x4099e8 ; mov qword ptr [rsp], rax ; call 0x405c98
0x00000000004099df : js 0x4099f1 ; mov qword ptr [rsp], rax ; call 0x405c98
0x00000000004099f5 : js 0x409a17 ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a06 : js 0x409a20 ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a17 : js 0x409a29 ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a2d : js 0x409a4f ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a3e : js 0x409a58 ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a4f : js 0x409a61 ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a65 : js 0x409a87 ; mov qword ptr [rsp], rax ; call 0x405c98
0x0000000000409a76 : js 0x409a90 ; mov qword ptr [rsp], rax ; call 0x405c98
0x00000000004427cf : js 0x44282f ; pop rbp ; ret
0x000000000044283f : js 0x44289f ; pop rbp ; ret
0x000000000044866e : js 0x4486bf ; mov edi, dword ptr [rsp + 0x28] ; call r14
0x000000000044b258 : js 0x44b2a9 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044c0b8 : js 0x44c109 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000471442 : js 0x47144b ; pop rbx ; ret
0x000000000047a88d : js 0x47a89b ; ret
0x000000000047b9cf : js 0x47ba14 ; call rsp
0x000000000047bce4 : js 0x47bd29 ; call rsp
0x000000000047be63 : js 0x47bea8 ; call rsp
0x000000000047bea3 : js 0x47bee8 ; call rsp
0x000000000047be9e : js 0x47beef ; lea edi, [rsp + 0x78] ; call r12
0x000000000047c066 : js 0x47c0ab ; call rsp
0x000000000047c0ab : js 0x47c0f0 ; call rsp
0x000000000049c635 : js 0x49c642 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000049c642 : js 0x49c64e ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a3e5d : js 0x4a3e5a ; jmp qword ptr [rax]
0x00000000004ba448 : js 0x4ba41c ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004ba3e1 : js 0x4ba461 ; pop rdx ; retf
0x00000000004c15d8 : js 0x4c15d0 ; cmc ; call qword ptr [rdx]
0x00000000004c36e1 : js 0x4c36dd ; call qword ptr [rcx]
0x00000000004c36e0 : js 0x4c36de ; call qword ptr [rcx]
0x00000000004c41d8 : js 0x4c41b8 ; clc ; call qword ptr [rax]
0x000000000041fe9d : lahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x0000000000443582 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x00000000004434c8 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf
0x00000000004434f5 : lahf ; insb byte ptr [rdi], dx ; add byte ptr [rcx - 0x77], cl ; retf 0x34c
0x00000000004baa23 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000473ffb : lahf ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000042ba2d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004ba312 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004bab14 : lahf ; push -0x57d3205 ; call 0xffffffffab597616
0x00000000004b8b20 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000440728 : lahf ; ret
0x0000000000485fec : lahf ; ret 0x2941
0x000000000040fdde : lahf ; ret 0x3841
0x000000000044072e : lahf ; ret 0x3845
0x00000000004b827d : lahf ; ret 0x871e
0x00000000004841c1 : lahf ; ret 0xb60f
0x0000000000486c58 : lahf ; ret 0xd129
0x0000000000486ccf : lahf ; ret 0xd629
0x0000000000486be1 : lahf ; ret 0xd729
0x000000000043e489 : lahf ; ret 0xea81
0x000000000049b996 : lahf ; ret 0xf45
0x0000000000463e2c : lahf ; sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x000000000042c0bd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a36ef : lcall [rax] ; loopne 0x4a36ef ; jmp rax
0x00000000004bded3 : lcall [rax] ; ret
0x00000000004111e3 : lcall [rbp + 0x41] ; pop rsp ; ret
0x000000000048844a : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044cd13 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000451b32 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x000000000041102d : lcall [rbx + 0x5d] ; ret
0x0000000000474a86 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000420113 : lcall [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000004a369b : lcall [rbx] ; ret
0x00000000004bdfa3 : lcall [rdx - 0x34] ; std ; jmp rsp
0x00000000004bdf9f : lcall [rdx - 0x34] ; std ; lcall [rdx - 0x34] ; std ; jmp rsp
0x0000000000435166 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000415d2b : lea eax, [r8 - 1] ; ret
0x000000000046b27b : lea eax, [rax + 0x493afe7e] ; cmove eax, ecx ; ret
0x000000000044004f : lea eax, [rax + rax] ; ret
0x0000000000426154 : lea eax, [rax + rdi + 0x10] ; ret
0x0000000000426164 : lea eax, [rax + rdi + 0x20] ; ret
0x0000000000426134 : lea eax, [rax + rdi - 0x10] ; ret
0x0000000000461d48 : lea eax, [rax - 0x17000011] ; jmp rdi
0x0000000000415d2c : lea eax, [rax - 1] ; ret
0x0000000000465b6d : lea eax, [rcx + rsi] ; ret
0x000000000043dae4 : lea eax, [rcx - 1] ; ret
0x000000000043bb5c : lea eax, [rdi + 0x10] ; ret
0x000000000043bb71 : lea eax, [rdi + 0x11] ; ret
0x000000000043bb8f : lea eax, [rdi + 0x12] ; ret
0x000000000043bbaf : lea eax, [rdi + 0x13] ; ret
0x000000000043bbd2 : lea eax, [rdi + 0x14] ; ret
0x000000000043bbf1 : lea eax, [rdi + 0x15] ; ret
0x000000000043bc11 : lea eax, [rdi + 0x16] ; ret
0x000000000043bc31 : lea eax, [rdi + 0x17] ; ret
0x000000000043bc54 : lea eax, [rdi + 0x18] ; ret
0x000000000043bc79 : lea eax, [rdi + 0x19] ; ret
0x000000000043bc97 : lea eax, [rdi + 0x1a] ; ret
0x000000000043bcb7 : lea eax, [rdi + 0x1b] ; ret
0x000000000043bcd3 : lea eax, [rdi + 0x1c] ; ret
0x000000000043bcf3 : lea eax, [rdi + 0x1d] ; ret
0x000000000043bd13 : lea eax, [rdi + 0x1e] ; ret
0x000000000043bd33 : lea eax, [rdi + 0x1f] ; ret
0x000000000043baad : lea eax, [rdi + 0xa] ; ret
0x000000000043bacd : lea eax, [rdi + 0xb] ; ret
0x000000000043baef : lea eax, [rdi + 0xc] ; ret
0x000000000043bb0f : lea eax, [rdi + 0xd] ; ret
0x000000000043bb2f : lea eax, [rdi + 0xe] ; ret
0x000000000043bb49 : lea eax, [rdi + 0xf] ; ret
0x000000000043b9f7 : lea eax, [rdi + 1] ; ret
0x000000000043ba0a : lea eax, [rdi + 2] ; ret
0x000000000043ba15 : lea eax, [rdi + 3] ; ret
0x000000000043ba28 : lea eax, [rdi + 4] ; ret
0x000000000043ba3d : lea eax, [rdi + 5] ; ret
0x000000000043ba5b : lea eax, [rdi + 6] ; ret
0x000000000043ba67 : lea eax, [rdi + 7] ; ret
0x000000000043ba7a : lea eax, [rdi + 8] ; ret
0x000000000043ba8f : lea eax, [rdi + 9] ; ret
0x0000000000426189 : lea eax, [rdi + rax + 0x10] ; ret
0x0000000000426199 : lea eax, [rdi + rax + 0x20] ; ret
0x0000000000426083 : lea eax, [rdi + rax + 0x30] ; ret
0x000000000042cf57 : lea eax, [rdi + rax] ; ret
0x0000000000465a69 : lea eax, [rdi + rsi] ; ret
0x00000000004782f8 : lea eax, [rdi - 1] ; cmp rax, -3 ; jbe 0x478311 ; ret
0x000000000043b9e3 : lea eax, [rdi] ; ret
0x000000000043afcd : lea eax, [rdx + 0xa] ; ret
0x000000000043afed : lea eax, [rdx + 0xb] ; ret
0x000000000043b00f : lea eax, [rdx + 0xc] ; ret
0x000000000043b02f : lea eax, [rdx + 0xd] ; ret
0x000000000043b04f : lea eax, [rdx + 0xe] ; ret
0x000000000043aedf : lea eax, [rdx + 0xf] ; ret
0x000000000043af07 : lea eax, [rdx + 1] ; ret
0x000000000043af1d : lea eax, [rdx + 2] ; ret
0x000000000043af35 : lea eax, [rdx + 3] ; ret
0x000000000043af4b : lea eax, [rdx + 4] ; ret
0x000000000043af5d : lea eax, [rdx + 5] ; ret
0x000000000043af7b : lea eax, [rdx + 6] ; ret
0x000000000043ae87 : lea eax, [rdx + 7] ; ret
0x000000000043af8d : lea eax, [rdx + 8] ; ret
0x000000000043afad : lea eax, [rdx + 9] ; ret
0x0000000000415d1e : lea eax, [rdx + rdi] ; ret
0x000000000043e55c : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000417206 : lea eax, [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000043aef5 : lea eax, [rdx] ; ret
0x0000000000426d77 : lea eax, [rip + 0x12ad3] ; ret
0x0000000000423847 : lea eax, [rip + 0x14853] ; ret
0x00000000004261e9 : lea eax, [rip + 0x15e71] ; ret
0x00000000004267c3 : lea eax, [rip + 0x17647] ; ret
0x00000000004213d4 : lea eax, [rip + 0x1a966] ; ret
0x00000000004261cd : lea eax, [rip + 0x1d] ; ret
0x0000000000426e93 : lea eax, [rip + 0x67] ; ret
0x00000000004261e1 : lea eax, [rip + 0x8449] ; ret
0x0000000000421627 : lea eax, [rip + 3] ; ret
0x0000000000426ee6 : lea eax, [rip + 4] ; ret
0x00000000004c549d : lea eax, [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000044c950 : lea eax, [rsp + 0x88] ; call r15
0x000000000047c05f : lea ebx, [rdx + rax] ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004b8b31 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000049cb65 : lea ebx, [rsp + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000466a70 : lea ecx, [rax + 1] ; call rbx
0x0000000000469ad2 : lea ecx, [rax] ; mov rdx, rax ; jmp 0x469ae3
0x000000000042fd07 : lea ecx, [rbx + rcx] ; jmp r9
0x000000000043b27e : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000452b0f : lea ecx, [rbx + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x00000000004640f1 : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047a580 : lea ecx, [rdx] ; jmp 0x47a5d6
0x0000000000480090 : lea ecx, [rdx] ; jmp 0x4800e6
0x000000000046aff7 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000465027 : lea ecx, [rsp + 0x10] ; call rbx
0x0000000000465100 : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000466b85 : lea ecx, [rsp + 0x20] ; lea rsi, [rsp + 0x40] ; call rbx
0x0000000000466ea0 : lea ecx, [rsp + 0x28] ; lea rsi, [rsp + 0x30] ; call rbx
0x0000000000466d9e : lea ecx, [rsp + 0x60] ; lea rsi, [rsp + 0x30] ; call rbx
0x000000000046fac6 : lea edi, [rax + 0x6cb1e0] ; call rdx
0x00000000004021ec : lea edi, [rbx + 0x80] ; call rax
0x000000000040e0dc : lea edi, [rbx + rsi] ; call rax
0x0000000000426966 : lea edi, [rdi + 0x10] ; jne 0x426958 ; mov rax, rdi ; ret
0x000000000042c3c6 : lea edi, [rdi + 0x10] ; jne 0x42c3b6 ; ret
0x000000000047b9cc : lea edi, [rsp + 0x78] ; call r12
0x000000000047bd72 : lea edi, [rsp + 0x80] ; call r12
0x000000000047bb7f : lea edi, [rsp + 0x88] ; call r14
0x00000000004165db : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004652d0 : lea edx, [rbp - 0x40] ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000042fdd4 : lea edx, [rbx + rdx] ; jmp rdx
0x0000000000464e7d : lea edx, [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004216b6 : lea edx, [rdx + rcx] ; jmp r10
0x00000000004301c8 : lea edx, [rdx - 0x40] ; jmp r9
0x0000000000464031 : lea edx, [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000465022 : lea edx, [rsp + 0x18] ; lea r9, [rsp + 0x10] ; call rbx
0x0000000000466c2d : lea edx, [rsp + 0x28] ; lea rsi, [rsp + 0x40] ; call rbx
0x0000000000467290 : lea edx, [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c876 : lea edx, [rsp + 0x80] ; call r12
0x00000000004860ac : lea esi, [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048cee5 : lea esi, [rax*8 + 0x4b7fc8] ; call 0x4791b9
0x0000000000466da3 : lea esi, [rsp + 0x30] ; call rbx
0x0000000000466a6b : lea esi, [rsp + 0x30] ; lea rcx, [rax + 1] ; call rbx
0x0000000000466b8a : lea esi, [rsp + 0x40] ; call rbx
0x000000000046b39d : lea esp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040f5b1 : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004216b5 : lea r10, [r10 + r9] ; jmp r10
0x000000000040e0db : lea r15, [rbx + r14] ; call rax
0x000000000044c94f : lea r8, [rsp + 0x88] ; call r15
0x000000000042fd06 : lea r9, [r11 + r9] ; jmp r9
0x000000000047a57f : lea r9, [rdx] ; jmp 0x47a5d7
0x000000000048008f : lea r9, [rdx] ; jmp 0x4800e7
0x0000000000465026 : lea r9, [rsp + 0x10] ; call rbx
0x00000000004650ff : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000426153 : lea rax, [rax + rdi + 0x10] ; ret
0x0000000000426163 : lea rax, [rax + rdi + 0x20] ; ret
0x0000000000426133 : lea rax, [rax + rdi - 0x10] ; ret
0x0000000000465b6c : lea rax, [rcx + rsi] ; ret
0x000000000043dae3 : lea rax, [rcx - 1] ; ret
0x000000000043bb5b : lea rax, [rdi + 0x10] ; ret
0x000000000043bb70 : lea rax, [rdi + 0x11] ; ret
0x000000000043bb8e : lea rax, [rdi + 0x12] ; ret
0x000000000043bbae : lea rax, [rdi + 0x13] ; ret
0x000000000043bbd1 : lea rax, [rdi + 0x14] ; ret
0x000000000043bbf0 : lea rax, [rdi + 0x15] ; ret
0x000000000043bc10 : lea rax, [rdi + 0x16] ; ret
0x000000000043bc30 : lea rax, [rdi + 0x17] ; ret
0x000000000043bc53 : lea rax, [rdi + 0x18] ; ret
0x000000000043bc78 : lea rax, [rdi + 0x19] ; ret
0x000000000043bc96 : lea rax, [rdi + 0x1a] ; ret
0x000000000043bcb6 : lea rax, [rdi + 0x1b] ; ret
0x000000000043bcd2 : lea rax, [rdi + 0x1c] ; ret
0x000000000043bcf2 : lea rax, [rdi + 0x1d] ; ret
0x000000000043bd12 : lea rax, [rdi + 0x1e] ; ret
0x000000000043bd32 : lea rax, [rdi + 0x1f] ; ret
0x000000000043baac : lea rax, [rdi + 0xa] ; ret
0x000000000043bacc : lea rax, [rdi + 0xb] ; ret
0x000000000043baee : lea rax, [rdi + 0xc] ; ret
0x000000000043bb0e : lea rax, [rdi + 0xd] ; ret
0x000000000043bb2e : lea rax, [rdi + 0xe] ; ret
0x000000000043bb48 : lea rax, [rdi + 0xf] ; ret
0x000000000043b9f6 : lea rax, [rdi + 1] ; ret
0x000000000043ba09 : lea rax, [rdi + 2] ; ret
0x000000000043ba14 : lea rax, [rdi + 3] ; ret
0x000000000043ba27 : lea rax, [rdi + 4] ; ret
0x000000000043ba3c : lea rax, [rdi + 5] ; ret
0x000000000043ba5a : lea rax, [rdi + 6] ; ret
0x000000000043ba66 : lea rax, [rdi + 7] ; ret
0x000000000043ba79 : lea rax, [rdi + 8] ; ret
0x000000000043ba8e : lea rax, [rdi + 9] ; ret
0x0000000000426188 : lea rax, [rdi + rax + 0x10] ; ret
0x0000000000426198 : lea rax, [rdi + rax + 0x20] ; ret
0x0000000000426082 : lea rax, [rdi + rax + 0x30] ; ret
0x000000000042cf56 : lea rax, [rdi + rax] ; ret
0x0000000000465a68 : lea rax, [rdi + rsi] ; ret
0x000000000043b9e2 : lea rax, [rdi] ; ret
0x000000000043afcc : lea rax, [rdx + 0xa] ; ret
0x000000000043afec : lea rax, [rdx + 0xb] ; ret
0x000000000043b00e : lea rax, [rdx + 0xc] ; ret
0x000000000043b02e : lea rax, [rdx + 0xd] ; ret
0x000000000043b04e : lea rax, [rdx + 0xe] ; ret
0x000000000043aede : lea rax, [rdx + 0xf] ; ret
0x000000000043af06 : lea rax, [rdx + 1] ; ret
0x000000000043af1c : lea rax, [rdx + 2] ; ret
0x000000000043af34 : lea rax, [rdx + 3] ; ret
0x000000000043af4a : lea rax, [rdx + 4] ; ret
0x000000000043af5c : lea rax, [rdx + 5] ; ret
0x000000000043af7a : lea rax, [rdx + 6] ; ret
0x000000000043ae86 : lea rax, [rdx + 7] ; ret
0x000000000043af8c : lea rax, [rdx + 8] ; ret
0x000000000043afac : lea rax, [rdx + 9] ; ret
0x000000000043aef4 : lea rax, [rdx] ; ret
0x0000000000426d76 : lea rax, [rip + 0x12ad3] ; ret
0x0000000000423846 : lea rax, [rip + 0x14853] ; ret
0x00000000004261e8 : lea rax, [rip + 0x15e71] ; ret
0x00000000004267c2 : lea rax, [rip + 0x17647] ; ret
0x00000000004213d3 : lea rax, [rip + 0x1a966] ; ret
0x00000000004261cc : lea rax, [rip + 0x1d] ; ret
0x0000000000426e92 : lea rax, [rip + 0x67] ; ret
0x00000000004261e0 : lea rax, [rip + 0x8449] ; ret
0x0000000000421626 : lea rax, [rip + 3] ; ret
0x0000000000426ee5 : lea rax, [rip + 4] ; ret
0x000000000049cb64 : lea rbx, [r12 + rcx*8] ; mov rsi, qword ptr [rbx] ; call r14
0x000000000043b27d : lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000466a6f : lea rcx, [rax + 1] ; call rbx
0x0000000000469ad1 : lea rcx, [rax + r12] ; mov rdx, rax ; jmp 0x469ae4
0x000000000046aff6 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046fac5 : lea rdi, [rax + 0x6cb1e0] ; call rdx
0x00000000004021eb : lea rdi, [rbx + 0x80] ; call rax
0x0000000000426965 : lea rdi, [rdi + 0x10] ; jne 0x426959 ; mov rax, rdi ; ret
0x000000000042c3c5 : lea rdi, [rdi + 0x10] ; jne 0x42c3b7 ; ret
0x000000000047b9cb : lea rdi, [rsp + 0x78] ; call r12
0x000000000047bd71 : lea rdi, [rsp + 0x80] ; call r12
0x000000000047bb7e : lea rdi, [rsp + 0x88] ; call r14
0x000000000042fdd3 : lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004301c7 : lea rdx, [rdx - 0x40] ; jmp r9
0x000000000046728f : lea rdx, [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c875 : lea rdx, [rsp + 0x80] ; call r12
0x0000000000466da2 : lea rsi, [rsp + 0x30] ; call rbx
0x0000000000466a6a : lea rsi, [rsp + 0x30] ; lea rcx, [rax + 1] ; call rbx
0x0000000000466b89 : lea rsi, [rsp + 0x40] ; call rbx
0x000000000046b39c : lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004a3835 : leave ; clc ; call rax
0x00000000004882d6 : leave ; cmove rax, rdx ; ret
0x000000000047afe5 : leave ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000043d8c0 : leave ; jne 0x43d8b3 ; ret
0x000000000043d970 : leave ; jne 0x43d963 ; ret
0x000000000043dc30 : leave ; jne 0x43dc27 ; sub rax, 1 ; ret
0x0000000000466fda : leave ; jne 0x466f97 ; mov rax, rdx ; ret
0x000000000046b252 : leave ; jne 0x46b206 ; xor eax, eax ; ret
0x000000000049a0d8 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x0000000000444b80 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000400a4e : leave ; ret
0x0000000000444bf3 : leave ; retf
0x00000000004b8ce1 : leave ; retf 0x6ee8
0x00000000004b7e09 : leave ; retf 0xcccb
0x00000000004c3e21 : leave ; std ; call qword ptr [rbx]
0x00000000004be3cf : ljmp [rax + rbx*8 - 3] ; inc dword ptr [rax + rbx*8] ; std ; call rsp
0x00000000004be42f : ljmp [rax] ; add al, 0xfe ; call rax
0x00000000004be42b : ljmp [rax] ; add al, 0xfe ; ljmp [rax] ; add al, 0xfe ; call rax
0x00000000004bdebf : ljmp [rax] ; ret 0xfffd
0x00000000004bdf2b : ljmp [rbp - 0x38] ; std ; jmp qword ptr [rbx - 0x1f000238]
0x000000000040fa10 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047a875 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042ea0e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047ff0f : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000423510 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043d240 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000048b7ee : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004ba406 : lodsb al, byte ptr [rsi] ; loop 0x4ba3d3 ; retf
0x00000000004c6e8c : lodsb al, byte ptr [rsi] ; mov dword ptr [rax], eax ; add byte ptr [rax + 0xb], al ; sti ; jmp rsi
0x00000000004784cf : lodsb al, byte ptr [rsi] ; mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4784e9 ; ret
0x00000000004bb1bd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b8a3b : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x000000000046b254 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x000000000040739d : lodsd eax, dword ptr [rsi] ; and al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fe06], al ; retf 0x22
0x00000000004ba7e5 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000495450 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041a19b : lodsd eax, dword ptr [rsi] ; or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000044f687 : lodsd eax, dword ptr [rsi] ; ret
0x000000000041bf0a : loop 0x41bf19 ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x418169
0x000000000042e61d : loop 0x42e655 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000434a4a : loop 0x434a45 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434a49 : loop 0x434a46 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000045c9db : loop 0x45c968 ; ret
0x0000000000476452 : loop 0x47645d ; add rdx, rax ; jmp 0x47646d
0x00000000004a37f9 : loop 0x4a37f5 ; jmp qword ptr [rax]
0x00000000004a37f8 : loop 0x4a37f6 ; jmp qword ptr [rax]
0x00000000004ba407 : loop 0x4ba3d2 ; retf
0x00000000004bb55a : loop 0x4bb5af ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000042c962 : loope 0x42c9b9 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004349ba : loope 0x4349b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004349b9 : loope 0x4349b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043bf6b : loope 0x43bf75 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000043e65e : loope 0x43e655 ; ret
0x00000000004443cf : loope 0x4443da ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x00000000004667ee : loope 0x466803 ; je 0x466814 ; ret
0x000000000046ac1c : loope 0x46aba9 ; ret 0xf631
0x0000000000478fe7 : loope 0x479039 ; mov dword ptr [rdi], ecx ; ret
0x0000000000479018 : loope 0x47906b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000047908d : loope 0x4790e0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000049edd6 : loope 0x49ee35 ; ret
0x00000000004a3620 : loope 0x4a35ec ; clc ; push qword ptr [rcx - 0x3c] ; clc ; call qword ptr [rcx]
0x00000000004a3775 : loope 0x4a3775 ; inc dword ptr [rax - 0x1d] ; clc ; jmp qword ptr [rax]
0x00000000004a3795 : loope 0x4a3791 ; call qword ptr [rax]
0x00000000004a3819 : loope 0x4a3815 ; call rax
0x00000000004ba511 : loope 0x4ba593 ; pop rdx ; leave ; retf
0x0000000000400d50 : loopne 0x400d67 ; mov dword ptr [r8], eax ; pop rbx ; ret
0x000000000040fa86 : loopne 0x40faae ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000040fb66 : loopne 0x40fb8e ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000412b09 : loopne 0x412b70 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412bb7 : loopne 0x412c1e ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414706 : loopne 0x41476a ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416dd5 : loopne 0x416e39 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420a4b : loopne 0x420aad ; pop rbp ; pop r12 ; ret
0x000000000042669d : loopne 0x426701 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000426732 : loopne 0x426796 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042cc1d : loopne 0x42cc75 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430221 : loopne 0x430238 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430220 : loopne 0x430239 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430371 : loopne 0x430388 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430370 : loopne 0x430389 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004304c1 : loopne 0x4304d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004304c0 : loopne 0x4304d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430611 : loopne 0x430628 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430610 : loopne 0x430629 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430761 : loopne 0x430778 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430760 : loopne 0x430779 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308b1 : loopne 0x4308c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308b0 : loopne 0x4308c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a01 : loopne 0x430a18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a00 : loopne 0x430a19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b4f : loopne 0x430b66 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b4e : loopne 0x430b67 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ca1 : loopne 0x430cb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ca0 : loopne 0x430cb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430df1 : loopne 0x430e08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430df0 : loopne 0x430e09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f41 : loopne 0x430f58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f40 : loopne 0x430f59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431091 : loopne 0x4310a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431090 : loopne 0x4310a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004311e1 : loopne 0x4311f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004311e0 : loopne 0x4311f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431331 : loopne 0x431348 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431330 : loopne 0x431349 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431481 : loopne 0x431498 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431480 : loopne 0x431499 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004328c2 : loopne 0x43288f ; jp 0x43294b ; jp 0x4328be ; ret
0x000000000043dde5 : loopne 0x43de36 ; sub eax, edx ; vzeroupper ; ret
0x000000000043dde4 : loopne 0x43de37 ; sub eax, edx ; vzeroupper ; ret
0x000000000043f4fc : loopne 0x43f551 ; add byte ptr [rax], al ; ret
0x000000000044275a : loopne 0x4427ad ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000442a38 : loopne 0x442a4d ; cmp eax, 4 ; je 0x442a47 ; ret
0x00000000004443d2 : loopne 0x444432 ; pop rbp ; ret
0x0000000000451f30 : loopne 0x451faf ; mov byte ptr [rbx + rbx*8 + 0x63488474], al ; retf 0x894c
0x000000000045a94d : loopne 0x45a8da ; ret 0xe680
0x000000000046198c : loopne 0x4619d5 ; add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000461f1b : loopne 0x461f7f ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004622d3 : loopne 0x462335 ; pop rbp ; pop r12 ; ret
0x00000000004622fd : loopne 0x46235f ; pop rbp ; pop r12 ; ret
0x00000000004629bb : loopne 0x462a1d ; pop rbp ; pop r12 ; ret
0x0000000000462a2d : loopne 0x462a8f ; pop rbp ; pop r12 ; ret
0x0000000000463ffe : loopne 0x463f97 ; mov eax, 0xffffffff ; ret
0x000000000046fc2d : loopne 0x46fbe5 ; insb byte ptr [rdi], dx ; add al, ch ; retf 0xb903
0x0000000000478b2d : loopne 0x478b36 ; sub eax, 1 ; ret
0x000000000047afe4 : loopne 0x47afb4 ; insb byte ptr [rdi], dx ; add cl, ch ; ret
0x00000000004a34a8 : loopne 0x4a343d ; clc ; push qword ptr [rax + 0x79] ; clc ; jmp rax
0x00000000004a3570 : loopne 0x4a3515 ; clc ; inc dword ptr [rax] ; sahf ; clc ; jmp qword ptr [rax]
0x00000000004a3590 : loopne 0x4a353e ; clc ; inc dword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp qword ptr [rax]
0x00000000004a36d4 : loopne 0x4a36a0 ; clc ; push qword ptr [rax - 0x3e] ; clc ; inc dword ptr [rax] ; ret
0x00000000004a36f1 : loopne 0x4a36ed ; jmp rax
0x00000000004a3711 : loopne 0x4a370d ; call rax
0x00000000004a3784 : loopne 0x4a3771 ; clc ; jmp rax
0x00000000004a3784 : loopne 0x4a3775 ; clc ; jmp rax
0x00000000004a3788 : loopne 0x4a3777 ; clc ; jmp rax
0x00000000004a37b5 : loopne 0x4a37b1 ; call rax
0x00000000004a3804 : loopne 0x4a37f0 ; clc ; jmp rax
0x00000000004a3804 : loopne 0x4a37f4 ; clc ; jmp rax
0x00000000004a37f5 : loopne 0x4a37f5 ; inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a3808 : loopne 0x4a37f6 ; clc ; jmp rax
0x00000000004a380c : loopne 0x4a3800 ; clc ; push qword ptr [rax - 0x22] ; clc ; jmp qword ptr [rax]
0x00000000004a3815 : loopne 0x4a3815 ; push rax ; loope 0x4a3819 ; call rax
0x00000000004a386c : loopne 0x4a384c ; clc ; jmp qword ptr [rax]
0x00000000004a3e34 : loopne 0x4a3eb3 ; stc ; inc dword ptr [rax] ; ja 0x4a3e3b ; call qword ptr [rax]
0x00000000004a3e58 : loopne 0x4a3ed8 ; stc ; inc dword ptr [rax] ; js 0x4a3e5f ; jmp qword ptr [rax]
0x00000000004a3eb0 : loopne 0x4a3f35 ; stc ; push rax ; jl 0x4a3eb7 ; call qword ptr [rax]
0x00000000004b8b34 : loopne 0x4b8b14 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004bddfc : loopne 0x4bde69 ; std ; jmp qword ptr [rax + 0x20fffd85]
0x00000000004c2980 : loopne 0x4c2986 ; clc ; call rsp
0x00000000004c6c40 : loopne 0x4c6c28 ; cli ; jmp qword ptr [rdx]
0x00000000004c7460 : loopne 0x4c748f ; sti ; call rsp
0x00000000004b854a : mov ah, 0x13 ; ret
0x00000000004a3a64 : mov ah, 0x19 ; stc ; inc dword ptr [rcx + rbx - 7] ; call rsp
0x000000000041f318 : mov ah, 0x2a ; add byte ptr [rax - 0x16ffbe35], ah ; retf 0xfffd
0x000000000043f528 : mov ah, 0x4f ; add byte ptr [rax], al ; ret
0x0000000000443778 : mov ah, 0x52 ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004c8194 : mov ah, 0x9c ; add byte ptr [rax], al ; or rsp, rdi ; call qword ptr [rax]
0x00000000004c8794 : mov ah, 0xa2 ; add byte ptr [rax], al ; cwde ; frndint ; call qword ptr [rax]
0x00000000004b89f0 : mov ah, 0xa5 ; ret
0x0000000000441f28 : mov ah, 0xc1 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004b8344 : mov ah, bl ; push rsi ; ret
0x000000000049a22a : mov al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c523 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000458798 : mov al, 0 ; add cl, ch ; ret
0x00000000004a3ac8 : mov al, 0x1c ; stc ; inc dword ptr [rax + 0x1c] ; stc ; call rax
0x000000000049c341 : mov al, 0x48 ; add esp, 0x18 ; ret
0x00000000004c0640 : mov al, 0x63 ; cmc ; jmp qword ptr [rax]
0x00000000004a3e28 : mov al, 0x76 ; stc ; inc eax ; jbe 0x4a3e2f ; call rax
0x00000000004a3e80 : mov al, 0x7b ; stc ; inc eax ; jnp 0x4a3e87 ; jmp rax
0x00000000004a3ea8 : mov al, 0x7c ; stc ; call rax
0x00000000004a3ecc : mov al, 0x7d ; stc ; call rax
0x00000000004bddf8 : mov al, 0x80 ; std ; jmp rax
0x00000000004c7710 : mov al, 0x8e ; jmp qword ptr [rsi]
0x00000000004c3b60 : mov al, 0x9a ; clc ; jmp rbx
0x000000000047f4c8 : mov al, 0xbe ; retf
0x00000000004c1ed0 : mov al, 0xc1 ; idiv edi ; retf 2
0x00000000004bdeec : mov al, 0xc2 ; std ; ljmp [rax] ; ret 0xfffd
0x00000000004a3530 : mov al, 0xca ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; retf 0x42
0x000000000047ee30 : mov al, 0xd3 ; retf
0x00000000004ba7f6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x0000000000447475 : mov al, 0xf ; retf 0xd285
0x000000000047efe4 : mov al, 0xf4 ; retf
0x00000000004bfb35 : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004c5c25 : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x0000000000443580 : mov al, byte ptr [rax] ; lahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x77], cl ; retf 0x348
0x0000000000439766 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000439784 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043aef0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000439740 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000040fa0f : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000439750 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000435781 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000400ed8 : mov bh, 0x2c ; add dh, dh ; ret 0x7420
0x00000000004ba880 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x000000000044d11b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000044cc9e : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x000000000043be08 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x000000000046aa06 : mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x00000000004bab58 : mov bh, 0x4e ; retf 0x9d7d
0x0000000000468570 : mov bh, 0x84 ; adc bh, byte ptr [rsi - 0x38] ; add byte ptr [r8 - 0x77], cl ; ret
0x000000000046746f : mov bh, 0x8c ; add byte ptr [rsi - 0x38], bh ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x00000000004b9824 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004b7e06 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x00000000004c2a70 : mov bh, 1 ; ret
0x00000000004baf33 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a34a1 : mov bh, al ; call qword ptr [rax - 0x1f000775]
0x00000000004752e1 : mov bh, al ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfcdb
0x00000000004bde0d : mov bh, ch ; jmp qword ptr [rax + 0x20fffd8b]
0x000000000043d6fe : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042fcdf : mov bl, 0x29 ; add byte ptr [rax + 0x39], cl ; retf 0x8949
0x00000000004babbb : mov bl, 0x29 ; retf 0xbf4b
0x0000000000466fdc : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000047e369 : mov bl, 0x66 ; nop dword ptr [rax + rax] ; call rbx
0x00000000004ba903 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004baba0 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004c3de1 : mov bl, 0xf8 ; call qword ptr [rdi]
0x0000000000446c48 : mov bl, byte ptr [rdx] ; pop rbx ; add byte ptr [rax - 0x7f], cl ; ret 0x5b00
0x00000000004b8521 : mov bx, 0xf32d ; retf
0x000000000049adb7 : mov byte ptr [r14 + 0x170], dl ; jmp 0x49ad93
0x000000000041cb70 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x0000000000411a0c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004b1dac : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000041cb71 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x0000000000447368 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000411a0d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000047bb82 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000000000044c953 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x00000000004c6ce5 : mov byte ptr [rax], al ; add byte ptr [rax], bl ; out dx, eax ; cli ; jmp qword ptr [rdx]
0x00000000004c7208 : mov byte ptr [rax], bl ; sti ; call qword ptr [rax]
0x0000000000451f32 : mov byte ptr [rbx + rbx*8 + 0x63488474], al ; retf 0x894c
0x00000000004c1dc8 : mov byte ptr [rcx - 9], al ; call qword ptr [rax]
0x00000000004c1ab8 : mov byte ptr [rcx], al ; ret
0x000000000043bb58 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x000000000043b4c8 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043bbce : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x000000000043b51e : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043bc50 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x000000000043b5a0 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043ba06 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x000000000043b3e6 : mov byte ptr [rdi + 2], dh ; ret
0x000000000043ba22 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000043b402 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b443 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004babb5 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000043184b : mov byte ptr [rdi - 1], dl ; ret
0x00000000004c62b8 : mov byte ptr [rdi - 6], bh ; jmp rdi
0x00000000004c18f8 : mov byte ptr [rdi], bh ; idiv bh ; ret
0x00000000004329cc : mov byte ptr [rdi], cl ; ret
0x000000000043b9e0 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x000000000043b3c0 : mov byte ptr [rdi], dh ; ret
0x00000000004357f3 : mov byte ptr [rdi], dl ; ret
0x000000000043af19 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000439769 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000043af47 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000439787 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000484447 : mov byte ptr [rdx], 0x30 ; jmp 0x480ee2
0x000000000043aef2 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000439742 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000440e84 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000049abe0 : mov byte ptr [rip + 0x231f79], 8 ; ret
0x0000000000400964 : mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x000000000049adb8 : mov byte ptr [rsi + 0x170], dl ; jmp 0x49ad92
0x0000000000452303 : mov byte ptr [rsi], al ; jne 0x4522e7 ; mov rax, rsi ; ret
0x000000000045227f : mov byte ptr [rsi], dl ; jne 0x45226f ; mov rax, rsi ; ret
0x000000000047aa77 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000004b8342 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004b9683 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004ba316 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004baa1f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004bb3ca : mov ch, 0xab ; ret
0x000000000042132c : mov ch, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000042f586 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004bde09 : mov ch, bh ; jmp qword ptr [rax]
0x00000000004260eb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400967 : mov cl, 0x2c ; add byte ptr [rcx], al ; ret
0x00000000004bae21 : mov cl, 0x3f ; retf
0x000000000046fc2e : mov cl, 0x6c ; add al, ch ; retf 0xb903
0x0000000000470ee4 : mov cl, 0x6c ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004a3610 : mov cl, 0xc1 ; clc ; push qword ptr [rcx] ; ret 0xfff8
0x000000000044f59b : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000413459 : mov cl, byte ptr [rax + 0x63] ; std ; mov eax, 3 ; syscall
0x0000000000429105 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004216b4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004ba7f2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000004329ca : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004667eb : mov cl, dl ; and cl, 0xf ; je 0x466817 ; ret
0x00000000004baaac : mov cs, edi ; ret 0x8b36
0x000000000042b53e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043b3e0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000411eee : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004151f0 : mov dh, 0 ; pop rbx ; ret
0x000000000041316b : mov dh, 0 ; ret
0x00000000004357f1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004262c4 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dbe0 : mov dh, 0x17 ; test dl, dl ; jne 0x40dbc6 ; ret
0x00000000004a38f0 : mov dh, 0x18 ; stc ; jmp qword ptr [rsi]
0x00000000004a38f8 : mov dh, 0x1e ; stc ; inc dword ptr [rsi + 0x1e] ; stc ; call rsi
0x000000000046206e : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040db15 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x00000000004626a3 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000043d2d1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d2c1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d291 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043d2b1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d2a1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000467e16 : mov dh, 0x4a ; add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000448cf0 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004441b7 : mov dh, 0x4b ; add al, 0x89 ; retf 0xeac0
0x000000000049a304 : mov dh, 0x4c ; add ecx, esi ; jmp rcx
0x00000000004b97e2 : mov dh, 0x4e ; ret 0x474c
0x000000000046da05 : mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000462c49 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000043d2d5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000043d2c5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000043d295 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000043d2a5 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000045d4a7 : mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d42a : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000044815c : mov dh, 0x71 ; dec dword ptr [rax - 0x77] ; retf 0x8440
0x000000000046e597 : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000044f83d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047b14d : mov dh, 0xc0 ; neg eax ; ret
0x000000000047aef7 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046adb6 : mov dh, 0xc0 ; ret
0x000000000043e4d8 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000043e500 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000041402e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004baa24 : mov dh, 0xc7 ; ret 0xe71f
0x00000000004262ea : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000004a0a26 : mov dh, 0xd6 ; idiv edi ; ret
0x000000000049b5ff : mov dh, 0xdb ; movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x0000000000422a61 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e664 : mov dh, 0xe ; sub eax, ecx ; ret
0x00000000004669c2 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000049d08a : mov dh, 1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414e8e : mov dh, 2 ; pop rbx ; ret
0x0000000000411f01 : mov dh, 2 ; ret
0x000000000042e661 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004262c1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422a64 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000040f9d4 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000043e65c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004a34a0 : mov dil, al ; call qword ptr [rax - 0x1f000775]
0x00000000004a399c : mov dl, 0x1a ; stc ; inc dword ptr [rdx + 0x1a] ; stc ; call rdx
0x00000000004318d0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000048dea5 : mov ds, word ptr [rdx + rcx + 0x708d0000] ; retf
0x00000000004bae3e : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x000000000047ca64 : mov dword ptr [0x2d0], eax ; ret
0x000000000047b70c : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000418cf3 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000046a143 : mov dword ptr [r12], 1 ; jmp 0x46a118
0x000000000044aa88 : mov dword ptr [r12], eax ; mov r12, rsi ; jmp 0x44aa64
0x0000000000400d52 : mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000466937 : mov dword ptr [r9 + 8], esi ; ret
0x0000000000435976 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000435961 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000463bc9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463c09 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464b69 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463bcd : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000464c07 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000446c58 : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000446c5b : mov dword ptr [rax + 0x54], edx ; ret
0x00000000004157da : mov dword ptr [rax + 8], 0 ; ret
0x0000000000442f06 : mov dword ptr [rax + 8], edx ; ret
0x00000000004268ce : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000049d053 : mov dword ptr [rax - 0x7d], ecx ; ret
0x00000000004806b2 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000044dcd8 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041c0e7 : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x000000000041c9f8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000046a658 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000004c6e8d : mov dword ptr [rax], eax ; add byte ptr [rax + 0xb], al ; sti ; jmp rsi
0x0000000000400d53 : mov dword ptr [rax], eax ; pop rbx ; ret
0x00000000004640f5 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000487288 : mov dword ptr [rax], edi ; jmp 0x487251
0x000000000047b0a5 : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000483a83 : mov dword ptr [rax], edx ; jmp 0x483a4c
0x0000000000464035 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047b099 : mov dword ptr [rax], edx ; pop rbx ; ret
0x0000000000464e81 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000461aa6 : mov dword ptr [rbp - 0x10d0], edx ; call 0x41dd48
0x000000000044244a : mov dword ptr [rbp - 0x40], esp ; syscall
0x000000000045dce2 : mov dword ptr [rbp - 0x470], eax ; call 0x45a7a8
0x0000000000442446 : mov dword ptr [rbp - 0x48], esp ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000045670c : mov dword ptr [rbp - 0x4d8], edx ; call 0x442928
0x0000000000456d53 : mov dword ptr [rbp - 0x4e0], ecx ; call 0x4637b8
0x00000000004550d8 : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x00000000004856e3 : mov dword ptr [rbp - 0x5a0], edx ; jmp 0x4856bc
0x0000000000402caa : mov dword ptr [rbp - 0x68], eax ; call 0x44f6c5
0x00000000004726a1 : mov dword ptr [rbp - 0xa8], edx ; call rax
0x000000000047288a : mov dword ptr [rbp - 0xa8], esi ; call rax
0x0000000000459b3f : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000471e50 : mov dword ptr [rbp - 0xc8], edx ; call rax
0x0000000000491841 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000411c32 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411c31 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d5d1 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478725 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411d07 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000046aa38 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0x46aa0e
0x000000000047875e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000047475f : mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412509 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000004786c3 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488065 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000416575 : mov dword ptr [rbx + 0x18], edx ; mov rdx, rcx ; jmp 0x416561
0x0000000000414d23 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047caa3 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000044f83f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000414d9e : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000416521 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413382 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463c54 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000464a68 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411c97 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x0000000000415055 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000044d5e7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004151ec : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047e146 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004150fc : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000488789 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000464b6c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000414d26 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000466938 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000435977 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000435962 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000435951 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000044739d : mov dword ptr [rcx], 0x39480000 ; retf
0x000000000046b2dc : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x00000000004855a9 : mov dword ptr [rcx], eax ; jmp 0x485572
0x00000000004c7d1a : mov dword ptr [rcx], eax ; ret
0x000000000049c46a : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x00000000004175b2 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000043bb6d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x000000000043bbab : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000043bc2d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x000000000043b51b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b59d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b4dd : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b5e0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b600 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b5c1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000043bc93 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x000000000043b5e3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000414cb3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043bc75 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x000000000043bcb3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x000000000043b5c5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004675bd : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000470e35 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000470e07 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000042cb91 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000414ce3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004188d0 : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c4c1 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000043bbed : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x000000000043b53d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000043bb8b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x000000000043bc0d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x000000000043b4fb : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435635 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435478 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435718 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x00000000004355c5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435408 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043ba57 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000435555 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435398 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b427 : mov dword ptr [rdi + 3], edx ; ret
0x00000000004188d3 : mov dword ptr [rdi + 4], eax ; ret
0x000000000043ba39 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x0000000000435328 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b419 : mov dword ptr [rdi + 4], edx ; ret
0x000000000043baeb : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000004352b8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b48b : mov dword ptr [rdi + 5], edx ; ret
0x000000000043bb0b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000435248 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b49b : mov dword ptr [rdi + 6], edx ; ret
0x000000000043baa9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000043bb2b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000004351d8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b469 : mov dword ptr [rdi + 7], edx ; ret
0x0000000000414cb7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000479124 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000043bac9 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000043ba8b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x000000000047a4e4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043b45b : mov dword ptr [rdi + 8], edx ; ret
0x00000000004329c3 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x00000000004268d5 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004268de : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000049c479 : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000431595 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004315d3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000047908f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000043191c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c88 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431afc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c08 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431cec : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b88 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431ebd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434af9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004320bd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434a69 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004322bd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349d9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431c9d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000431ab5 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000431c99 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000432079 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000043174f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000432076 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432276 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432476 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431599 : mov dword ptr [rdi - 8], ecx ; ret
0x00000000004315d7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000043174c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431848 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431794 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d08 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000479014 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000047911e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000045c616 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043ba25 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x000000000043ba77 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x000000000043ba04 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x000000000043b3e4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043ba55 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x000000000043b425 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043baa7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x000000000043b467 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043bac7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000043b477 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004268d3 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000043dd69 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043b488 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b498 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b4a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004268db : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b416 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b458 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043dd76 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000042c967 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x0000000000400598 : mov dword ptr [rdi], ecx ; ret
0x000000000043b9f4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x000000000043ba12 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000043ba64 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000004354e4 : mov dword ptr [rdi], edx ; ret
0x000000000043595f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004329ab : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000047a68d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043594e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043298e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000435973 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000004329c0 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000047a6b3 : mov dword ptr [rdi], esi ; ret
0x00000000004301b2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000040f9d3 : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000042cc1f : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b70d : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000043af77 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000004397a7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000043af59 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000439799 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000043b00b : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x000000000043af89 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x00000000004397b9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043b02b : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x000000000043afa9 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x00000000004397c9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000043afc9 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000043b04b : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x00000000004397d9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000043afe9 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000043aedb : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x000000000043972b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000416676 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x000000000047aab4 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x000000000046ae5f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000049a10c : mov dword ptr [rdx], eax ; add rsp, 8 ; ret
0x000000000041aedc : mov dword ptr [rdx], eax ; jmp 0x41acfb
0x000000000043af04 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x000000000043af32 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x000000000043ae84 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x00000000004124b1 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc6a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000047a68f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000412d10 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000004396d4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000047b085 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004165e2 : mov dword ptr [rdx], eax ; ret
0x0000000000463f16 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000049edcf : mov dword ptr [rip + 0x22d7ab], ebx ; jne 0x49edc1 ; pop rbx ; ret
0x000000000044f685 : mov dword ptr [rip + 0x27c3ad], edx ; je 0x44f699 ; ret
0x0000000000444306 : mov dword ptr [rip + 0x285c8c], edx ; pop rbx ; ret
0x000000000040158a : mov dword ptr [rip + 0x2c8b00], eax ; xor eax, eax ; ret
0x0000000000400705 : mov dword ptr [rip + 0x2ca9a5], eax ; pop rbp ; pop r12 ; ret
0x0000000000401437 : mov dword ptr [rsi + 0x10], esi ; syscall
0x000000000049e197 : mov dword ptr [rsi + 0x28], eax ; ret
0x000000000043dd79 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000043dd6b : mov dword ptr [rsi - 4], ecx ; ret
0x000000000046e139 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000049c4ab : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000474172 : mov dword ptr [rsi], eax ; ret
0x0000000000401434 : mov dword ptr [rsi], esi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000049cbb3 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [r15] ; call r14
0x000000000041b6bb : mov dword ptr [rsp + 0x10], edx ; call rax
0x0000000000418cf4 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x000000000041b6b6 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000047be60 : mov dword ptr [rsp + 0x78], ebp ; call r12
0x000000000047c063 : mov dword ptr [rsp + 0x78], ebx ; call r12
0x000000000047bfb2 : mov dword ptr [rsp + 0x88], ebx ; call r14
0x000000000040922f : mov dword ptr [rsp + 8], eax ; call 0x405c96
0x00000000004405c6 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000041b772 : mov dword ptr [rsp + 8], eax ; mov qword ptr [rsp], rcx ; call rdx
0x000000000047836e : mov dword ptr [rsp + 8], esi ; mov edi, 0x6cb140 ; call rax
0x0000000000491a76 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000044f7b5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x000000000046a144 : mov dword ptr [rsp], 1 ; jmp 0x46a117
0x0000000000409999 : mov dword ptr [rsp], eax ; call 0x405c95
0x000000000043f4d7 : mov dword ptr [rsp], eax ; mov eax, 0 ; syscall
0x000000000046aef7 : mov dword ptr [rsp], eax ; mov eax, 0x14 ; syscall
0x000000000043f537 : mov dword ptr [rsp], eax ; mov eax, 1 ; syscall
0x000000000043f477 : mov dword ptr [rsp], eax ; mov eax, 2 ; syscall
0x000000000043f727 : mov dword ptr [rsp], eax ; mov eax, 3 ; syscall
0x000000000044aa89 : mov dword ptr [rsp], eax ; mov r12, rsi ; jmp 0x44aa63
0x000000000044230b : mov dword ptr [rsp], eax ; mov rdx, rax ; mov eax, r12d ; syscall
0x000000000041b777 : mov dword ptr [rsp], ecx ; call rdx
0x00000000004091a3 : mov dword ptr [rsp], edx ; call 0x405c95
0x000000000047ca63 : mov dword ptr fs:[0x2d0], eax ; ret
0x000000000044dcd7 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000041c9f7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000046a657 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000487287 : mov dword ptr fs:[rax], edi ; jmp 0x487252
0x0000000000483a82 : mov dword ptr fs:[rax], edx ; jmp 0x483a4d
0x000000000046aeac : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x00000000004855a8 : mov dword ptr fs:[rcx], eax ; jmp 0x485573
0x000000000047aab3 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x00000000004124b0 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc69 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000004329aa : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000431ab0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000043b3d0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400a49 : mov eax, 0 ; leave ; ret
0x000000000043f4b9 : mov eax, 0 ; syscall
0x000000000043e5a9 : mov eax, 0x10 ; pop rbx ; ret
0x000000000043f8ea : mov eax, 0x101 ; syscall
0x000000000046ad33 : mov eax, 0x106 ; syscall
0x000000000046aed9 : mov eax, 0x14 ; syscall
0x000000000046ad80 : mov eax, 0x15 ; syscall
0x00000000004210f4 : mov eax, 0x16 ; je 0x421107 ; ret
0x0000000000421290 : mov eax, 0x16 ; ret
0x000000000043f360 : mov eax, 0x18 ; syscall
0x00000000004428e3 : mov eax, 0x19 ; syscall
0x0000000000440080 : mov eax, 0x1c ; syscall
0x000000000043e5a2 : mov eax, 0x20 ; pop rbx ; ret
0x000000000049a090 : mov eax, 0x26 ; syscall
0x000000000043e59b : mov eax, 0x30 ; pop rbx ; ret
0x000000000046ac70 : mov eax, 0x3f ; syscall
0x000000000043e594 : mov eax, 0x40 ; pop rbx ; ret
0x0000000000426789 : mov eax, 0x435810 ; ret
0x0000000000425e5c : mov eax, 0x43d7d0 ; cmove rax, rdx ; ret
0x00000000004b893b : mov eax, 0x45155e93 ; ret 0x591c
0x000000000043f59c : mov eax, 0x48 ; syscall
0x000000000049a253 : mov eax, 0x48000000 ; add esp, 8 ; ret
0x0000000000426d3a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x000000000043f7e7 : mov eax, 0x4f ; syscall
0x000000000043e58d : mov eax, 0x60 ; pop rbx ; ret
0x000000000043fe60 : mov eax, 0x61 ; syscall
0x0000000000442900 : mov eax, 0x63 ; syscall
0x000000000046ac90 : mov eax, 0x66 ; syscall
0x000000000046acb0 : mov eax, 0x68 ; syscall
0x000000000046aca0 : mov eax, 0x6b ; syscall
0x000000000046acc0 : mov eax, 0x6c ; syscall
0x0000000000417da3 : mov eax, 0x6ca800 ; ret
0x000000000046fac7 : mov eax, 0x6cb1e0 ; call rdx
0x000000000043e586 : mov eax, 0x80 ; pop rbx ; ret
0x000000000047eaa7 : mov eax, 0x89459673 ; retf
0x0000000000411041 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000046d00f : mov eax, 0x9e ; syscall
0x0000000000440060 : mov eax, 0xa ; syscall
0x0000000000440040 : mov eax, 0xb ; syscall
0x000000000040dc17 : mov eax, 0xba ; syscall
0x0000000000442448 : mov eax, 0xc065894c ; syscall
0x0000000000467350 : mov eax, 0xc9 ; syscall
0x0000000000442975 : mov eax, 0xca ; syscall
0x000000000044fad9 : mov eax, 0xe ; syscall
0x000000000043ed47 : mov eax, 0xe5 ; syscall
0x000000000040dc2e : mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x000000000044f861 : mov eax, 0xf ; syscall
0x0000000000420116 : mov eax, 0xfffffffe ; pop rbx ; ret
0x0000000000400541 : mov eax, 0xffffffff ; cmovle eax, ecx ; jmp 0x40051e
0x0000000000416bd0 : mov eax, 0xffffffff ; jmp 0x416ba7
0x00000000004111df : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000451b2e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411029 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000411ca1 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dc6c : mov eax, 0xffffffff ; ret
0x000000000047a6ad : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000415652 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043eadb : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000004442c6 : mov eax, 1 ; ret
0x00000000004003d5 : mov eax, 1 ; syscall
0x000000000049ccf0 : mov eax, 2 ; add rsp, 8 ; ret
0x0000000000466851 : mov eax, 2 ; ret
0x000000000040042f : mov eax, 2 ; syscall
0x000000000049e863 : mov eax, 3 ; je 0x49e878 ; ret
0x000000000046a6a2 : mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000412494 : mov eax, 3 ; movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000466861 : mov eax, 3 ; ret
0x0000000000400489 : mov eax, 3 ; syscall
0x000000000049cce0 : mov eax, 4 ; add rsp, 8 ; ret
0x0000000000466871 : mov eax, 4 ; ret
0x000000000043f3be : mov eax, 4 ; syscall
0x0000000000466881 : mov eax, 5 ; ret
0x000000000043f40d : mov eax, 5 ; syscall
0x0000000000466891 : mov eax, 6 ; ret
0x000000000046acde : mov eax, 6 ; syscall
0x00000000004668a1 : mov eax, 7 ; ret
0x000000000049ccc1 : mov eax, 8 ; add rsp, 8 ; ret
0x000000000043e57f : mov eax, 8 ; pop rbx ; ret
0x000000000049e875 : mov eax, 8 ; ret
0x00000000004428c0 : mov eax, 8 ; syscall
0x000000000043fff3 : mov eax, 9 ; movsxd r10, r10d ; syscall
0x000000000043ffb3 : mov eax, 9 ; syscall
0x0000000000463f4c : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000414ddc : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000410d53 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb8 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004152d8 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000487ce3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004155fc : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000464fb4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000047ebdd : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478541 : mov eax, dword ptr [rax + 8] ; ret
0x000000000047414a : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x474129 ; ret
0x000000000044f6cf : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000004554b2 : mov eax, dword ptr [rax*8 + 0x4b2ea0] ; jmp rax
0x0000000000455503 : mov eax, dword ptr [rax*8 + 0x4b2fa0] ; jmp rax
0x00000000004575f3 : mov eax, dword ptr [rax*8 + 0x4b30a0] ; jmp rax
0x0000000000456126 : mov eax, dword ptr [rax*8 + 0x4b33a0] ; jmp rax
0x0000000000460301 : mov eax, dword ptr [rax*8 + 0x4b3820] ; jmp rax
0x0000000000461625 : mov eax, dword ptr [rax*8 + 0x4b3920] ; jmp rax
0x0000000000461b09 : mov eax, dword ptr [rax*8 + 0x4b3a20] ; jmp rax
0x0000000000460397 : mov eax, dword ptr [rax*8 + 0x4b3d20] ; jmp rax
0x00000000004c6ffd : mov eax, dword ptr [rax] ; add byte ptr [rax + 0x16], ah ; sti ; jmp qword ptr [rdx]
0x000000000049c406 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000049a109 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000474a89 : mov eax, dword ptr [rax] ; ret
0x0000000000440a5c : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000004454c7 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000475f95 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000471c41 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047b0a1 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004397a4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004397b6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004397c6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004397d6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004397e6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000004293aa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000042ac82 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043af30 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000439770 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000043ae81 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000004396d1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000043af01 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000439751 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000464dff : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000004165f0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000416618 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004a0838 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a084f ; call rax
0x0000000000464fb1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416921 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000047a888 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x47a8a0 ; ret
0x000000000049c411 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000049c491 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000049c4d1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000049c531 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000049c521 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000049c4e1 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000044dcec : mov eax, dword ptr [rdi*8 + 0x6cba40] ; ret
0x00000000004784d1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x4784e7 ; ret
0x00000000004165df : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000049e235 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e247 ; ret
0x000000000049e250 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e267 ; ret
0x000000000049e470 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e487 ; ret
0x000000000043e657 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e649 ; ret
0x0000000000429106 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000410cd0 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004640f7 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000410210 : mov eax, dword ptr [rdx] ; ret
0x00000000004165d1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x4165d0 ; ret
0x0000000000488750 : mov eax, dword ptr [rip + 0x244b0a] ; ret
0x000000000047416b : mov eax, dword ptr [rip + 0x258bf7] ; mov qword ptr [rsi], rax ; ret
0x000000000047410a : mov eax, dword ptr [rip + 0x258c60] ; ret
0x000000000044cba1 : mov eax, dword ptr [rip + 0x27fb51] ; ret
0x0000000000445831 : mov eax, dword ptr [rip + 0x287a91] ; ret
0x0000000000416901 : mov eax, dword ptr [rip + 0x2b37b9] ; ret
0x000000000049cd2c : mov eax, dword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x0000000000473ffc : mov eax, dword ptr [rsi + 4] ; ret
0x000000000049cd61 : mov eax, dword ptr [rsi + 8] ; add rsp, 8 ; ret
0x0000000000464037 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000049c506 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400c90 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004474ca : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000447e2d : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000040e0d7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, [rbx + r14] ; call rax
0x000000000047895c : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x00000000004787dd : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x000000000043e714 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000474a88 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041cce5 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045a630 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041cb75 : mov eax, eax ; pop rbx ; ret
0x0000000000432aa5 : mov eax, eax ; ret
0x0000000000477a72 : mov eax, eax ; sub eax, ecx ; ret
0x000000000041acd1 : mov eax, eax ; syscall
0x0000000000412c7a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000452824 : mov eax, ebp ; jmp 0x4527f5
0x000000000046320b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000463859 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046382c : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040f703 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411046 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000400469 : mov eax, ebp ; syscall
0x000000000047a623 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004133ed : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474d58 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000466089 : mov eax, ebx ; jmp 0x465ee3
0x000000000040fa69 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fb4e : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fece : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000411d0b : mov eax, ebx ; pop rbx ; ret
0x0000000000442548 : mov eax, ebx ; syscall
0x000000000047a4e7 : mov eax, ecx ; adc eax, eax ; ret
0x000000000046b205 : mov eax, ecx ; jne 0x46b25d ; ret
0x000000000046d883 : mov eax, ecx ; mov rcx, r15 ; mov r15, rax ; jmp 0x46d859
0x000000000041c0ee : mov eax, ecx ; ret
0x000000000046a568 : mov eax, ecx ; sub rsp, 0x98 ; syscall
0x000000000040386b : mov eax, ecx ; syscall
0x0000000000416931 : mov eax, edi ; ret
0x000000000044ef14 : mov eax, edi ; syscall
0x000000000048800e : mov eax, edx ; add rsp, 0x28 ; ret
0x000000000047b213 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000041ddf8 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004175b5 : mov eax, edx ; add rsp, 8 ; ret
0x000000000047278f : mov eax, edx ; call rax
0x00000000004a3698 : mov eax, edx ; clc ; lcall [rbx] ; ret
0x000000000047ca3b : mov eax, edx ; jle 0x47ca4d ; ret
0x0000000000462fcb : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045c41a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041e782 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fc9f : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040f8f0 : mov eax, edx ; pop rbx ; ret
0x0000000000426e59 : mov eax, edx ; ret
0x00000000004004a6 : mov eax, edx ; syscall
0x0000000000478ae7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000046aa83 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487e38 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ebc4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000452284 : mov eax, esi ; ret
0x000000000043ddfb : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x000000000043eb23 : mov eax, esi ; syscall
0x0000000000414705 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420a4a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000442284 : mov eax, esp ; syscall
0x00000000004004a5 : mov eax, r10d ; syscall
0x0000000000414704 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000442283 : mov eax, r12d ; syscall
0x00000000004126f9 : mov eax, r13d ; syscall
0x000000000044ef13 : mov eax, r15d ; syscall
0x000000000045a62f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000045a569 : mov eax, r8d ; ret
0x0000000000477a71 : mov eax, r8d ; sub eax, ecx ; ret
0x000000000041acd0 : mov eax, r8d ; syscall
0x0000000000411813 : mov eax, r9d ; syscall
0x00000000004ba834 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x0000000000467c67 : mov ebp, 0x83000001 ; call 0xffffffffc40dc4aa
0x0000000000483abe : mov ebp, 0x89000019 ; retf 0x348
0x00000000004a35c5 : mov ebp, 0xbe30fff8 ; clc ; jmp qword ptr [rax]
0x00000000004ae5a4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004b7dfd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00000000004659d8 : mov ebp, 0xf80148c0 ; ret
0x0000000000465c5c : mov ebp, 0xf80148c6 ; ret
0x00000000004b9566 : mov ebp, 0xfb67d10d ; ret
0x000000000045566c : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000455bf1 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000045d13f : mov ebp, 0xfffffb60 ; call rax
0x000000000047642f : mov ebp, 0xffffff78 ; call rax
0x000000000040158d : mov ebp, dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000443ac6 : mov ebp, dword ptr [rax] ; add dh, dh ; ret 0x7420
0x000000000049c7aa : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004205af : mov ebp, eax ; call 0x41c844
0x00000000004400b7 : mov ebp, eax ; call rax
0x0000000000473d16 : mov ebp, eax ; jmp 0x473ce7
0x000000000041f8f2 : mov ebp, ebp ; call 0x42c354
0x0000000000440a59 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000478aed : mov ebp, ecx ; nop ; jmp rdx
0x000000000047d6e7 : mov ebp, edi ; mov r15, rax ; jmp 0x47d703
0x0000000000440e5f : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000487006 : mov ebp, esi ; jmp 0x486fd7
0x00000000004ba584 : mov ebx, 0x1b5c347e ; jmp 0x4ba55c
0x0000000000434ec7 : mov ebx, 0x46f00ff2 ; retf
0x00000000004bc599 : mov ebx, 0x4b ; add byte ptr [rax], al ; retf 0x4bbb
0x000000000047f54b : mov ebx, 0x4bccc0 ; jmp 0x47f522
0x0000000000431ed4 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000431ef2 : mov ebx, 0x4f7f0ff3 ; retf
0x00000000004021ed : mov ebx, 0x80 ; call rax
0x00000000004200b5 : mov ebx, 0xa0002aa6 ; retf
0x00000000004429d4 : mov ebx, 0xafb8341 ; je 0x4429e3 ; ret
0x00000000004b7dfb : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000400930 : mov ebx, 0xe0ff006c ; nop dword ptr [rax] ; pop rbp ; ret
0x0000000000445e06 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x445de9 ; jmp 0x445ddb
0x00000000004baba4 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000440e66 : mov ebx, eax ; call rax
0x0000000000448301 : mov ebx, eax ; jmp 0x4482d3
0x000000000044fbcf : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000044f0c6 : mov ebx, edi ; test rax, rax ; je 0x44f0d6 ; call rax
0x000000000046ab53 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000047ca56 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000004bf36c : mov ecx, 0x41380e0a ; ret
0x00000000004b8a39 : mov ecx, 0x5b92ac50 ; retf
0x00000000004ba50e : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x00000000004b7df9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000046ae70 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x0000000000403864 : mov ecx, 2 ; xor esi, esi ; mov eax, ecx ; syscall
0x000000000043595c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042fd05 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000464f8b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000429103 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004ba9c4 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4ba9f9 ; retf 0x32dd
0x0000000000432073 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432273 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432473 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043b400 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b441 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435633 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004355c3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435553 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435475 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435405 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435395 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435325 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004352b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435245 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004351d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435715 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043b3e1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000047365d : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x0000000000478637 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004785c5 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000467118 : mov ecx, edi ; call rbx
0x000000000046d886 : mov ecx, edi ; mov r15, rax ; jmp 0x46d856
0x0000000000432ac1 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432ac4 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004155f7 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000444afb : mov ecx, esi ; call rbx
0x0000000000473fe3 : mov ecx, esi ; cmp rcx, rdx ; jne 0x473fc8 ; ret
0x00000000004812f5 : mov edi, 0x190 ; call 0x41dd47
0x00000000004421b2 : mov edi, 0x1f0ffffd ; add bl, dh ; ret
0x0000000000442730 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000441d6d : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00000000004654cc : mov edi, 0x4a1f8c ; call 0x4017c7
0x000000000041af1c : mov edi, 0x4a243c ; call 0x417157
0x000000000041af03 : mov edi, 0x4a246b ; call 0x417157
0x0000000000442543 : mov edi, 0x4a4d5d ; mov eax, ebx ; syscall
0x0000000000442572 : mov edi, 0x4a4d68 ; mov eax, ebx ; syscall
0x000000000044cbe0 : mov edi, 0x4a61a8 ; mov eax, ecx ; syscall
0x000000000044f515 : mov edi, 0x4a6ca0 ; mov eax, ecx ; syscall
0x0000000000474d73 : mov edi, 0x4b6154 ; call 0x4017c7
0x000000000040095c : mov edi, 0x4be4e0 ; call rax
0x0000000000470e76 : mov edi, 0x6cb100 ; call rax
0x0000000000470ee2 : mov edi, 0x6cb100 ; pop rbx ; pop rbp ; jmp rax
0x00000000004784ff : mov edi, 0x6cb140 ; add rsp, 8 ; jmp rax
0x0000000000443fd5 : mov edi, 0x6cb140 ; call rax
0x0000000000476a1f : mov edi, 0x6cb140 ; jmp rax
0x00000000004008e0 : mov edi, 0x6cbb50 ; jmp rax
0x0000000000402f65 : mov edi, 0x6cbfe0 ; call rax
0x0000000000402c6f : mov edi, 0x6cbfe0 ; call rbx
0x0000000000402d16 : mov edi, 0x6cc060 ; call rax
0x00000000004035bc : mov edi, 0x6cc0a0 ; call r15
0x0000000000403574 : mov edi, 0x6cc0a0 ; call rax
0x00000000004458d1 : mov edi, 0x6cc6d0 ; call rax
0x000000000043e74a : mov edi, 0x6cc720 ; call rax
0x0000000000402c68 : mov edi, 0x6cc720 ; call rbx
0x000000000047ac62 : mov edi, 0x6cc9c0 ; call rax
0x000000000047ad8d : mov edi, 0x6cc9c4 ; call rdx
0x000000000047281f : mov edi, 0x7f ; call 0x43eb07
0x0000000000442196 : mov edi, 0x8b48fffd ; jge 0x4421a4 ; call rbx
0x000000000044210e : mov edi, 0x8b49fffd ; call rbx
0x0000000000442188 : mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x000000000044217a : mov edi, 0x8b49fffd ; jge 0x442188 ; call rbx
0x00000000004a36c5 : mov edi, 0xc060fff8 ; clc ; jmp rax
0x000000000049c15a : mov edi, 1 ; call r14
0x00000000004016a7 : mov edi, 1 ; call rax
0x000000000049ca4c : mov edi, 1 ; jmp rax
0x0000000000409995 : mov edi, dword ptr [rax + 0x10] ; mov qword ptr [rsp], rax ; call 0x405c99
0x00000000004099bc : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rsp], rax ; call 0x405c99
0x00000000004099a6 : mov edi, dword ptr [rax + 8] ; mov qword ptr [rsp], rax ; call 0x405c99
0x00000000004405c3 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045d13e : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x000000000047642e : mov edi, dword ptr [rbp - 0x88] ; call rax
0x000000000049c70e : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x00000000004669c5 : mov edi, dword ptr [rbp] ; call r12
0x000000000040e05d : mov edi, dword ptr [rbp] ; call r14
0x000000000044021a : mov edi, dword ptr [rbp] ; call rbx
0x00000000004401c8 : mov edi, dword ptr [rdi] ; call rbx
0x000000000044ed68 : mov edi, dword ptr [rdi] ; syscall
0x0000000000464f78 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x464f44
0x00000000004b9826 : mov edi, dword ptr [rdx] ; ret
0x000000000047afa8 : mov edi, dword ptr [rip + 0x251a16] ; call rax
0x000000000047ae6b : mov edi, dword ptr [rip + 0x251b53] ; jmp rax
0x0000000000440187 : mov edi, dword ptr [rsi] ; call rbx
0x00000000004471d1 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x00000000004406af : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004474c5 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447e28 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000044ba1a : mov edi, dword ptr [rsp + 0x18] ; call r14
0x000000000044820e : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000447945 : mov edi, dword ptr [rsp + 0x28] ; call r12
0x0000000000448670 : mov edi, dword ptr [rsp + 0x28] ; call r14
0x0000000000446fd2 : mov edi, dword ptr [rsp + 0x28] ; call r15
0x00000000004479f9 : mov edi, dword ptr [rsp + 0x28] ; call rbx
0x000000000044b25a : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000449878 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000449cb8 : mov edi, dword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000448bf8 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000448f9f : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000400c37 : mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000400c8b : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000043f7e3 : mov edi, dword ptr [rsp + 8] ; mov eax, 0x4f ; syscall
0x0000000000442350 : mov edi, dword ptr [rsp + 8] ; xor eax, eax ; syscall
0x0000000000440610 : mov edi, dword ptr [rsp] ; call rbx
0x000000000049e03a : mov edi, dword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x0000000000473938 : mov edi, eax ; call 0x400354
0x0000000000473938 : mov edi, eax ; call 0x400359
0x0000000000408672 : mov edi, eax ; call 0x41e0e8
0x000000000042129a : mov edi, eax ; call rcx
0x000000000046d889 : mov edi, eax ; jmp 0x46d853
0x000000000047d6ea : mov edi, eax ; jmp 0x47d700
0x00000000004a34a5 : mov edi, eax ; jmp rax
0x000000000045227d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x452271 ; mov rax, rsi ; ret
0x0000000000402ca8 : mov edi, eax ; mov dword ptr [rbp - 0x68], eax ; call 0x44f6c7
0x0000000000400487 : mov edi, eax ; mov eax, 3 ; syscall
0x0000000000400467 : mov edi, eax ; mov eax, ebp ; syscall
0x000000000043ecb1 : mov edi, eax ; mov eax, r9d ; syscall
0x000000000041f8ef : mov edi, eax ; mov rbp, r13 ; call 0x42c357
0x00000000004205ac : mov edi, eax ; mov rbp, rax ; call 0x41c847
0x0000000000420638 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044227e : mov edi, eax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000049ee3c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000441e18 : mov edi, ebp ; call 0x41e0e4
0x0000000000451847 : mov edi, ebp ; call 0x41e2a4
0x00000000004100dd : mov edi, ebp ; call 0x42c354
0x000000000047e4c6 : mov edi, ebp ; call qword ptr [rbx]
0x000000000040e29c : mov edi, ebp ; call r14
0x000000000044fc17 : mov edi, ebp ; call r15
0x000000000041ebb6 : mov edi, ebp ; call rax
0x0000000000440eb0 : mov edi, ebp ; call rbx
0x00000000004bde11 : mov edi, ebp ; jmp qword ptr [rax]
0x000000000044ef11 : mov edi, ebp ; mov eax, r15d ; syscall
0x000000000044f022 : mov edi, ebp ; mov eax, r8d ; syscall
0x0000000000450194 : mov edi, ebp ; mov rdx, rbp ; call r15
0x000000000041f517 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000044eff0 : mov edi, ebp ; xor eax, eax ; syscall
0x000000000041bf0f : mov edi, ebx ; call 0x418164
0x0000000000421309 : mov edi, ebx ; call 0x41dd44
0x000000000044cb57 : mov edi, ebx ; call r12
0x0000000000444dcd : mov edi, ebx ; call r14
0x0000000000462979 : mov edi, ebx ; call r8
0x00000000004122c7 : mov edi, ebx ; call rax
0x0000000000445991 : mov edi, ebx ; jmp 0x44595b
0x000000000049ec63 : mov edi, ebx ; jne 0x49ec55 ; pop rbx ; ret
0x00000000004003d3 : mov edi, ebx ; mov eax, 1 ; syscall
0x00000000004004a3 : mov edi, ebx ; mov eax, r10d ; syscall
0x0000000000414e44 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb4 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000451a57 : mov edi, ecx ; call 0x41dd44
0x000000000041acfa : mov edi, ecx ; mov eax, 3 ; syscall
0x000000000041acce : mov edi, ecx ; mov eax, r8d ; syscall
0x0000000000411baa : mov edi, edi ; call 0x400398
0x0000000000441dfd : mov edi, edi ; call 0x41e0e4
0x00000000004106b5 : mov edi, edi ; call rax
0x0000000000440ef4 : mov edi, edi ; call rbx
0x00000000004652d4 : mov edi, edi ; xor r8d, r8d ; call rbx
0x00000000004c63d1 : mov edi, edx ; call rsi
0x0000000000452301 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4522e9 ; mov rax, rsi ; ret
0x000000000043eb21 : mov edi, edx ; mov eax, esi ; syscall
0x000000000043eb31 : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000441e0a : mov edi, esi ; call 0x41e0e4
0x000000000045ca26 : mov edi, esi ; call 0x4268f9
0x000000000040fdaf : mov edi, esi ; call 0x49c8a4
0x000000000044541e : mov edi, esi ; call r15
0x0000000000440ed4 : mov edi, esi ; call rbx
0x0000000000411a97 : mov edi, esi ; mov eax, r9d ; syscall
0x000000000044fbd2 : mov edi, esp ; call r15
0x0000000000440e8b : mov edi, esp ; call rbx
0x0000000000403918 : mov edi, esp ; mov eax, 3 ; syscall
0x000000000043ffb1 : mov edi, esp ; mov eax, 9 ; syscall
0x0000000000403b3c : mov edi, esp ; mov eax, r10d ; syscall
0x0000000000411811 : mov edi, esp ; mov eax, r9d ; syscall
0x0000000000467115 : mov edi, esp ; mov r9, r15 ; call rbx
0x00000000004454c4 : mov edi, esp ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000004735a9 : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004735a8 : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000411ba9 : mov edi, r15d ; call 0x400399
0x000000000042677f : mov edx, 0x42fc80 ; cmove rax, rdx ; ret
0x0000000000434e47 : mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000049e192 : mov edx, 0x480022eb ; mov dword ptr [rsi + 0x28], eax ; ret
0x00000000004320d4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x00000000004320f2 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000442856 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x00000000004b8cde : mov edx, 0xcac982a4 ; call 0xffffffffaf0e2b5e
0x000000000049b043 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000446d17 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000040fcbe : mov edx, 0xffffffff ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000046bcda : mov edx, 1 ; jmp 0x46bcb2
0x0000000000444b40 : mov edx, 8 ; mov eax, edx ; ret
0x0000000000463f18 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000047b081 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004122c0 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000416571 : mov edx, dword ptr [rbx + 0x50] ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416565
0x000000000042ac7f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004293ad : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000047b095 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004106ae : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000049de39 : mov edx, dword ptr [rdi] ; mov rdi, rbp ; call rbx
0x0000000000472788 : mov edx, dword ptr [rdx + 8] ; add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x000000000043b422 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043b413 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b463 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b473 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000431ab1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000431e70 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431701 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043ba10 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000004356a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043ba61 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004354e1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000043b9f1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x000000000043b3d1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000041e4c9 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x000000000049c099 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000417834 : mov edx, eax ; jmp 0x417851
0x0000000000421330 : mov edx, eax ; jmp 0x4212fb
0x0000000000469ad6 : mov edx, eax ; jmp 0x469adf
0x000000000046b445 : mov edx, eax ; jmp 0x46b43a
0x000000000044230f : mov edx, eax ; mov eax, r12d ; syscall
0x0000000000450197 : mov edx, ebp ; call r15
0x00000000004100da : mov edx, ebp ; mov rdi, r13 ; call 0x42c357
0x000000000047e4c1 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e481 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fc11 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000044fc2c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000473d0c : mov edx, ebp ; xor edi, edi ; call 0x43ff86
0x00000000004126f4 : mov edx, ebx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000416579 : mov edx, ecx ; jmp 0x41655d
0x000000000049d643 : mov edx, ecx ; jmp 0x49d61b
0x000000000046ad31 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x00000000004428e1 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x000000000044efed : mov edx, ecx ; mov rdi, r13 ; xor eax, eax ; syscall
0x000000000041dcf7 : mov edx, ecx ; sub al, byte ptr [rax] ; push rax ; retf 0x41
0x0000000000458794 : mov edx, esp ; call 0x463878
0x000000000046add6 : mov edx, esp ; syscall
0x0000000000473d0b : mov edx, r13d ; xor edi, edi ; call 0x43ff87
0x000000000046aff9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000004413d6 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x00000000004a0a67 : mov esi, 0x22 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000445e8c : mov esi, 0x358b4807 ; xchg eax, ebx ; retf
0x0000000000446c55 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004ba7e6 : mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000446c47 : mov esi, 0x4a5b1a8a ; add byte ptr [rax - 0x7f], cl ; ret 0x5b00
0x00000000004bc741 : mov esi, 0x4b ; add byte ptr [rax], al ; retf
0x00000000004ba883 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000004b896a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000442a58 : mov esi, 0x80 ; syscall
0x000000000047673f : mov esi, 0x89fffffe ; ret 0x758b
0x00000000004bdeb9 : mov esi, 0x9da0fffd ; std ; ljmp [rax] ; ret 0xfffd
0x00000000004a35ed : mov esi, 0xbc35fff8 ; clc ; jmp rcx
0x00000000004a35dd : mov esi, 0xbc60fff8 ; clc ; call qword ptr [rax]
0x000000000048a45f : mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004a36bd : mov esi, 0xbf60fff8 ; clc ; jmp rax
0x00000000004a363d : mov esi, 0xbf96fff8 ; clc ; call qword ptr [rsi]
0x00000000004b7dfe : mov esi, 0xc2c1c0bf ; ret
0x000000000041495b : mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e484 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000440f16 : mov esi, 1 ; call rbx
0x0000000000486fc4 : mov esi, 1 ; jmp 0x486f9b
0x0000000000441103 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000440fcf : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000440f47 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x000000000044138d : mov esi, 1 ; mov rdi, rbp ; call rbx
0x0000000000462973 : mov esi, 1 ; mov rdi, rbx ; call r8
0x0000000000462288 : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000440101 : mov esi, 2 ; jmp rax
0x0000000000441381 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x00000000004410f4 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000440fc0 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000440f38 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000044011b : mov esi, 3 ; jmp rax
0x00000000004418fc : mov esi, 3 ; mov rdi, r12 ; call rbx
0x0000000000441953 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x00000000004419d3 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000441ad3 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000049c70a : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049cb69 : mov esi, dword ptr [rbx] ; call r14
0x000000000049e03e : mov esi, dword ptr [rdi + rbp*8 + 0x10] ; call rbx
0x000000000049cbb8 : mov esi, dword ptr [rdi] ; call r14
0x000000000040e05a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x000000000046a6a8 : mov esi, dword ptr [rdx] ; syscall
0x000000000049de35 : mov esi, dword ptr [rsi + 8] ; mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x00000000004329a9 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000400c33 : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000444af6 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450c61 : mov esi, dword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041ebb1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004479f4 : mov esi, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x0000000000449873 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041e1c1 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x000000000046a6a7 : mov esi, dword ptr fs:[rdx] ; syscall
0x00000000004005d7 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e4 ; ret
0x00000000004126f7 : mov esi, ebp ; mov eax, r13d ; syscall
0x0000000000411a94 : mov esi, ebp ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000043ecae : mov esi, ebp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041f7ae : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000046aa3c : mov esi, ebp ; xor edx, edx ; jmp 0x46aa0a
0x000000000047afa6 : mov esi, ebx ; mov edi, dword ptr [rip + 0x251a16] ; call rax
0x000000000044fc2f : mov esi, ebx ; mov rdi, r12 ; call r15
0x000000000041180e : mov esi, ebx ; mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000421297 : mov esi, ebx ; mov rdi, rax ; call rcx
0x0000000000414e89 : mov esi, ecx ; jbe 0x414e2d ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000403b39 : mov esi, ecx ; mov rdi, r12 ; mov eax, r10d ; syscall
0x000000000049ca4a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045d13b : mov esi, edi ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000040e299 : mov esi, edi ; mov rdi, r13 ; call r14
0x0000000000452ebb : mov esi, edi ; mov rdi, rbx ; call rax
0x000000000043f3bc : mov esi, edx ; mov eax, 4 ; syscall
0x000000000043f40b : mov esi, edx ; mov eax, 5 ; syscall
0x000000000046acdc : mov esi, edx ; mov eax, 6 ; syscall
0x000000000044f01f : mov esi, edx ; mov rdi, r13 ; mov eax, r8d ; syscall
0x000000000044234d : mov esi, esi ; mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000049caa1 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000467112 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000450191 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000047e4c4 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e484 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000044fbe3 : mov esi, esp ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000420635 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fc14 : mov esi, esp ; mov rdi, rbp ; call r15
0x000000000042035a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000041fb95 : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000047480b : mov esi, esp ; syscall
0x00000000004bff9c : mov esp, 0x2000001a ; cmc ; jmp qword ptr [rcx]
0x00000000004bef9c : mov esp, 0x3000000a ; std ; hlt ; call qword ptr [rdx]
0x0000000000426131 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000426161 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000426151 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004c529c : mov esp, 0x6000006d ; add dl, bh ; call rsi
0x0000000000447fca : mov esp, 0xbf004a5c ; retf
0x0000000000423b13 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000042cd5b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000426141 : mov esp, 0xf80148c0 ; ret
0x000000000047416e : mov esp, dword ptr [rip + 0x6894800] ; ret
0x000000000040071f : mov esp, eax ; call 0x43e478
0x0000000000478aea : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c7ae : mov esp, ecx ; ret
0x00000000004400b4 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000044aa8d : mov esp, esi ; jmp 0x44aa5f
0x0000000000444473 : mov gs, word ptr [r8] ; add byte ptr [rcx + rcx*4 + 0x25], cl ; ret 0x2881
0x0000000000444474 : mov gs, word ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x25], cl ; ret 0x2881
0x000000000042cc1e : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049a10b : mov qword ptr [r10], r8 ; add rsp, 8 ; ret
0x0000000000435950 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000463bc8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463c08 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464b68 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463bcc : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464c06 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004157d9 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000442f05 : mov qword ptr [rax + 8], rdx ; ret
0x00000000004640f4 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047b0a4 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000464034 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047b098 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000464e80 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000461aa5 : mov qword ptr [rbp - 0x10d0], rdx ; call 0x41dd49
0x0000000000442449 : mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000045dce1 : mov qword ptr [rbp - 0x470], rax ; call 0x45a7a9
0x0000000000442445 : mov qword ptr [rbp - 0x48], r12 ; mov qword ptr [rbp - 0x40], r12 ; syscall
0x000000000045670b : mov qword ptr [rbp - 0x4d8], rdx ; call 0x442929
0x00000000004550d7 : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00000000004856e2 : mov qword ptr [rbp - 0x5a0], rdx ; jmp 0x4856bd
0x00000000004726a0 : mov qword ptr [rbp - 0xa8], r10 ; call rax
0x0000000000472889 : mov qword ptr [rbp - 0xa8], rsi ; call rax
0x0000000000471e4f : mov qword ptr [rbp - 0xc8], r10 ; call rax
0x000000000044d5d0 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478724 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411d06 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000047875d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000047475e : mov qword ptr [rbx + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412508 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000004786c2 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488064 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000416574 : mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416562
0x0000000000414d22 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047caa2 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000414d9d : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000411c96 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x0000000000415054 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004151eb : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047e145 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000488788 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000049c469 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000047919e : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000043bc2c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x000000000043b59c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b57c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b5df : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b5ff : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b5c0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000414cb2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000470e34 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000470e06 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042cb90 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000414ce2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004188cf : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c4c0 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000043bbec : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x000000000043b53c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043bc0c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x000000000043b55c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435477 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435407 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435397 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435327 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043baea : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000004352b7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b48a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000043bb0a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000435247 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b49a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000043bb2a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000004351d7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b4aa : mov qword ptr [rdi + 7], rdx ; ret
0x000000000047a4e3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000479123 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000414cb6 : mov qword ptr [rdi + 8], rax ; ret
0x00000000004268dd : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000049c478 : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x0000000000431594 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004315d2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000047908e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000043191b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c87 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431afb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c07 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431ceb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b87 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431ebc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434af8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004320bc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434a68 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004322bc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349d8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000479019 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000431598 : mov qword ptr [rdi - 8], rcx ; ret
0x00000000004315d6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000043174b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431847 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431793 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d07 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045c615 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042c966 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000478fe8 : mov qword ptr [rdi], r9 ; ret
0x000000000043ba76 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x000000000043b466 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b476 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000043b487 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b497 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b4a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004268da : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b457 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000400597 : mov qword ptr [rdi], rcx ; ret
0x000000000043ba63 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000004354e3 : mov qword ptr [rdi], rdx ; ret
0x000000000043594d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043298d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000047a6b2 : mov qword ptr [rdi], rsi ; ret
0x000000000040f9d2 : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000043b00a : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x00000000004397fa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043b02a : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000043981a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043b04a : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000043983a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000043aeda : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000043972a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000416675 : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000043ae83 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000004396d3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047b084 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004165e1 : mov qword ptr [rdx], rax ; ret
0x0000000000463f15 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000401589 : mov qword ptr [rip + 0x2c8b00], rax ; xor eax, eax ; ret
0x0000000000401436 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000049e196 : mov qword ptr [rsi + 0x28], rax ; ret
0x000000000046e138 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x0000000000474171 : mov qword ptr [rsi], rax ; ret
0x0000000000401433 : mov qword ptr [rsi], rsi ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000041b6ba : mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000049cbb2 : mov qword ptr [rsp + 0x10], r9 ; mov rsi, qword ptr [r15] ; call r14
0x000000000047be5f : mov qword ptr [rsp + 0x78], rbp ; call r12
0x000000000047c062 : mov qword ptr [rsp + 0x78], rbx ; call r12
0x000000000047bfb1 : mov qword ptr [rsp + 0x88], rbx ; call r14
0x000000000041b771 : mov qword ptr [rsp + 8], r8 ; mov qword ptr [rsp], rcx ; call rdx
0x000000000040922e : mov qword ptr [rsp + 8], rax ; call 0x405c97
0x00000000004405c5 : mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000409998 : mov qword ptr [rsp], rax ; call 0x405c96
0x000000000043f4d6 : mov qword ptr [rsp], rax ; mov eax, 0 ; syscall
0x000000000046aef6 : mov qword ptr [rsp], rax ; mov eax, 0x14 ; syscall
0x000000000043f536 : mov qword ptr [rsp], rax ; mov eax, 1 ; syscall
0x000000000043f476 : mov qword ptr [rsp], rax ; mov eax, 2 ; syscall
0x000000000043f726 : mov qword ptr [rsp], rax ; mov eax, 3 ; syscall
0x000000000041b776 : mov qword ptr [rsp], rcx ; call rdx
0x00000000004091a2 : mov qword ptr [rsp], rdx ; call 0x405c96
0x000000000044f6ad : mov qword ptr fs:[rdx], rax ; ret
0x000000000043298c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000401435 : mov qword ptr ss:[rsi + 0x10], rsi ; syscall
0x00000000004428e0 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000434e46 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x00000000004320f1 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x00000000004b8cdd : mov r10d, 0xcac982a4 ; call 0xffffffffaf0e2b5f
0x0000000000434ec6 : mov r11d, 0x46f00ff2 ; retf
0x0000000000431ef1 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000040071e : mov r12, rax ; call 0x43e479
0x000000000044aa8c : mov r12, rsi ; jmp 0x44aa60
0x00000000004400b3 : mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047d6e6 : mov r13, r15 ; mov r15, rax ; jmp 0x47d704
0x0000000000440a58 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000487005 : mov r13d, esi ; jmp 0x486fd8
0x000000000049c709 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c70d : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000046d888 : mov r15, rax ; jmp 0x46d854
0x000000000047d6e9 : mov r15, rax ; jmp 0x47d701
0x0000000000442195 : mov r15d, 0x8b48fffd ; jge 0x4421a5 ; call rbx
0x000000000047f4c7 : mov r8b, 0xbe ; retf
0x000000000047ee2f : mov r8b, 0xd3 ; retf
0x000000000047efe3 : mov r8b, 0xf4 ; retf
0x000000000047365c : mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000444afa : mov r9, r14 ; call rbx
0x0000000000467117 : mov r9, r15 ; call rbx
0x0000000000411ca0 : mov rax, -1 ; pop rbx ; ret
0x0000000000412d12 : mov rax, -1 ; ret
0x000000000044f860 : mov rax, 0xf ; syscall
0x0000000000466840 : mov rax, 1 ; ret
0x0000000000466850 : mov rax, 2 ; ret
0x0000000000466860 : mov rax, 3 ; ret
0x0000000000466870 : mov rax, 4 ; ret
0x0000000000466880 : mov rax, 5 ; ret
0x0000000000466890 : mov rax, 6 ; ret
0x00000000004668a0 : mov rax, 7 ; ret
0x0000000000475f94 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000414ddb : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410d52 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb7 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004152d7 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000487ce2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004155fb : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000464fb3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047ebdc : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478540 : mov rax, qword ptr [rax + 8] ; ret
0x000000000044f6ce : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000004554b1 : mov rax, qword ptr [rax*8 + 0x4b2ea0] ; jmp rax
0x0000000000455502 : mov rax, qword ptr [rax*8 + 0x4b2fa0] ; jmp rax
0x00000000004575f2 : mov rax, qword ptr [rax*8 + 0x4b30a0] ; jmp rax
0x0000000000456125 : mov rax, qword ptr [rax*8 + 0x4b33a0] ; jmp rax
0x0000000000460300 : mov rax, qword ptr [rax*8 + 0x4b3820] ; jmp rax
0x0000000000461624 : mov rax, qword ptr [rax*8 + 0x4b3920] ; jmp rax
0x0000000000461b08 : mov rax, qword ptr [rax*8 + 0x4b3a20] ; jmp rax
0x0000000000460396 : mov rax, qword ptr [rax*8 + 0x4b3d20] ; jmp rax
0x000000000049c405 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x0000000000440a5b : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004454c6 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000471c40 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047b0a0 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004396d0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004a0837 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a0850 ; call rax
0x0000000000464fb0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416920 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c410 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000049c490 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c4d0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c530 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c520 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c4e0 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044dceb : mov rax, qword ptr [rdi*8 + 0x6cba40] ; ret
0x00000000004784d0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x4784e8 ; ret
0x00000000004165de : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004165d0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x4165d1 ; ret
0x0000000000474109 : mov rax, qword ptr [rip + 0x258c60] ; ret
0x000000000044cba0 : mov rax, qword ptr [rip + 0x27fb51] ; ret
0x0000000000445830 : mov rax, qword ptr [rip + 0x287a91] ; ret
0x0000000000416900 : mov rax, qword ptr [rip + 0x2b37b9] ; ret
0x000000000049cd2b : mov rax, qword ptr [rsi + 0x10] ; add rsp, 8 ; ret
0x000000000049cd60 : mov rax, qword ptr [rsi + 8] ; add rsp, 8 ; ret
0x000000000049c505 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400c8f : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004474c9 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447e2c : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000040e0d6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, [rbx + r14] ; call rax
0x000000000047895b : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x0000000000416dd3 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420a49 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000452823 : mov rax, r13 ; jmp 0x4527f6
0x000000000041cce4 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041cb74 : mov rax, r8 ; pop rbx ; ret
0x0000000000432aa4 : mov rax, r8 ; ret
0x000000000046b204 : mov rax, r9 ; jne 0x46b25e ; ret
0x000000000046b285 : mov rax, r9 ; ret
0x0000000000412c79 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463858 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046382b : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004748e1 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c639 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004133ec : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474d57 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040fa68 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fb4d : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fecd : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000411d0a : mov rax, rbx ; pop rbx ; ret
0x000000000041c0ed : mov rax, rcx ; ret
0x0000000000416930 : mov rax, rdi ; ret
0x000000000048800d : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000047b212 : mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000041ddf7 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004175b4 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000047278e : mov rax, rdx ; call rax
0x000000000041e781 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041799b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043e5c7 : mov rax, rdx ; pop rbx ; ret
0x0000000000426e58 : mov rax, rdx ; ret
0x000000000046aa82 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487e37 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ebc3 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000452283 : mov rax, rsi ; ret
0x000000000043ddfa : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x000000000049c7a9 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000041f8f1 : mov rbp, r13 ; call 0x42c355
0x0000000000478aec : mov rbp, r9 ; nop ; jmp rdx
0x00000000004205ae : mov rbp, rax ; call 0x41c845
0x00000000004400b6 : mov rbp, rax ; call rax
0x0000000000473d15 : mov rbp, rax ; jmp 0x473ce8
0x0000000000440e65 : mov rbx, rax ; call rax
0x0000000000448300 : mov rbx, rax ; jmp 0x4482d4
0x000000000044fbce : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000044f0c5 : mov rbx, rdi ; test rax, rax ; je 0x44f0d7 ; call rax
0x000000000046ab52 : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000043b440 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000478636 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x00000000004785c4 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000046d885 : mov rcx, r15 ; mov r15, rax ; jmp 0x46d857
0x0000000000432ac0 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000432ac3 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000473fe2 : mov rcx, rsi ; cmp rcx, rdx ; jne 0x473fc9 ; ret
0x000000000044060f : mov rdi, qword ptr [r12] ; call rbx
0x000000000040e05c : mov rdi, qword ptr [r13] ; call r14
0x0000000000440219 : mov rdi, qword ptr [r13] ; call rbx
0x0000000000440186 : mov rdi, qword ptr [r14] ; call rbx
0x00000000004401c7 : mov rdi, qword ptr [r15] ; call rbx
0x00000000004405c2 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045d13d : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000047642d : mov rdi, qword ptr [rbp - 0x88] ; call rax
0x00000000004669c4 : mov rdi, qword ptr [rbp] ; call r12
0x000000000044034e : mov rdi, qword ptr [rbp] ; call rbx
0x000000000044ed67 : mov rdi, qword ptr [rdi] ; syscall
0x0000000000464f77 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464f45
0x00000000004471d0 : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x000000000044ba19 : mov rdi, qword ptr [rsp + 0x18] ; call r14
0x0000000000447944 : mov rdi, qword ptr [rsp + 0x28] ; call r12
0x000000000044866f : mov rdi, qword ptr [rsp + 0x28] ; call r14
0x0000000000446fd1 : mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004479f8 : mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000044b259 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000449877 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000448bf7 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000044234f : mov rdi, qword ptr [rsp + 8] ; xor eax, eax ; syscall
0x000000000049e039 : mov rdi, qword ptr [rsp] ; mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000044fbd1 : mov rdi, r12 ; call r15
0x0000000000440e8a : mov rdi, r12 ; call rbx
0x0000000000403917 : mov rdi, r12 ; mov eax, 3 ; syscall
0x000000000043ffb0 : mov rdi, r12 ; mov eax, 9 ; syscall
0x0000000000403b3b : mov rdi, r12 ; mov eax, r10d ; syscall
0x0000000000411810 : mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000467114 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000004454c3 : mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000441e17 : mov rdi, r13 ; call 0x41e0e5
0x0000000000451846 : mov rdi, r13 ; call 0x41e2a5
0x00000000004100dc : mov rdi, r13 ; call 0x42c355
0x000000000040e29b : mov rdi, r13 ; call r14
0x0000000000440eaf : mov rdi, r13 ; call rbx
0x000000000044ef10 : mov rdi, r13 ; mov eax, r15d ; syscall
0x000000000044f021 : mov rdi, r13 ; mov eax, r8d ; syscall
0x0000000000450193 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000044efef : mov rdi, r13 ; xor eax, eax ; syscall
0x0000000000441e09 : mov rdi, r14 ; call 0x41e0e5
0x000000000044541d : mov rdi, r14 ; call r15
0x0000000000440ed3 : mov rdi, r14 ; call rbx
0x0000000000411a96 : mov rdi, r14 ; mov eax, r9d ; syscall
0x0000000000441dfc : mov rdi, r15 ; call 0x41e0e5
0x00000000004106b4 : mov rdi, r15 ; call rax
0x0000000000440ef3 : mov rdi, r15 ; call rbx
0x00000000004652d3 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x0000000000400486 : mov rdi, r8 ; mov eax, 3 ; syscall
0x0000000000400466 : mov rdi, r8 ; mov eax, ebp ; syscall
0x000000000043ecb0 : mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041acf9 : mov rdi, r9 ; mov eax, 3 ; syscall
0x000000000041accd : mov rdi, r9 ; mov eax, r8d ; syscall
0x0000000000473937 : mov rdi, rax ; call 0x400355
0x0000000000408671 : mov rdi, rax ; call 0x41e0e9
0x0000000000421299 : mov rdi, rax ; call rcx
0x000000000041f8ee : mov rdi, rax ; mov rbp, r13 ; call 0x42c358
0x00000000004205ab : mov rdi, rax ; mov rbp, rax ; call 0x41c848
0x0000000000420637 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044227d : mov rdi, rax ; sub rdx, rsi ; mov eax, r12d ; syscall
0x000000000049ee3b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000044fc16 : mov rdi, rbp ; call r15
0x000000000041ebb5 : mov rdi, rbp ; call rax
0x0000000000441392 : mov rdi, rbp ; call rbx
0x000000000041f516 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000041bf0e : mov rdi, rbx ; call 0x418165
0x0000000000421308 : mov rdi, rbx ; call 0x41dd45
0x000000000044cb56 : mov rdi, rbx ; call r12
0x0000000000444dcc : mov rdi, rbx ; call r14
0x0000000000462978 : mov rdi, rbx ; call r8
0x00000000004122c6 : mov rdi, rbx ; call rax
0x0000000000445990 : mov rdi, rbx ; jmp 0x44595c
0x000000000049ec62 : mov rdi, rbx ; jne 0x49ec56 ; pop rbx ; ret
0x00000000004003d2 : mov rdi, rbx ; mov eax, 1 ; syscall
0x00000000004004a2 : mov rdi, rbx ; mov eax, r10d ; syscall
0x0000000000414e43 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb3 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000451a56 : mov rdi, rcx ; call 0x41dd45
0x000000000043eb20 : mov rdi, rdx ; mov eax, esi ; syscall
0x000000000043eb30 : mov rdi, rdx ; mov eax, r8d ; syscall
0x000000000040fdae : mov rdi, rsi ; call 0x49c8a5
0x000000000049c098 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000049de38 : mov rdx, qword ptr [r15] ; mov rdi, rbp ; call rbx
0x000000000047b080 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000047b094 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000431700 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004354e0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000041e4c8 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000458793 : mov rdx, r12 ; call 0x463879
0x000000000047e4c0 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e480 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044efec : mov rdx, r9 ; mov rdi, r13 ; xor eax, eax ; syscall
0x0000000000417833 : mov rdx, rax ; jmp 0x417852
0x000000000042132f : mov rdx, rax ; jmp 0x4212fc
0x0000000000469ad5 : mov rdx, rax ; jmp 0x469ae0
0x000000000046b444 : mov rdx, rax ; jmp 0x46b43b
0x000000000044230e : mov rdx, rax ; mov eax, r12d ; syscall
0x0000000000450196 : mov rdx, rbp ; call r15
0x00000000004100d9 : mov rdx, rbp ; mov rdi, r13 ; call 0x42c358
0x00000000004126f3 : mov rdx, rbx ; mov rsi, rbp ; mov eax, r13d ; syscall
0x0000000000416578 : mov rdx, rcx ; jmp 0x41655e
0x000000000049d642 : mov rdx, rcx ; jmp 0x49d61c
0x000000000046ad30 : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x000000000046add5 : mov rdx, rsp ; syscall
0x000000000049e03d : mov rsi, qword ptr [r15 + rbp*8 + 0x10] ; call rbx
0x000000000049cbb7 : mov rsi, qword ptr [r15] ; call r14
0x000000000040e059 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049cb68 : mov rsi, qword ptr [rbx] ; call r14
0x0000000000444af5 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450c60 : mov rsi, qword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041ebb0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000041e1c0 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000044f01e : mov rsi, r10 ; mov rdi, r13 ; mov eax, r8d ; syscall
0x000000000047e4c3 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e483 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fbe2 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x000000000044fc13 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000420359 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000041fb94 : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000411a93 : mov rsi, r13 ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000041f7ad : mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000049caa0 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000467111 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000040e298 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000452eba : mov rsi, r15 ; mov rdi, rbx ; call rax
0x0000000000403b38 : mov rsi, r9 ; mov rdi, r12 ; mov eax, r10d ; syscall
0x00000000004005d6 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e5 ; ret
0x00000000004126f6 : mov rsi, rbp ; mov eax, r13d ; syscall
0x000000000043ecad : mov rsi, rbp ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000046aa3b : mov rsi, rbp ; xor edx, edx ; jmp 0x46aa0b
0x000000000047afa5 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x251a16] ; call rax
0x000000000044fc2e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000041180d : mov rsi, rbx ; mov rdi, r12 ; mov eax, r9d ; syscall
0x0000000000421296 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000414e88 : mov rsi, rcx ; jbe 0x414e2e ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049ca49 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000043f3bb : mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000043f40a : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000046acdb : mov rsi, rdx ; mov eax, 6 ; syscall
0x000000000047480a : mov rsi, rsp ; syscall
0x0000000000478ae9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c7ad : mov rsp, rcx ; ret
0x0000000000435975 : mov word ptr [r9 - 2], cx ; ret
0x0000000000444308 : mov word ptr [rax + rbp], ds ; pop rbx ; ret
0x0000000000442d29 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004268cd : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000004c7115 : mov word ptr [rax], es ; add byte ptr [rax - 0x67], bl ; std ; call rcx
0x0000000000467470 : mov word ptr [rax], es ; jle 0x467444 ; add byte ptr [r13 - 0x77], cl ; retf 0x694d
0x000000000043bb6c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x000000000043b4dc : mov word ptr [rdi + 0x10], cx ; ret
0x000000000043bc74 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x000000000043b5c4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000435717 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043ba38 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x000000000043b418 : mov word ptr [rdi + 4], dx ; ret
0x000000000043ba8a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x000000000043b45a : mov word ptr [rdi + 8], dx ; ret
0x00000000004329c2 : mov word ptr [rdi + rdx - 2], cx ; ret
0x0000000000431c9c : mov word ptr [rdi - 2], cx ; ret
0x0000000000431ab4 : mov word ptr [rdi - 2], dx ; ret
0x0000000000431c98 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000043b3e3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043dd75 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043571b : mov word ptr [rdi], cx ; ret
0x000000000043b9f3 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000435783 : mov word ptr [rdi], dx ; ret
0x0000000000435972 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000004329bf : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000043af58 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x0000000000439798 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000043af03 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000439753 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000041731e : mov word ptr [rdx], es ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c1be2 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000043dd78 : mov word ptr [rsi - 2], cx ; ret
0x00000000004c7b90 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x00000000004c7c40 : mov word ptr [rsi], es ; add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000044f7b4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00000000004329be : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000004bdecc : movabs al, byte ptr [0x18fffdc228fffdc2] ; ret
0x000000000048ac5d : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000004c9401 : movabs al, byte ptr [0x41380e0a01940301] ; ret
0x00000000004c0ba9 : movabs al, byte ptr [0x41380e0a01cf0301] ; ret
0x00000000004bdebc : movabs al, byte ptr [0x68fffdc228fffd9d] ; ret 0xfffd
0x000000000045ee29 : movabs al, byte ptr [0x840fc08548000000] ; retf 3
0x000000000048f055 : movabs al, byte ptr [0xc74900758b48fffe] ; ret 0xc001
0x00000000004bc6d8 : movabs al, byte ptr [0xc800000000004bc2] ; ret 0x4b
0x0000000000464f73 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x000000000040077b : movabs byte ptr [0x2d05c7347401e580], al ; retf 0x2c
0x00000000004ba923 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x00000000004ba581 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x00000000004b89c7 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x0000000000443100 : movabs eax, dword ptr [0x950f000000010028] ; ret 0xc985
0x00000000004b927a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x0000000000430222 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043021e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004302cc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043b4b0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043bd2d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000043b67d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004353ef : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043537f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043530f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043529f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bccd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000043b61d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043522f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bced : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000043b63d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004351bf : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bd0d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000043b65d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004357df : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043576f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356ff : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043568f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043561f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355af : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043553f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354cf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043545f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042682c : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x426849 ; ret
0x0000000000426845 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043494b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000004349bb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bb44 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x000000000043b4c4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b507 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b4f7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b578 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b538 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b558 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b4d8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b679 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b619 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b639 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b659 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043516a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004351c4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b4b1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043bd2e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x000000000043b67e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004353f0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435380 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435310 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004352a0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bcce : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x000000000043b61e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000435230 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bcee : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x000000000043b63e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000004351c0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bd0e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x000000000043b65e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000004357e0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435770 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435700 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435690 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435620 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355b0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435540 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354d0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435460 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042682d : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x426848 ; ret
0x0000000000426846 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043494c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x00000000004349bc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004350f7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435077 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434fe7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f67 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ee7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e67 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434de7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d67 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ce7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c67 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434be7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b67 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ad7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434a47 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004349b7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043bb45 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x000000000043b4c5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b518 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b508 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b4f8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b579 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b539 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b559 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b4d9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b67a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b61a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b63a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b65a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043516b : movq qword ptr [rdi], mm0 ; ret
0x00000000004351c5 : movq qword ptr [rdi], mm1 ; ret
0x00000000004a358d : movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp rax
0x00000000004b96a2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004ba8fd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4ba956 ; jmp 0x4ba897
0x0000000000415b4a : movsb byte ptr [rdi], byte ptr [rsi] ; mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000004bef84 : movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; std ; hlt ; call qword ptr [rax]
0x000000000041ada8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b8585 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x000000000047470c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x0000000000417607 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004a3591 : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; inc dword ptr [rax] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp qword ptr [rax]
0x00000000004bab9d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004baf35 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004ba7f1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000479042 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000400707 : movsd dword ptr [rdi], dword ptr [rsi] ; test eax, 0x415d002c ; pop rsp ; ret
0x00000000004b9281 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000491a33 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004919ed : movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000477aa1 : movsx eax, dl ; neg eax ; ret
0x000000000043fff8 : movsxd r10, r10d ; syscall
0x00000000004216b1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000432d86 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042fd02 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000049bb89 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000049b601 : movsxd rax, dword ptr [r8 + r11*4] ; add rax, r8 ; jmp rax
0x000000000049a0d9 : movsxd rax, dword ptr [r8 + rcx*4] ; add r8, rax ; jmp r8
0x000000000049b602 : movsxd rax, dword ptr [rax + rbx*4] ; add rax, r8 ; jmp rax
0x000000000049a0da : movsxd rax, dword ptr [rax + rcx*4] ; add r8, rax ; jmp r8
0x0000000000442901 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004b9620 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x000000000049b2a9 : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000049bb8a : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x00000000004ba44a : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x000000000042e64d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043b279 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000049a301 : movsxd rcx, dword ptr [r14 + rsi*4] ; add rcx, r14 ; jmp rcx
0x000000000040eb65 : movsxd rcx, dword ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000004663dc : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000432d87 : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000042fd03 : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000042e64e : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043b27a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004216b2 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000049a302 : movsxd rcx, dword ptr [rsi + rsi*4] ; add rcx, r14 ; jmp rcx
0x00000000004424f5 : movsxd rdi, dword ptr [rbp - 0x58] ; mov eax, 3 ; syscall
0x00000000004425e2 : movsxd rdi, dword ptr [rbp - 0x68] ; mov eax, 3 ; syscall
0x000000000041249a : movsxd rdi, dword ptr [rbx + 0x70] ; syscall
0x0000000000411cb1 : movsxd rdi, dword ptr [rdi + 0x70] ; mov eax, 3 ; syscall
0x0000000000412cf7 : movsxd rdi, dword ptr [rdi + 0x70] ; xor eax, eax ; syscall
0x0000000000442179 : movsxd rdi, dword ptr [rdi - 0x74b60003] ; jge 0x442189 ; call rbx
0x000000000043fae9 : movsxd rdi, dword ptr [rsp + 0x10] ; mov eax, 0x101 ; syscall
0x000000000043fb6b : movsxd rdi, dword ptr [rsp + 0x10] ; mov eax, 3 ; syscall
0x000000000041345b : movsxd rdi, ebp ; mov eax, 3 ; syscall
0x000000000043f6c2 : movsxd rdi, ebx ; mov eax, 0x48 ; syscall
0x000000000044cc5a : movsxd rdi, ebx ; mov eax, 3 ; syscall
0x000000000040dc34 : movsxd rdi, ecx ; syscall
0x000000000043f59a : movsxd rdi, edi ; mov eax, 0x48 ; syscall
0x000000000044fad7 : movsxd rdi, edi ; mov eax, 0xe ; syscall
0x000000000044f5b8 : movsxd rdi, edi ; mov eax, 3 ; syscall
0x000000000044f957 : movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000044ee61 : movsxd rdi, esi ; mov eax, 3 ; syscall
0x0000000000403965 : movsxd rdi, esp ; mov eax, 3 ; syscall
0x0000000000403964 : movsxd rdi, r12d ; mov eax, 3 ; syscall
0x000000000044ee60 : movsxd rdi, r14d ; mov eax, 3 ; syscall
0x000000000044f5b7 : movsxd rdi, r15d ; mov eax, 3 ; syscall
0x000000000042fdcf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042fdd0 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004133a6 : movsxd rdx, ecx ; mov eax, 2 ; syscall
0x000000000043fff9 : movsxd rdx, edx ; syscall
0x00000000004c0641 : movsxd rsi, ebp ; jmp qword ptr [rax]
0x000000000043d25c : movsxd rsi, esi ; ret 0x7520
0x00000000004be9a9 : movsxd rsi, esp ; call qword ptr [rax]
0x00000000004919ee : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000491a34 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000044f83c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047b14c : movzx eax, al ; neg eax ; ret
0x000000000047aef6 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046adb5 : movzx eax, al ; ret
0x000000000041402c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415cc6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000411eed : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004151ef : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000041316a : movzx eax, byte ptr [rax] ; ret
0x000000000049d089 : movzx eax, byte ptr [rcx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000422a48 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042e660 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004262c0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422a63 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000414e8d : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000411f00 : movzx eax, byte ptr [rdx] ; ret
0x000000000041402d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e4d7 : movzx eax, cl ; pop rbx ; ret
0x000000000043e4ff : movzx eax, dl ; pop rbx ; ret
0x000000000043d8ba : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d8b9 ; ret
0x000000000043d96a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d969 ; ret
0x000000000042f504 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000422a60 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e663 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040dbdf : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40dbc7 ; ret
0x000000000042e531 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000422b8f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042e3c3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000043d284 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000043d2e4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000043d2d4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d2c4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d2b4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d2a4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043d294 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000435110 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f2b7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043d26b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004357f0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004262c3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004262e9 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000435090 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000435780 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004669c1 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x000000000046adb4 : movzx rax, al ; ret
0x000000000049d524 : mul byte ptr [rdx] ; add cl, ch ; ret
0x0000000000465aa7 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004631c7 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000416a7f : neg eax ; ret
0x000000000043f5d1 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000004a3b00 : nop ; adc al, 0xf9 ; call qword ptr [rax]
0x00000000004c5640 : nop ; adc al, 0xfa ; jmp rdx
0x00000000004a3b10 : nop ; adc bh, cl ; call qword ptr [rax]
0x00000000004a3b18 : nop ; adc ecx, edi ; call qword ptr [rax]
0x00000000004a3b08 : nop ; adc edi, ecx ; call qword ptr [rax]
0x000000000043f74c : nop ; add byte ptr [r8], r8b ; ret
0x0000000000410578 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041354c : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043483b : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047bd0e : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000462ebb : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042e96c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004812f6 : nop ; add dword ptr [rax], eax ; add al, ch ; retf 0xfff9
0x0000000000405029 : nop ; add dword ptr [rax], eax ; add al, ch ; scasb al, byte ptr [rdi] ; retf
0x000000000041b27a : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000468286 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 0x94 ; ret
0x00000000004bf1b5 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf1cd ; ret
0x00000000004bf1c3 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000043e71f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000444cbf : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042612f : nop ; bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x00000000004888af : nop ; call rax
0x00000000004c0790 : nop ; cmc ; call qword ptr [rsi]
0x00000000004a3450 : nop ; insb byte ptr [rdi], dx ; clc ; push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; clc ; call rax
0x00000000004118c2 : nop ; jmp 0x4117cc
0x0000000000478aef : nop ; jmp rdx
0x00000000004318cf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431aaf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000046ad7f : nop ; mov eax, 0x15 ; syscall
0x000000000044007f : nop ; mov eax, 0x1c ; syscall
0x000000000046ac8f : nop ; mov eax, 0x66 ; syscall
0x000000000044005f : nop ; mov eax, 0xa ; syscall
0x0000000000442974 : nop ; mov eax, 0xca ; syscall
0x0000000000416f2f : nop ; mov eax, 0xffffffff ; ret
0x000000000041020f : nop ; mov eax, dword ptr [rdx] ; ret
0x000000000046afff : nop ; mov eax, edi ; ret
0x00000000004a34a4 : nop ; mov edi, eax ; jmp rax
0x0000000000431e6f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043ba0f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000004428df : nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000411c9f : nop ; mov rax, -1 ; pop rbx ; ret
0x0000000000415c4f : nop ; mov rax, -1 ; ret
0x0000000000417244 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004482ff : nop ; mov rbx, rax ; jmp 0x4482d5
0x00000000004482fe : nop ; mov rbx, rax ; jmp 0x4482d6
0x000000000044598f : nop ; mov rdi, rbx ; jmp 0x44595d
0x000000000041ebaf : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000043b4af : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044ee5f : nop ; movsxd rdi, r14d ; mov eax, 3 ; syscall
0x00000000004627df : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x4627ae
0x00000000004627de : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x4627af
0x000000000049359d : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c5500 : nop ; psubd mm7, mm7 ; retf
0x000000000043dc4f : nop ; ret
0x00000000004bdec8 : nop ; ret 0xfffd
0x00000000004099fc : nop ; ret 0xffff
0x00000000004a38e8 : nop ; sbb ecx, edi ; jmp qword ptr [rax]
0x00000000004bde1d : nop ; std ; jmp qword ptr [rax + 0x20fffd91]
0x00000000004bde58 : nop ; std ; jmp rax
0x000000000041661f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000048e7ed : nop ; xlatb ; add r8b, bpl ; retf 0xf72f
0x00000000004262ef : nop ; xor eax, eax ; ret
0x00000000004261af : nop ; xor rax, rax ; ret
0x000000000047850b : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000047e36b : nop dword ptr [rax + rax] ; call rbx
0x000000000043b3eb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004008e8 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000047ae73 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000412d1b : nop dword ptr [rax + rax] ; ret
0x00000000004134db : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000046680c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000042037d : nop dword ptr [rax] ; call 0x41f029
0x0000000000400b55 : nop dword ptr [rax] ; call qword ptr [rbx + 0x10]
0x000000000047e1c9 : nop dword ptr [rax] ; call rax
0x000000000049a08d : nop dword ptr [rax] ; mov eax, 0x26 ; syscall
0x000000000043fe5d : nop dword ptr [rax] ; mov eax, 0x61 ; syscall
0x000000000046734d : nop dword ptr [rax] ; mov eax, 0xc9 ; syscall
0x0000000000416a5c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000410c9d : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000042c8e4 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000041e4c4 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000400935 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000041e884 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000043e6bc : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000406345 : nop dword ptr [rax] ; ret
0x000000000049e6cd : nop dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004114e4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000047e36a : nop word ptr [rax + rax] ; call rbx
0x0000000000412d1a : nop word ptr [rax + rax] ; ret
0x00000000004134da : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000444b81 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000042a017 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b68f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046aec2 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000046ae71 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041c0e9 : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c9fa : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000496e80 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000496dd9 : or al, 0 ; add byte ptr [rcx - 0x7d], cl ; jmp 0x496df9
0x000000000046ae3f : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000452b10 : or al, 0x13 ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000422a46 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041cb72 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000469ad3 : or al, 0x20 ; mov rdx, rax ; jmp 0x469ae2
0x000000000041b778 : or al, 0x24 ; call rdx
0x0000000000443fd1 : or al, 0x24 ; je 0x443fe5 ; mov edi, 0x6cb140 ; call rax
0x00000000004627e2 : or al, 0x40 ; jmp 0x4627ab
0x00000000004627e1 : or al, 0x40 ; jmp 0x4627ac
0x0000000000400c3a : or al, 0x41 ; call rsp
0x0000000000417ed0 : or al, 0x47 ; sub eax, dword ptr [rax] ; test rax, rax ; je 0x417ee4 ; call rax
0x00000000004458ef : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004787e0 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000400c8e : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000047465b : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047b233 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000004c41ec : or al, 0x5d ; add byte ptr [rax], al ; jo 0x4c41d4 ; clc ; call qword ptr [rdx]
0x000000000047b70f : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x000000000046252a : or al, 0x7e ; ret
0x0000000000462d1a : or al, 0x7e ; retf
0x0000000000462913 : or al, 0x7e ; retf 0xffb8
0x000000000045d4a9 : or al, 0x83 ; ret
0x0000000000458dac : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004216b3 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x0000000000429104 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432d88 : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042fd04 : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x000000000048a21b : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000046aff8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042e64f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b27b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004c7eec : or al, 0x9a ; add byte ptr [rax], al ; add esp, edi ; jmp qword ptr [rax]
0x000000000042fd08 : or al, 0xb ; jmp r9
0x000000000043b27f : or al, 0xb ; jmp rcx
0x000000000049a303 : or al, 0xb6 ; add rcx, r14 ; jmp rcx
0x0000000000435313 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000426833 : or al, 0xf3 ; ret
0x0000000000462c4b : or al, 0xf6 ; ret 0xf04
0x000000000045d42c : or al, 0xf6 ; ret 0xf08
0x00000000004c7c54 : or al, 7 ; or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x000000000044fc41 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000422cdd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a221 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422d01 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049c17e : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000440061 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004bef85 : or al, byte ptr [rax] ; add byte ptr [rax], bh ; std ; hlt ; call qword ptr [rax]
0x00000000004bef9d : or al, byte ptr [rax] ; add byte ptr [rax], dh ; std ; hlt ; call qword ptr [rdx]
0x00000000004248e8 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000408406 : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x0000000000408cec : or al, byte ptr [rbx - 0x7bf0fd07] ; retf
0x000000000047d7d0 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000489d47 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00000000004c6dbb : or al, byte ptr [rcx] ; ret
0x0000000000497087 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000477729 : or al, ch ; add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000409232 : or al, ch ; pop rax ; retf 0xffff
0x0000000000408ec7 : or al, ch ; ret
0x000000000040c2c8 : or al, ch ; ret 0xff99
0x0000000000465598 : or al, ch ; ret 1
0x0000000000409148 : or al, ch ; retf
0x000000000040abc0 : or al, ch ; retf 0xffb0
0x0000000000409245 : or al, ch ; retf 0xffff
0x00000000004c3008 : or al, dl ; std ; jmp qword ptr [rdx]
0x0000000000442f08 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00000000004354d3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044fae7 : or bl, dh ; ret
0x000000000040a475 : or byte ptr [eax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000415056 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x0000000000472621 : or byte ptr [r8 + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x0000000000410727 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004741ff : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000439728 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047e616 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000040e972 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000040b562 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffed
0x0000000000440a87 : or byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000497262 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046a233 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x000000000049bb87 : or byte ptr [r9 + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004397e7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000046449f : or byte ptr [r9 - 0x77], r9b ; ret
0x000000000047b5e3 : or byte ptr [rax + 0x29], cl ; fimul dword ptr [rax - 0x77] ; retf
0x0000000000410728 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000416eab : or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000472622 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000041cb67 : or byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 0x39], 1 ; retf
0x0000000000416a37 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000442735 : or byte ptr [rax + 0x39], cl ; ret
0x000000000041bfe9 : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000479425 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x0000000000470ce6 : or byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000047baaf : or byte ptr [rax + 0x39], cl ; retf 0xf40
0x000000000041d7da : or byte ptr [rax + 0x440f4802], ch ; retf 0x8348
0x000000000043f7e6 : or byte ptr [rax + 0x4f], bh ; syscall
0x00000000004c5cea : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000004c25d4 : or byte ptr [rax + 0xb], cl ; ret
0x00000000004696f6 : or byte ptr [rax + 0xf], cl ; retf 0x8948
0x0000000000475b9b : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000403f4c : or byte ptr [rax + 1], cl ; ret
0x000000000041b317 : or byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000467e5c : or byte ptr [rax - 0x39], cl ; ret
0x00000000004261cb : or byte ptr [rax - 0x73], cl ; add eax, 0x1d ; ret
0x00000000004261df : or byte ptr [rax - 0x73], cl ; add eax, 0x8449 ; ret
0x0000000000418c33 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000474108 : or byte ptr [rax - 0x75], cl ; add eax, 0x258c60 ; ret
0x000000000049ebd3 : or byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax - 0x7f] ; jmp rax
0x00000000004405c1 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000004091a1 : or byte ptr [rax - 0x77], cl ; adc al, 0x24 ; call 0x405c97
0x00000000004099a8 : or byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c97
0x000000000040e03a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000409253 : or byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405c98
0x000000000043972d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000474200 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043fecc : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041b775 : or byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x0000000000439729 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041f515 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000041799a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047e077 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000472f50 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040e973 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000472ef9 : or byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000040e161 : or byte ptr [rax - 0x77], cl ; xor ecx, dword ptr [rax + 0x29] ; retf 0xc148
0x0000000000472f4f : or byte ptr [rax - 0x77], r9b ; ret 0x8948
0x000000000043fbe4 : or byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; ret
0x000000000040b563 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffed
0x000000000040b331 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xfff7
0x0000000000471a86 : or byte ptr [rax - 0x7bf0ffc2], al ; retf 0xa
0x000000000041bfe5 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b07fc
0x000000000041bfe4 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b07fd
0x000000000041cba8 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044fc64 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x00000000004409b7 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000042c976 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042c9fe : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004630ae : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00000000004731b8 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045c5d2 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000411028 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004107dd : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x0000000000422f3c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041a19c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; retf
0x0000000000417844 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000417805 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x0000000000422f3d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a3c1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422f61 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041a19d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf
0x00000000004157dc : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041dca6 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000049ccc2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000444b41 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000044f952 : or byte ptr [rax], al ; add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000043e580 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049e876 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004428c1 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000424a68 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040a476 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000489880 : or byte ptr [rax], al ; jne 0x489851 ; jmp 0x489859
0x0000000000442541 : or byte ptr [rax], al ; mov edi, 0x4a4d5d ; mov eax, ebx ; syscall
0x0000000000442570 : or byte ptr [rax], al ; mov edi, 0x4a4d68 ; mov eax, ebx ; syscall
0x000000000044f513 : or byte ptr [rax], al ; mov edi, 0x4a6ca0 ; mov eax, ecx ; syscall
0x000000000044ef0e : or byte ptr [rax], al ; mov rdi, r13 ; mov eax, r15d ; syscall
0x00000000004be7c8 : or byte ptr [rax], bh ; hlt ; call qword ptr [rdx]
0x000000000042ba7e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049da60 : or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x0000000000478dcc : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x000000000047e2a9 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x0000000000447f28 : or byte ptr [rbp - 0x161c8637], al ; retf
0x000000000048a0a3 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000047414c : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x000000000044e524 : or byte ptr [rbp - 5], dh ; inc dword ptr [rbx - 0x76be0008] ; ret
0x0000000000475e1d : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x000000000041dea0 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004059e3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401865 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412caa : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x000000000049cc46 : or byte ptr [rbx + 0x634801eb], al ; ret
0x00000000004627e0 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x4627ad
0x00000000004c72db : or byte ptr [rbx + rcx + 2], al ; retf 0xe0a
0x0000000000457ab7 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040f771 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000047d7bf : or byte ptr [rbx - 0xaf4b], cl ; dec dword ptr [rax - 0x77] ; retf 0x1b8
0x0000000000442a54 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000470e09 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000047a61b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000046a234 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x000000000045c419 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000047f5ba : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000049bb88 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004c7c56 : or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c0acf : or byte ptr [rcx + 0xb], al ; ret
0x000000000046206b : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000048012b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004796c0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000400485 : or byte ptr [rcx + rcx*4 - 0x39], cl ; mov eax, 3 ; syscall
0x000000000040e297 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x000000000047a622 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000049cb63 : or byte ptr [rcx - 0x73], cl ; sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x0000000000411a0a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004397e8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000457408 : or byte ptr [rcx - 0x77], cl ; push rbp ; or cl, ch ; retf 0xfffe
0x00000000004644a0 : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000489c02 : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000041d739 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040e18a : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000044fee3 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x0000000000448b49 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041d04f : or byte ptr [rcx], al ; call 0x419af4
0x000000000045b2f1 : or byte ptr [rcx], al ; ret 0xd529
0x000000000049d766 : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049cf8f : or byte ptr [rcx], bl ; ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x0000000000442ace : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000451c30 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004179db : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004bb1be : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004712c7 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000470ee1 : or byte ptr [rdi + 0x6cb100], bh ; pop rbx ; pop rbp ; jmp rax
0x0000000000478371 : or byte ptr [rdi + 0x6cb140], bh ; call rax
0x00000000004035bb : or byte ptr [rdi + 0x6cc0a0], bh ; call r15
0x00000000004bfb43 : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000004c4ea4 : or byte ptr [rdi + 0xb], al ; jae 0x4c4eb8 ; ret
0x00000000004822c8 : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043f55c : or byte ptr [rdi], 0 ; ret
0x000000000047191f : or byte ptr [rdi], 0x84 ; retf 3
0x0000000000449ed3 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000044d119 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x00000000004151ee : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000004626a1 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000488049 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000415057 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000049cb16 : or byte ptr [rdi], cl ; ret 0xfc3
0x00000000004302cb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000044dda4 : or byte ptr [rdi], cl ; test dh, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000455bf6 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000049cb15 : or byte ptr [rdi], r9b ; ret 0xfc3
0x0000000000454c4c : or byte ptr [rip + 0x6be8004b], ch ; retf
0x0000000000454be8 : or byte ptr [rip - 0x3017ffb5], ch ; retf
0x0000000000454c33 : or byte ptr [rip - 0x7b17ffb5], ch ; retf
0x0000000000486fc3 : or byte ptr [rsi + 1], bh ; jmp 0x486f9c
0x00000000004a3cec : or byte ptr [rsi], 0xf9 ; call qword ptr [rax]
0x00000000004004cc : or byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000476a36 : or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004a3834 : or cl, 0xf8 ; call rax
0x000000000047b397 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000044cca0 : or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x0000000000411ede : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000412727 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x0000000000464f3f : or cl, byte ptr [rax - 0x77] ; ret
0x0000000000411a10 : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000042548a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000452777 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000049d37c : or cl, byte ptr [rbp + 0x39] ; retf 0xdb77
0x000000000048a1e3 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000463f17 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x0000000000400538 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x000000000048a0a9 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000408108 : or cl, ch ; ret
0x0000000000462ab2 : or cl, ch ; ret 0xfffc
0x0000000000407f08 : or cl, ch ; retf
0x000000000045740c : or cl, ch ; retf 0xfffe
0x00000000004882d5 : or cl, cl ; cmove rax, rdx ; ret
0x00000000004baba2 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004353f3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000049e255 : or dh, bl ; ret
0x00000000004ba9ca : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000047e367 : or dh, byte ptr [rbp - 0x4d] ; nop word ptr [rax + rax] ; call rbx
0x000000000041bbc3 : or dh, dh ; ret 0x7404
0x000000000041bb3e : or dh, dh ; ret 0xf04
0x000000000040283e : or dh, dh ; ret 0xfdf
0x000000000040db17 : or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x00000000004021ea : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x000000000047642c : or dword ptr [rax - 0x75], ecx ; mov ebp, 0xffffff78 ; call rax
0x000000000042391e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000422e6d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b92f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422dc7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041033f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000043fff4 : or dword ptr [rax], eax ; add byte ptr [rax], al ; movsxd r10, r10d ; syscall
0x000000000043ffb4 : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004937ee : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004970d9 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; jmp 0x4970f9
0x00000000004b2bd7 : or dword ptr [rax], ecx ; retf
0x00000000004ba313 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000048a1c3 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000042fa86 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000466593 : or dword ptr [rbp - 5], edi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000412520 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000478f1c : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000041fe66 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000042004c : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004016a4 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x0000000000478856 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000048f7cd : or dword ptr [rdi], ecx ; xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000048dc94 : or dword ptr [rdi], ecx ; xchg esp, ebx ; jmp 0x48dca1
0x000000000048aa5c : or dword ptr [rdi], ecx ; xchg esp, esi ; jmp 0x48aa69
0x00000000004bab6e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000474a69 : or dword ptr [rip + 0x256700], 1 ; pop rbx ; ret
0x000000000041d04c : or dword ptr [rsi + rax + 8], 1 ; call 0x419af7
0x000000000049717f : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c6db8 : or eax, 0x10a0303 ; ret
0x00000000004c6e68 : or eax, 0x1370303 ; ret
0x000000000043bcd1 : or eax, 0x1c478d48 ; ret
0x0000000000415992 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000004c6da8 : or eax, 0x34b0303 ; ret
0x00000000004c6e08 : or eax, 0x35b0303 ; ret
0x000000000046209a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004627a2 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000042cf52 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x000000000048a237 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000429e77 : or eax, 0x83480000 ; ret 0x4910
0x0000000000429ee1 : or eax, 0x83480000 ; ret 0xe910
0x00000000004a104d : or eax, 0x834825eb ; ret 0x4810
0x00000000004245e8 : or eax, 0x894d0000 ; retf
0x00000000004b89c1 : or eax, 0xcad7947e ; jmp 0x4b896d
0x00000000004ae2f9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004ae305 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004bab53 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004ba7f3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000440eee : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00000000004352a3 : or eax, 0xf7f0ff3 ; ret
0x00000000004444ec : or eax, 0xffffffff ; ret
0x00000000004c7c57 : or eax, dword ptr [r11] ; add dword ptr es:[rdx], ecx ; ret
0x000000000045e0cf : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000422c0d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a081 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c31 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000440041 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000424768 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044d594 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000004c7c58 : or eax, dword ptr [rbx] ; add dword ptr es:[rdx], ecx ; ret
0x00000000004c4353 : or eax, dword ptr [rdx] ; retf
0x00000000004c62dc : or eax, dword ptr [rdx] ; retf 0xc0a
0x00000000004c72dd : or eax, dword ptr [rdx] ; retf 0xe0a
0x00000000004c9121 : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x000000000045e0ce : or eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044290e : or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x0000000000416614 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004c94d7 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x0000000000435463 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000047a88e : or ebx, esi ; ret
0x000000000041d53a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418d84 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000040fb4c : or ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000040fcf7 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000447ce5 : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000048a1ff : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004c4e6e : or ecx, dword ptr [rdx + 0xa] ; ret
0x000000000042c964 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004c6e91 : or edi, ebx ; jmp rsi
0x00000000004c4ea6 : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000004bf1c0 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000435383 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000412521 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004c8199 : or esp, edi ; call qword ptr [rax]
0x00000000004c81b1 : or esp, edi ; call qword ptr [rdx]
0x000000000041d04b : or qword ptr [rsi + rax + 8], 1 ; call 0x419af8
0x00000000004354d2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435462 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004353f2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c4ea5 : or r14d, dword ptr [r11 + 0xa] ; ret
0x0000000000435382 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c9120 : or r8d, dword ptr [r14 + rcx + 0x38] ; ret
0x00000000004c72dc : or r8d, dword ptr [rdx] ; retf 0xe0a
0x000000000042c963 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000044cc9f : or r9b, byte ptr [r8 + 0x39] ; ret 0x3a76
0x0000000000462ab1 : or r9b, r13b ; ret 0xfffc
0x00000000004c4e6d : or r9d, dword ptr [r10 + 0xa] ; ret
0x00000000004c6e67 : or rax, 0x1370303 ; ret
0x00000000004c6da7 : or rax, 0x34b0303 ; ret
0x00000000004c6e07 : or rax, 0x35b0303 ; ret
0x0000000000462099 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004627a1 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000004444eb : or rax, 0xffffffffffffffff ; ret
0x00000000004c62db : or rax, qword ptr [r10] ; retf 0xc0a
0x0000000000496f62 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c4352 : or rax, qword ptr [rdx] ; retf
0x00000000004c8198 : or rsp, rdi ; call qword ptr [rax]
0x000000000046eb5f : out 0x25, al ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044fbd3 : out 0x41, eax ; call rdi
0x0000000000411812 : out 0x44, eax ; mov eax, ecx ; syscall
0x0000000000403b3d : out 0x44, eax ; mov eax, edx ; syscall
0x0000000000475b49 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000044fbe4 : out 0x48, al ; mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000420636 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fc15 : out 0x48, al ; mov edi, ebp ; call r15
0x00000000004454c5 : out 0x48, eax ; mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000467116 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x000000000041fb96 : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x0000000000415ce3 : out 0x5b, al ; ret
0x00000000004735aa : out 0x5b, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042035b : out 0x5d, al ; pop r12 ; jmp rax
0x00000000004ba3e0 : out 0x78, al ; jnp 0x4ba442 ; retf
0x000000000047e4c5 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000047e485 : out 0x89, al ; out dx, eax ; call rax
0x00000000004032cb : out 0x89, eax ; ret 0x8948
0x00000000004b8971 : out 0xb3, al ; retf 0xe80
0x0000000000403919 : out 0xb8, eax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000043ffb2 : out 0xb8, eax ; or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004b96a0 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000049e548 : out 0xe8, eax ; ret 0xffe7
0x000000000040640f : out 0xe8, eax ; retf
0x0000000000434c6a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434cea : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004bb3c8 : out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000004a37e1 : out 0xf8, al ; jmp qword ptr [rax]
0x00000000004a3801 : out 0xf8, al ; jmp rax
0x00000000004a3761 : out 0xf8, eax ; call qword ptr [rax]
0x00000000004a3781 : out 0xf8, eax ; jmp rax
0x000000000043fbda : out 0xfd, al ; dec dword ptr [rax - 0x77] ; ret
0x000000000049e871 : out 2, al ; jne 0x49e884 ; mov eax, 8 ; ret
0x000000000042c7d9 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000041d53d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000488546 : out dx, al ; and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004009a9 : out dx, al ; call rax
0x00000000004ba7f7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000041de7e : out dx, al ; fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004126f8 : out dx, al ; mov eax, r13d ; syscall
0x000000000043191a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000049c404 : out dx, al ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000043ffaf : out dx, al ; mov rdi, r12 ; mov eax, 9 ; syscall
0x0000000000411a95 : out dx, al ; mov rdi, r14 ; mov eax, r9d ; syscall
0x000000000043ecaf : out dx, al ; mov rdi, r8 ; mov eax, r9d ; syscall
0x000000000041f7af : out dx, al ; mov rdi, rbx ; call rax
0x000000000043507a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b7de : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004bab52 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004ba3df : out dx, al ; out 0x78, al ; jnp 0x4ba443 ; retf
0x000000000046aa3d : out dx, al ; xor edx, edx ; jmp 0x46aa09
0x000000000041b8c3 : out dx, eax ; add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000041e695 : out dx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000418d87 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000049ee3d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000441e19 : out dx, eax ; call 0x41e0e3
0x0000000000451848 : out dx, eax ; call 0x41e2a3
0x00000000004100de : out dx, eax ; call 0x42c353
0x000000000047e4c7 : out dx, eax ; call qword ptr [rbx]
0x000000000040e29d : out dx, eax ; call r14
0x000000000044fc18 : out dx, eax ; call r15
0x000000000041ebb7 : out dx, eax ; call rax
0x0000000000440eb1 : out dx, eax ; call rbx
0x00000000004c6ce9 : out dx, eax ; cli ; jmp qword ptr [rdx]
0x00000000004bb445 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000044ef12 : out dx, eax ; mov eax, r15d ; syscall
0x000000000044f023 : out dx, eax ; mov eax, r8d ; syscall
0x000000000043174a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431846 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431792 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000450195 : out dx, eax ; mov rdx, rbp ; call r15
0x00000000004350fa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b8dd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f518 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000415c8e : out dx, eax ; pop rbx ; ret
0x000000000042ead3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eaab
0x000000000042eb51 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eb29
0x000000000042efe3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42efbb
0x000000000042f061 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f039
0x000000000042e6d3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e6e8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e6fd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043da03 : out dx, eax ; ret 0xf66
0x000000000040999d : out dx, eax ; ret 0xffff
0x000000000043d9e6 : out dx, eax ; retf 0x4466
0x00000000004bab1b : out dx, eax ; retf 0xab0d
0x000000000042165a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042fbec : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fbd5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fbbe : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e67a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000469455 : out dx, eax ; xor al, 0x26 ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf091db1
0x000000000044eff1 : out dx, eax ; xor eax, eax ; syscall
0x00000000004297ee : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c53d5 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; test al, 5 ; cli ; jmp rdx
0x000000000043be2e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004a3455 : outsb dx, byte ptr [rsi] ; clc ; call rax
0x00000000004bafa3 : outsb dx, byte ptr [rsi] ; ja 0x4baf2c ; ret 0x48f
0x0000000000409a1e : outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004b99d2 : outsb dx, byte ptr [rsi] ; retf
0x00000000004b8ce4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004ba318 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000426c9a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004a3459 : outsd dx, dword ptr [rsi] ; clc ; push qword ptr [rax + 0x71] ; clc ; call qword ptr [rax]
0x0000000000421808 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004272be : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000431ed2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x00000000004320d2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042f9ed : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042fa8d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042f5b2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042f632 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x0000000000465aaa : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042f9f2 : outsd dx, dword ptr [rsi] ; ret
0x00000000004b96a6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000432087 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000042fa92 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000465afa : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000431f52 : outsd dx, dword ptr [rsi] ; retf
0x0000000000429199 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x0000000000432152 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042efda : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042eaca : outsd dx, dword ptr [rsi] ; retf 0xff3
0x00000000004b96a5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000041aedf : paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000422b02 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000466804 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000004667ef : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000422b01 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004baaa5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004baaa6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004239af : pmovmskb edx, mm4 ; test edx, edx ; je 0x4239c3 ; bsf eax, edx ; ret
0x00000000004c745d : pop qword ptr [rax] ; add al, ah ; sub bh, bl ; call rsp
0x0000000000442985 : pop r10 ; ret
0x00000000004baf2f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000041e88a : pop r12 ; jmp rax
0x000000000042063c : pop r12 ; jmp rcx
0x00000000004400ff : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000440119 : pop r12 ; mov esi, 3 ; jmp rax
0x00000000004735ad : pop r12 ; pop r13 ; jmp rax
0x000000000048effc : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ef7a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00000000004418cb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402133 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040150f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401632 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f5b5 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004059e6 : pop r12 ; pop r13 ; ret
0x000000000047b63c : pop r12 ; pop r14 ; ret
0x000000000046b3a1 : pop r12 ; pop rbp ; ret
0x000000000040060a : pop r12 ; ret
0x00000000004735af : pop r13 ; jmp rax
0x000000000048effe : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ef7c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00000000004418cd : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402135 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401511 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401634 : pop r13 ; pop r14 ; ret
0x000000000040f5b7 : pop r13 ; pop rbp ; ret
0x00000000004059e8 : pop r13 ; ret
0x000000000048f000 : pop r14 ; fmul st(0) ; ret
0x000000000048ef7e : pop r14 ; fmulp st(1) ; ret
0x00000000004418cf : pop r14 ; pop r15 ; jmp rax
0x0000000000402137 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401513 : pop r14 ; pop r15 ; ret
0x0000000000401636 : pop r14 ; ret
0x00000000004418d1 : pop r15 ; jmp rax
0x0000000000402139 : pop r15 ; pop rbp ; ret
0x0000000000401515 : pop r15 ; ret
0x00000000004188d1 : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004c3ddd : pop rax ; add byte ptr [rax], al ; mov bl, 0xf8 ; call qword ptr [rdi]
0x00000000004be968 : pop rax ; add edi, esi ; call rdi
0x000000000042678b : pop rax ; add r11b, sil ; ret
0x00000000004c7118 : pop rax ; cdq ; std ; call rcx
0x00000000004188d2 : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004786c6 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004bdee8 : pop rax ; ret 0xfffd
0x0000000000409a34 : pop rax ; ret 0xffff
0x00000000004bae83 : pop rax ; retf
0x000000000041dd18 : pop rax ; retf 0x2a
0x000000000048830f : pop rax ; retf 0x6c
0x0000000000409234 : pop rax ; retf 0xffff
0x00000000004c41ed : pop rbp ; add byte ptr [rax], al ; jo 0x4c41d3 ; clc ; call qword ptr [rdx]
0x00000000004793ba : pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000044047f : pop rbp ; fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x44048f ; call rbx
0x00000000004ba925 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000041dea2 : pop rbp ; jmp rax
0x0000000000400963 : pop rbp ; mov byte ptr [rip + 0x2cb1f5], 1 ; ret
0x0000000000418cf2 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000004008df : pop rbp ; mov edi, 0x6cbb50 ; jmp rax
0x00000000004b9280 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000041e889 : pop rbp ; pop r12 ; jmp rax
0x000000000042063b : pop rbp ; pop r12 ; jmp rcx
0x00000000004400fe : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000440118 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000004735ac : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000048effb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ef79 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00000000004418ca : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040150e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401631 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004059e5 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b63b : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400609 : pop rbp ; pop r12 ; ret
0x000000000048efff : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000048ef7d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x00000000004418ce : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000402136 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401512 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401635 : pop rbp ; pop r14 ; ret
0x000000000040f5b8 : pop rbp ; pop rbp ; ret
0x000000000047a628 : pop rbp ; pop rbx ; ret
0x00000000004004d1 : pop rbp ; ret
0x00000000004793c2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x00000000004bde75 : pop rbp ; std ; call qword ptr [rax]
0x0000000000412cac : pop rbp ; sub rax, rdx ; ret
0x0000000000446c4a : pop rbx ; add byte ptr [rax - 0x7f], cl ; ret 0x5b00
0x00000000004c7c46 : pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004b8278 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043e52c : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000043e55f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004b8276 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000487cea : pop rbx ; jmp rax
0x00000000004111de : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000474a87 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000043e5c3 : pop rbx ; mov eax, eax ; ret
0x0000000000462fca : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a62e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000476a1e : pop rbx ; mov edi, 0x6cb140 ; jmp rax
0x0000000000414e46 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414fb6 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000463857 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420358 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000040f5b4 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000046b3a0 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041dea1 : pop rbx ; pop rbp ; jmp rax
0x000000000041e888 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000042063a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000004400fd : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000440117 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000004735ab : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000401630 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004059e4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b63a : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000400608 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004d0 : pop rbx ; pop rbp ; ret
0x0000000000412cab : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000400d55 : pop rbx ; ret
0x00000000004bb560 : pop rbx ; ret 0x6f9
0x00000000004205e1 : pop rbx ; ret 0xffff
0x00000000004b8a3d : pop rbx ; retf
0x00000000004bde71 : pop rbx ; std ; inc eax ; pop rbp ; std ; call qword ptr [rax]
0x0000000000416a08 : pop rbx ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000466c69 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000004409ca : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000047ae68 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x251b53] ; jmp rax
0x0000000000473506 : pop rcx ; add byte ptr [r9 - 0x77], cl ; call 0xffffffffca8c4465
0x00000000004c3e1d : pop rcx ; add byte ptr [rax], al ; ror cl, 0xfd ; call qword ptr [rbx]
0x0000000000491cd4 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000474849 : pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x000000000041f317 : pop rcx ; mov ah, 0x2a ; add byte ptr [rax - 0x16ffbe35], ah ; retf 0xfffd
0x0000000000488f3f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004302c8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042bf6d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004744b9 : pop rdi ; add r8b, bpl ; call rdx
0x00000000004740ee : pop rdi ; add r8b, bpl ; retf 0xf8d6
0x0000000000431ce9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431af9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004ba81e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004418d2 : pop rdi ; jmp rax
0x00000000004b97e1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000049e3ee : pop rdi ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000431919 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431749 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431845 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431791 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000040213a : pop rdi ; pop rbp ; ret
0x0000000000401516 : pop rdi ; ret
0x00000000004ba401 : pop rdx ; je 0x4ba3cb ; ret 0xacfc
0x00000000004ba513 : pop rdx ; leave ; retf
0x00000000004bb3c7 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000442984 : pop rdx ; pop r10 ; ret
0x00000000004786c7 : pop rdx ; pop rbx ; ret
0x00000000004429a9 : pop rdx ; pop rsi ; ret
0x0000000000442986 : pop rdx ; ret
0x0000000000414202 : pop rdx ; retf
0x00000000004baf30 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042ead4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eaaa
0x000000000042eb52 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42eb28
0x000000000042efe4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42efba
0x000000000042f062 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42f038
0x000000000042be6e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000473a83 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004261ec : pop rsi ; add dword ptr [rax], eax ; ret
0x000000000048f001 : pop rsi ; fmul st(0) ; ret
0x000000000048ef7f : pop rsi ; fmulp st(1) ; ret
0x000000000042c975 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004418d0 : pop rsi ; pop r15 ; jmp rax
0x0000000000402138 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401514 : pop rsi ; pop r15 ; ret
0x0000000000401637 : pop rsi ; ret
0x0000000000429a00 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000447ff5 : pop rsp ; add al, bpl ; ret
0x00000000004c41bd : pop rsp ; add byte ptr [rax], al ; jo 0x4c41a3 ; clc ; call qword ptr [rbx]
0x00000000004c41d5 : pop rsp ; add byte ptr [rax], al ; js 0x4c41bb ; clc ; call qword ptr [rax]
0x00000000004c313c : pop rsp ; add byte ptr [rax], r8b ; sar byte ptr [rbx], 1 ; clc ; call qword ptr [rax]
0x000000000042a700 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000047c064 : pop rsp ; and al, 0x78 ; call r12
0x000000000041e88b : pop rsp ; jmp rax
0x000000000042063d : pop rsp ; jmp rcx
0x0000000000440100 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000044011a : pop rsp ; mov esi, 3 ; jmp rax
0x0000000000422f60 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004735ae : pop rsp ; pop r13 ; jmp rax
0x000000000048effd : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048ef7b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x00000000004418cc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402134 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401510 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401633 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040f5b6 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000004059e7 : pop rsp ; pop r13 ; ret
0x000000000047b63d : pop rsp ; pop r14 ; ret
0x000000000046b3a2 : pop rsp ; pop rbp ; ret
0x000000000040060b : pop rsp ; ret
0x000000000047a509 : pop rsp ; retf 0x4df0
0x00000000004ba587 : pop rsp ; sbb ebp, ebx ; retf
0x0000000000444309 : pop rsp ; sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004c6c3c : pop rsp ; xchg dword ptr [rax], eax ; add al, ah ; jrcxz 0x4c6c44 ; jmp qword ptr [rdx]
0x00000000004c820d : popfq ; add byte ptr [rax], al ; or esp, edi ; call qword ptr [rdx]
0x00000000004c81f5 : popfq ; add byte ptr [rax], al ; or rsp, rdi ; call qword ptr [rax]
0x00000000004ba50c : popfq ; jrcxz 0x4ba4d1 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x000000000049b9a9 : popfq ; ret 0xf45
0x0000000000454c1f : popfq ; retf
0x00000000004bb2c2 : popfq ; retf 0xde4f
0x0000000000494560 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004bdebd : popfq ; std ; ljmp [rax] ; ret 0xfffd
0x000000000045f9d9 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00000000004351c2 : psllq mm1, qword ptr [r15] ; jg 0x4351dd ; ret
0x00000000004351c3 : psllq mm1, qword ptr [rdi] ; jg 0x4351dc ; ret
0x000000000043b4f6 : psllq mm1, qword ptr [rdi] ; jg 0x43b50a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b4f5 : psllq mm1, qword ptr [rdi] ; jg 0x43b50b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b557 : psllq mm1, qword ptr [rdi] ; jg 0x43b56c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004c5501 : psubd mm7, mm7 ; retf
0x00000000004a3d29 : psubw mm7, mm7 ; jo 0x4a3d42 ; stc ; call rax
0x00000000004a3ce9 : psubw mm7, mm7 ; or byte ptr [rsi], 0xf9 ; call qword ptr [rax]
0x0000000000440472 : push -0x24 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004b92e4 : push -0x30 ; retf 0xe72e
0x00000000004b896e : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004bab15 : push -0x57d3205 ; call 0xffffffffab597615
0x00000000004b8b21 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000004bdec4 : push -0x6f00023e ; ret 0xfffd
0x0000000000452c7f : push -0x76000005 ; ret 0x8941
0x000000000047bf1e : push -0x7a000006 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000048114f : push -0x7c000006 ; ret 0x8908
0x0000000000485c6a : push -0x9000007 ; ret 0xf02
0x000000000043be14 : push -0x9ffffff ; ret 0x7501
0x00000000004bddc9 : push -3 ; call qword ptr [rax]
0x00000000004ba315 : push 0x1b6e41b5 ; std ; retf
0x000000000049c2f8 : push 0x48 ; add esp, 0x18 ; ret
0x000000000041f7ac : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000004432c0 : push 0x4b ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x00000000004bddc5 : push 0x6a40fffd ; std ; call qword ptr [rax]
0x00000000004bafa2 : push 0x6e ; ja 0x4baf2d ; ret 0x48f
0x0000000000415a56 : push 0x74c98548 ; sub dword ptr [rax + 0x39], ecx ; retf
0x0000000000476962 : push 0x75400025 ; cmp bl, dh ; ret
0x00000000004ba882 : push 0xfd4cbe ; retf 0xf64
0x0000000000485afc : push 0xffffff9 ; xchg eax, esp ; ret
0x000000000045a571 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004a3aaf : push qword ptr [rax + 0x18] ; stc ; jmp rax
0x00000000004bdeeb : push qword ptr [rax + 0x28fffdc2] ; ret 0xfffd
0x00000000004a3ac7 : push qword ptr [rax + 0x40fff91c] ; sbb al, 0xf9 ; call rax
0x00000000004a3463 : push qword ptr [rax + 0x50fff874] ; jbe 0x4a346b ; jmp qword ptr [rax]
0x00000000004bde6f : push qword ptr [rax + 0x5b] ; std ; inc eax ; pop rbp ; std ; call qword ptr [rax]
0x00000000004a343b : push qword ptr [rax + 0x64] ; clc ; call qword ptr [rax]
0x00000000004a345b : push qword ptr [rax + 0x71] ; clc ; call qword ptr [rax]
0x00000000004a34ab : push qword ptr [rax + 0x79] ; clc ; jmp rax
0x00000000004a347b : push qword ptr [rax + 0x7e] ; clc ; inc eax ; jg 0x4a3483 ; call qword ptr [rax]
0x00000000004a3d2b : push qword ptr [rax + 0xe] ; stc ; call rax
0x00000000004a3b27 : push qword ptr [rax + 0xf] ; stc ; jmp rax
0x00000000004a37f3 : push qword ptr [rax - 0x20] ; clc ; inc dword ptr [rax - 0x1e] ; clc ; jmp qword ptr [rax]
0x00000000004a378f : push qword ptr [rax - 0x21] ; clc ; push qword ptr [rax] ; loope 0x4a3797 ; call qword ptr [rax]
0x00000000004a380f : push qword ptr [rax - 0x22] ; clc ; jmp qword ptr [rax]
0x00000000004a3ea7 : push qword ptr [rax - 0x2f000684] ; jl 0x4a3eb0 ; jmp rax
0x00000000004a36d7 : push qword ptr [rax - 0x3e] ; clc ; inc dword ptr [rax] ; ret
0x00000000004a3e7f : push qword ptr [rax - 0x3f000685] ; jnp 0x4a3e88 ; jmp rax
0x00000000004a3e27 : push qword ptr [rax - 0x3f00068a] ; jbe 0x4a3e30 ; call rax
0x00000000004a3cdf : push qword ptr [rax] ; adc cl, bh ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3cf7 : push qword ptr [rax] ; adc eax, 0x14a0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004bdde7 : push qword ptr [rax] ; jns 0x4bddec ; call qword ptr [rax]
0x00000000004a3793 : push qword ptr [rax] ; loope 0x4a3793 ; call qword ptr [rax]
0x00000000004a375f : push qword ptr [rax] ; out 0xf8, eax ; call qword ptr [rax]
0x00000000004a3453 : push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; clc ; call rax
0x000000000043d798 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000410d3b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000041563d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000464af5 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000464a9d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000415ce1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000442b52 : push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415c89 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000466dba : push qword ptr [rbx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000004a360f : push qword ptr [rcx + 0x31fff8c1] ; ret 0xfff8
0x00000000004a3a63 : push qword ptr [rcx + rbx + 0x1944fff9] ; stc ; call rsp
0x00000000004a3623 : push qword ptr [rcx - 0x3c] ; clc ; call qword ptr [rcx]
0x0000000000468fd7 : push qword ptr [rcx] ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x5a], 0xbf ; ret
0x0000000000411211 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004a3613 : push qword ptr [rcx] ; ret 0xfff8
0x0000000000474979 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000045a572 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000040dc3d : push qword ptr [rdi + 0x20] ; ret
0x000000000043f5a8 : push qword ptr [rdi + 0x35] ; ret
0x000000000043f64c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x000000000043f3ca : push qword ptr [rdi + 3] ; ret
0x000000000043f419 : push qword ptr [rdi + 4] ; ret
0x000000000046ad3f : push qword ptr [rdi + 6] ; ret
0x000000000044fae5 : push qword ptr [rdi + 8] ; ret
0x000000000046a95c : push qword ptr [rdi + 9] ; pop rbx ; ret
0x0000000000415166 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004a3b77 : push qword ptr [rdx + 0x15] ; stc ; jmp rdx
0x00000000004a399b : push qword ptr [rdx + 0x42fff91a] ; sbb bh, cl ; call rdx
0x000000000046ac0d : push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a365b : push qword ptr [rsi] ; ret
0x0000000000414d9f : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b89cc : push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000463bca : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416621 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041b280 : push rax ; adc dh, dh ; ret 0xf0f
0x00000000004183f4 : push rax ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004c2800 : push rax ; add al, bh ; call qword ptr [rcx]
0x0000000000493edd : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a3363 : push rax ; add bh, al ; inc eax ; add edi, eax ; jmp rax
0x0000000000414da0 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043f469 : push rax ; add byte ptr [rax], al ; ret
0x000000000041a6bf : push rax ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000425e05 : push rax ; add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004a335c : push rax ; add eax, edi ; jmp qword ptr [rax]
0x000000000045d40b : push rax ; and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000444b88 : push rax ; call rbx
0x00000000004a34b3 : push rax ; clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x000000000045dfc5 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004c2400 : push rax ; fcomi st(7) ; jmp qword ptr [rbx]
0x00000000004a379b : push rax ; in al, 0xf8 ; call rax
0x00000000004a375c : push rax ; in eax, 0xf8 ; push qword ptr [rax] ; out 0xf8, eax ; call qword ptr [rax]
0x00000000004bddcf : push rax ; insd dword ptr [rdi], dx ; std ; call rax
0x00000000004bdde4 : push rax ; ja 0x4bddeb ; push qword ptr [rax] ; jns 0x4bddef ; call qword ptr [rax]
0x00000000004a3468 : push rax ; jbe 0x4a3466 ; jmp qword ptr [rax]
0x00000000004a3ed3 : push rax ; jge 0x4a3ed4 ; call qword ptr [rax]
0x00000000004a3eb3 : push rax ; jl 0x4a3eb4 ; call qword ptr [rax]
0x00000000004bddef : push rax ; jl 0x4bddf4 ; call rax
0x00000000004785cc : push rax ; jmp qword ptr [rax]
0x000000000049cd53 : push rax ; jne 0x49cd4c ; xor eax, eax ; add rsp, 8 ; ret
0x000000000049cdb3 : push rax ; jne 0x49cdac ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004a3df7 : push rax ; jne 0x4a3dfc ; inc dword ptr [rax] ; jbe 0x4a3e00 ; call qword ptr [rax]
0x00000000004a3e8b : push rax ; jnp 0x4a3e90 ; inc dword ptr [rax] ; jl 0x4a3e94 ; call qword ptr [rax]
0x00000000004b8a3a : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004a3817 : push rax ; loope 0x4a3817 ; call rax
0x00000000004a37b3 : push rax ; loopne 0x4a37b3 ; call rax
0x0000000000446c5a : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004a35eb : push rax ; mov esi, 0xbc35fff8 ; clc ; jmp rcx
0x0000000000416573 : push rax ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416563
0x0000000000488166 : push rax ; mov rax, rbx ; pop rbx ; ret
0x000000000044ba18 : push rax ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x0000000000418c32 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000457407 : push rax ; or byte ptr [rcx - 0x77], cl ; push rbp ; or cl, ch ; retf 0xfffe
0x000000000041bbc2 : push rax ; or dh, dh ; ret 0x7404
0x000000000041bb3d : push rax ; or dh, dh ; ret 0xf04
0x0000000000422e6c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a37e0 : push rax ; out 0xf8, al ; jmp qword ptr [rax]
0x00000000004669ce : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446c5c : push rax ; push rsp ; ret
0x00000000004bc6b8 : push rax ; ret 0x4b
0x000000000041cf9c : push rax ; retf
0x000000000041dcfb : push rax ; retf 0x41
0x00000000004882e4 : push rax ; retf 0x6c
0x0000000000457beb : push rax ; rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x0000000000410502 : push rax ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x0000000000416616 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000464b6a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004a38bf : push rax ; sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x00000000004a38d8 : push rax ; sbb edi, ecx ; jmp rax
0x00000000004c92d1 : push rax ; std ; jmp qword ptr [rbx]
0x0000000000415cdd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004b89cd : push rax ; xor byte ptr [rcx], ah ; retf
0x000000000049ee47 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000479b1f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000440811 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000004748b8 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000474a52 : push rbp ; and eax, 0x89485300 ; ret
0x0000000000442187 : push rbp ; mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x00000000004956a8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045740b : push rbp ; or cl, ch ; retf 0xfffe
0x000000000046ab50 : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000441d87 : push rbp ; ret
0x00000000004652d1 : push rbp ; ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000042612a : push rbp ; xor rax, rax ; ret
0x0000000000400b59 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047aef4 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046da06 : push rbx ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000423849 : push rbx ; add qword ptr [rax], rax ; ret
0x00000000004babb9 : push rbx ; call 0x4c15d576
0x000000000041654d : push rbx ; cmp byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x000000000044d592 : push rbx ; je 0x44d5a9 ; cmp esi, 3 ; je 0x44d5a9 ; pop rbx ; ret
0x0000000000464a69 : push rbx ; je 0x464acd ; pop rbp ; pop r12 ; ret
0x0000000000464b0e : push rbx ; je 0x464b72 ; pop rbp ; pop r12 ; ret
0x000000000046ab51 : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000462c4a : push rbx ; or al, 0xf6 ; ret 0xf04
0x0000000000416eaa : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004151ed : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000416572 : push rbx ; push rax ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, rcx ; jmp 0x416564
0x000000000040d789 : push rbx ; ret
0x0000000000416551 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x0000000000416576 : push rbx ; sbb byte ptr [rax - 0x77], cl ; retf 0xdfeb
0x0000000000414144 : push rbx ; sub cl, ch ; ret 0xfffe
0x00000000004122c1 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004ba3fc : push rbx ; xchg eax, edx ; jae 0x4ba3db ; push rsi ; pop rdx ; je 0x4ba3d0 ; ret 0xacfc
0x00000000004c36dd : push rcx ; add byte ptr [rax], al ; js 0x4c36e1 ; call qword ptr [rcx]
0x000000000043f370 : push rcx ; add byte ptr [rax], al ; ret
0x000000000047b50f : push rcx ; add cl, byte ptr [rax - 0x7d] ; jmp 0xffffffffcbd0fd21
0x00000000004b9685 : push rcx ; call qword ptr [rsi]
0x00000000004c5fe1 : push rcx ; cli ; jmp rsp
0x0000000000435add : push rcx ; jl 0x435b2e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435c44 : push rcx ; jl 0x435c95 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000049da5f : push rcx ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x00000000004a361c : push rcx ; ret
0x000000000048a0a5 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000043ba3a : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000435329 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000475b15 : push rdi ; add dword ptr [rax + 0xf], ecx ; retf 0x2948
0x000000000043baec : push rdi ; add eax, 0xc478d48 ; ret
0x000000000049b5ad : push rdi ; add ecx, dword ptr [rax + 0x63] ; ret
0x00000000004315d8 : push rdi ; clc ; ret
0x0000000000431750 : push rdi ; cld ; ret
0x0000000000432277 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434c09 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434b89 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004349da : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000414ce4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000434a6a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000045d4a8 : push rdi ; or al, 0x83 ; ret
0x000000000045d42b : push rdi ; or al, 0xf6 ; ret 0xf08
0x000000000047a61a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048012a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000047a621 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000043bcd0 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042f9ee : push rdi ; ret
0x0000000000401085 : push rdi ; ret 0
0x000000000042fa8e : push rdi ; ret 0xff3
0x000000000042f5b3 : push rdi ; retf
0x000000000041f8f5 : push rdi ; retf 0
0x000000000042f633 : push rdi ; retf 0xcab2
0x0000000000432477 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431c9a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000432077 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000041c6ba : push rdi ; sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x00000000004106af : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000465aab : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004a3b73 : push rdx ; adc eax, 0x1572fff9 ; stc ; jmp rdx
0x0000000000443779 : push rdx ; add byte ptr [rax + 0xf], cl ; ret
0x000000000046b03a : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c5ced : push rdx ; ret
0x0000000000456d5a : push rdx ; retf 0
0x000000000045184a : push rdx ; retf 0xfffc
0x0000000000446c56 : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000042e6d4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043dfd9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x43e030 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000464032 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004c3b5d : push rsi ; add byte ptr [rax], al ; mov al, 0x9a ; clc ; jmp rbx
0x00000000004355c1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435631 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000043b485 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435551 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000043b423 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042e6e9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000431702 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431e71 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431aa5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431c85 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431e65 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004318c5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004bafa0 : push rsi ; cli ; push 0x6e ; ja 0x4baf2f ; ret 0x48f
0x000000000043d2d6 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000043d2c6 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000043d296 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000042c9fd : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004ba400 : push rsi ; pop rdx ; je 0x4ba3cc ; ret 0xacfc
0x000000000041ed92 : push rsi ; ret
0x0000000000485c6d : push rsi ; ret 0xf02
0x000000000045ef48 : push rsi ; ret 0xf10
0x00000000004a3920 : push rsi ; sbb bh, cl ; jmp rsi
0x00000000004bde69 : push rsi ; std ; jmp qword ptr [rax]
0x000000000043d2a6 : push rsi ; sub eax, edx ; ret
0x00000000004b89c8 : push rsi ; xchg eax, ebp ; jge 0x4b89ad ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000042e6fe : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000444bef : push rsp ; add al, bpl ; leave ; retf
0x000000000041b6bc : push rsp ; and al, 0x10 ; call rax
0x0000000000465023 : push rsp ; and al, 0x18 ; lea r9, [rsp + 0x10] ; call rbx
0x0000000000466c2e : push rsp ; and al, 0x28 ; lea rsi, [rsp + 0x40] ; call rbx
0x0000000000447941 : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000446fce : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000467291 : push rsp ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000044ba16 : push rsp ; and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041e4ca : push rsp ; and al, 0x68 ; call rax
0x000000000041f7aa : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000044866c : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b256 : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000491a30 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004919ea : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041afc5 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000004c0171 : push rsp ; cmc ; call qword ptr [rcx]
0x00000000004953a9 : push rsp ; or eax, 0x894d0000 ; retf
0x000000000041be4a : push rsp ; ret
0x0000000000478e92 : push rsp ; retf 0x45f8
0x000000000047a4a0 : push rsp ; retf 0x48f8
0x00000000004708cf : push rsp ; retf 0xeb08
0x00000000004a3a4c : push rsp ; sbb al, 0xf9 ; jmp rsp
0x00000000004bde65 : push rsp ; std ; call rax
0x00000000004babca : push rsp ; syscall
0x00000000004296c0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004c81ad : pushfq ; add byte ptr [rax], al ; or esp, edi ; call qword ptr [rdx]
0x00000000004c8195 : pushfq ; add byte ptr [rax], al ; or rsp, rdi ; call qword ptr [rax]
0x00000000004c297c : pushfq ; add byte ptr [rax], r8b ; loopne 0x4c298a ; clc ; call rsp
0x0000000000447150 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004a3571 : pushfq ; clc ; inc dword ptr [rax] ; sahf ; clc ; jmp qword ptr [rax]
0x000000000041427c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000042a3c0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004686f3 : pushfq ; ret 0xb60f
0x000000000049b970 : pushfq ; ret 0xf45
0x0000000000425e5d : rcl bh, 1 ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x0000000000492c5d : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c5fe0 : rcl byte ptr [rcx - 6], 1 ; jmp rsp
0x00000000004bad11 : rcl byte ptr [rdi], cl ; retf
0x00000000004437b8 : rcl byte ptr [rdx + 0x4a], 1 ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004bde68 : rcl byte ptr [rsi - 3], 1 ; jmp qword ptr [rax]
0x00000000004a3898 : rcl ch, 0xf8 ; call qword ptr [rax]
0x00000000004a388c : rcl cl, 1 ; clc ; jmp qword ptr [rax]
0x00000000004ba83a : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004ba3ff : rcl dword ptr [rsi + 0x5a], cl ; je 0x4ba3cd ; ret 0xacfc
0x00000000004ba839 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004ba3fb : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4ba3d1 ; ret 0xacfc
0x000000000044216c : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000049874d : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046321a : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004409cc : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000462fcc : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000047a627 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000004bde74 : rcr byte ptr [rbp - 3], 0xff ; adc byte ptr [rax - 3], ah ; call qword ptr [rax]
0x0000000000442ad0 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000004176ff : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041ecce : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b639 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040ec5e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c647 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax + rax] ; ret
0x000000000045c41b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000041e783 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000040fca0 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000049256d : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ba81d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000478b29 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004bab71 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000044060b : rcr edx, 1 ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000432ac6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004005d9 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4005e2 ; ret
0x00000000004002e1 : ret
0x0000000000400624 : ret 0
0x00000000004ae700 : ret 0x10
0x000000000044f75b : ret 0x100
0x0000000000462bff : ret 0x107
0x0000000000476456 : ret 0x10eb
0x000000000041be72 : ret 0x110
0x000000000047a5fc : ret 0x114d
0x0000000000447408 : ret 0x1189
0x000000000044619b : ret 0x11e9
0x000000000048372a : ret 0x12
0x00000000004748bc : ret 0x1272
0x000000000049d813 : ret 0x1374
0x000000000046dced : ret 0x1376
0x000000000046ae81 : ret 0x1477
0x000000000041b561 : ret 0x148
0x0000000000415cf2 : ret 0x149
0x0000000000419e73 : ret 0x14c
0x0000000000435e9c : ret 0x14d
0x000000000040781a : ret 0x168
0x000000000040761a : ret 0x16a
0x0000000000423b7a : ret 0x17
0x000000000040681a : ret 0x178
0x0000000000435dd9 : ret 0x180f
0x000000000044f1f6 : ret 0x1874
0x0000000000426195 : ret 0x1876
0x0000000000417835 : ret 0x18eb
0x0000000000468285 : ret 0x190
0x0000000000488cb2 : ret 0x1a75
0x00000000004bad7a : ret 0x1ad4
0x00000000004b950d : ret 0x1b49
0x000000000041dcaf : ret 0x1be
0x00000000004b03d0 : ret 0x1d4
0x00000000004b0b68 : ret 0x1d5
0x0000000000400d05 : ret 0x1d89
0x0000000000447d53 : ret 0x1e76
0x00000000004498e7 : ret 0x1f0f
0x000000000041e90e : ret 0x1f76
0x000000000044f677 : ret 0x200
0x0000000000446f4c : ret 0x2176
0x00000000004a0f13 : ret 0x22
0x0000000000423918 : ret 0x2288
0x00000000004a10ca : ret 0x22a0
0x00000000004a0756 : ret 0x22b2
0x000000000049e15a : ret 0x22eb
0x000000000049ddba : ret 0x22ed
0x000000000042fbf2 : ret 0x2373
0x000000000043f4e7 : ret 0x23e8
0x00000000004af3d8 : ret 0x24
0x0000000000470fcc : ret 0x25
0x0000000000414819 : ret 0x2501
0x000000000041de5d : ret 0x2575
0x000000000046bec2 : ret 0x25e0
0x0000000000401356 : ret 0x2773
0x00000000004658a6 : ret 0x2774
0x0000000000451cf5 : ret 0x27b4
0x00000000004313a6 : ret 0x280f
0x0000000000426185 : ret 0x2876
0x000000000044447a : ret 0x2881
0x0000000000443dea : ret 0x2888
0x000000000047f6c8 : ret 0x28f5
0x0000000000485fed : ret 0x2941
0x000000000041071d : ret 0x2948
0x000000000049b8fa : ret 0x2949
0x0000000000432b11 : ret 0x294c
0x000000000041282b : ret 0x294d
0x000000000041e553 : ret 0x2a
0x000000000041e81b : ret 0x2a75
0x00000000004103bf : ret 0x2b48
0x000000000044643e : ret 0x2b49
0x00000000004180fa : ret 0x2b51
0x000000000043e492 : ret 0x2b77
0x000000000043e137 : ret 0x2c76
0x00000000004037f5 : ret 0x2c99
0x0000000000414a9a : ret 0x2de
0x00000000004836b4 : ret 0x2e
0x00000000004627e5 : ret 0x2e66
0x0000000000446325 : ret 0x3101
0x0000000000403766 : ret 0x3145
0x000000000046fe72 : ret 0x314c
0x00000000004af8c8 : ret 0x33
0x0000000000403f11 : ret 0x348
0x000000000044c37b : ret 0x349
0x0000000000488d08 : ret 0x357e
0x00000000004ba65a : ret 0x3827
0x000000000047be12 : ret 0x3840
0x000000000040fddf : ret 0x3841
0x000000000044072f : ret 0x3845
0x0000000000426175 : ret 0x3876
0x00000000004432c9 : ret 0x3880
0x00000000004150fb : ret 0x389
0x00000000004b8ce6 : ret 0x38ae
0x000000000047aa56 : ret 0x38b
0x000000000044fc51 : ret 0x3948
0x000000000041d132 : ret 0x3949
0x000000000044d196 : ret 0x394c
0x0000000000452b18 : ret 0x394d
0x000000000043d8b2 : ret 0x3a01
0x000000000042fbdb : ret 0x3a73
0x000000000044cca3 : ret 0x3a76
0x0000000000442ac1 : ret 0x3b01
0x000000000046736a : ret 0x3bba
0x000000000040e62e : ret 0x3ce8
0x0000000000445b65 : ret 0x3d83
0x000000000046af07 : ret 0x3e8
0x000000000046a222 : ret 0x3e9
0x000000000049b67f : ret 0x3ee9
0x0000000000419212 : ret 0x4007
0x0000000000466a76 : ret 0x408d
0x000000000047838f : ret 0x40bf
0x0000000000445f50 : ret 0x4101
0x0000000000455130 : ret 0x4108
0x0000000000456bf8 : ret 0x4110
0x000000000041c84c : ret 0x4117
0x000000000046f00c : ret 0x412f
0x0000000000446d1e : ret 0x41c3
0x000000000042e56a : ret 0x4266
0x0000000000468382 : ret 0x428d
0x000000000044cc9a : ret 0x4372
0x000000000044d72b : ret 0x4389
0x0000000000445e0f : ret 0x438b
0x00000000004a4008 : ret 0x43e4
0x0000000000485d87 : ret 0x43e8
0x00000000004a49f8 : ret 0x43f0
0x0000000000411413 : ret 0x4401
0x00000000004556b7 : ret 0x440f
0x00000000004647e7 : ret 0x4410
0x000000000047b901 : ret 0x448d
0x0000000000489c05 : ret 0x44c6
0x0000000000462562 : ret 0x4502
0x00000000004b2f48 : ret 0x4572
0x000000000046d998 : ret 0x4574
0x00000000004630a8 : ret 0x45f6
0x00000000004b97e4 : ret 0x474c
0x000000000049da63 : ret 0x4776
0x000000000045a523 : ret 0x47e9
0x00000000004487d5 : ret 0x4801
0x000000000042c7e1 : ret 0x4802
0x000000000042c8bd : ret 0x4803
0x00000000004042f0 : ret 0x4804
0x000000000042c88d : ret 0x4805
0x000000000042c875 : ret 0x4806
0x00000000004238a3 : ret 0x4808
0x000000000044f204 : ret 0x4809
0x00000000004589e4 : ret 0x480f
0x000000000041b0c9 : ret 0x4810
0x000000000044cb70 : ret 0x4811
0x0000000000453162 : ret 0x481e
0x000000000041b00b : ret 0x4820
0x000000000045bc2c : ret 0x482d
0x000000000044471f : ret 0x4830
0x0000000000401352 : ret 0x4838
0x000000000042e476 : ret 0x4840
0x00000000004239b8 : ret 0x48c3
0x000000000046751d : ret 0x48d
0x0000000000473bf4 : ret 0x48e9
0x00000000004bafa6 : ret 0x48f
0x0000000000402ffe : ret 0x4901
0x000000000044bf53 : ret 0x4904
0x000000000042cafe : ret 0x4906
0x0000000000457268 : ret 0x4908
0x000000000046a2b9 : ret 0x4909
0x0000000000422c12 : ret 0x4910
0x0000000000420e86 : ret 0x4920
0x000000000041fe00 : ret 0x4930
0x000000000047e804 : ret 0x4976
0x0000000000420b62 : ret 0x4a25
0x00000000004bc699 : ret 0x4b
0x000000000046cac2 : ret 0x4b30
0x0000000000405975 : ret 0x4c01
0x000000000042ca41 : ret 0x4c02
0x000000000044ca5f : ret 0x4c04
0x0000000000485d35 : ret 0x4c08
0x0000000000452856 : ret 0x4c40
0x0000000000448a20 : ret 0x4c88
0x0000000000446e31 : ret 0x4d02
0x00000000004baa07 : ret 0x4e27
0x0000000000469ad7 : ret 0x4eb
0x0000000000444bd8 : ret 0x4ee9
0x0000000000445a2e : ret 0x4f74
0x000000000042fbc4 : ret 0x5173
0x000000000044f003 : ret 0x527e
0x0000000000462e28 : ret 0x5389
0x000000000045b11b : ret 0x53e9
0x000000000047bb9d : ret 0x5438
0x0000000000491a56 : ret 0x5488
0x000000000044d01a : ret 0x5489
0x000000000045ad73 : ret 0x548b
0x00000000004b8c6c : ret 0x5508
0x000000000040557f : ret 0x5525
0x00000000004212f2 : ret 0x575
0x000000000046dcfb : ret 0x576
0x00000000004baf38 : ret 0x5803
0x000000000040e7eb : ret 0x589
0x00000000004b8940 : ret 0x591c
0x00000000004b96a7 : ret 0x5ae4
0x0000000000446c4f : ret 0x5b00
0x0000000000449d11 : ret 0x5c77
0x000000000044f4ed : ret 0x5de8
0x00000000004bb3d2 : ret 0x62c1
0x000000000045c5e3 : ret 0x6348
0x0000000000411a32 : ret 0x6349
0x000000000047f2b7 : ret 0x63e8
0x000000000049a8b0 : ret 0x65e9
0x0000000000489fd7 : ret 0x6610
0x0000000000426102 : ret 0x6620
0x0000000000423a05 : ret 0x66c3
0x00000000004748ce : ret 0x674
0x00000000004b895f : ret 0x67b2
0x000000000047d91d : ret 0x6876
0x000000000049dc62 : ret 0x68e8
0x000000000043ee5d : ret 0x6b8
0x000000000049b957 : ret 0x6be9
0x00000000004bb561 : ret 0x6f9
0x000000000045981b : ret 0x6fe8
0x0000000000432b5e : ret 0x7280
0x00000000004762a9 : ret 0x728d
0x000000000043e2fb : ret 0x72e9
0x0000000000415641 : ret 0x7401
0x000000000041ea0f : ret 0x7402
0x000000000041bbc5 : ret 0x7404
0x0000000000410f33 : ret 0x7408
0x0000000000400edc : ret 0x7420
0x0000000000458db2 : ret 0x7450
0x000000000043be19 : ret 0x7501
0x000000000043be26 : ret 0x7502
0x00000000004268b9 : ret 0x7504
0x000000000043d254 : ret 0x7508
0x000000000043bdeb : ret 0x7510
0x00000000004268b4 : ret 0x7518
0x000000000043bdf8 : ret 0x7520
0x000000000043be05 : ret 0x7540
0x0000000000473241 : ret 0x758b
0x000000000042eab2 : ret 0x7677
0x0000000000446432 : ret 0x774
0x0000000000478dea : ret 0x777
0x000000000049b74b : ret 0x77e9
0x000000000041b4fa : ret 0x7ae9
0x0000000000446f7a : ret 0x7b8
0x0000000000426092 : ret 0x7e20
0x000000000042180c : ret 0x7f10
0x0000000000461a66 : ret 0x7f3c
0x0000000000432e7e : ret 0x80
0x00000000004229e9 : ret 0x8000
0x0000000000469adc : ret 0x8001
0x00000000004729af : ret 0x8005
0x000000000047d7d6 : ret 0x8008
0x000000000046a4c2 : ret 0x8010
0x0000000000473aee : ret 0x8018
0x00000000004703b8 : ret 0x804
0x000000000046c700 : ret 0x8116
0x000000000048728b : ret 0x8148
0x000000000045ad34 : ret 0x8166
0x0000000000419fcc : ret 0x820f
0x00000000004040d0 : ret 0x8301
0x000000000047dd11 : ret 0x8308
0x000000000042e680 : ret 0x830f
0x000000000043e1c0 : ret 0x8341
0x00000000004213b5 : ret 0x8348
0x000000000041b5c3 : ret 0x8349
0x000000000047fe79 : ret 0x8364
0x000000000043f487 : ret 0x83e8
0x0000000000411380 : ret 0x840
0x000000000046b2e2 : ret 0x8401
0x0000000000417849 : ret 0x840f
0x000000000043e260 : ret 0x8444
0x000000000049b8c7 : ret 0x8445
0x000000000045c5d5 : ret 0x8504
0x0000000000462cb6 : ret 0x8508
0x0000000000412f42 : ret 0x850f
0x00000000004685e5 : ret 0x8545
0x00000000004192e2 : ret 0x8548
0x000000000044f015 : ret 0x854d
0x0000000000459bac : ret 0x858b
0x000000000045744d : ret 0x85c6
0x000000000045549a : ret 0x85c7
0x000000000049ab48 : ret 0x85e9
0x0000000000400c9e : ret 0x860f
0x000000000044f965 : ret 0x870f
0x00000000004b827e : ret 0x871e
0x0000000000461a6d : ret 0x875
0x00000000004261a5 : ret 0x876
0x0000000000489c00 : ret 0x87e
0x000000000044e9fa : ret 0x87e9
0x000000000047e5c4 : ret 0x87f6
0x0000000000447f61 : ret 0x8804
0x000000000045e2a2 : ret 0x880f
0x000000000044eeb7 : ret 0x8840
0x0000000000447362 : ret 0x8901
0x0000000000470d7e : ret 0x8908
0x0000000000400d46 : ret 0x890f
0x000000000044d11f : ret 0x8941
0x0000000000400669 : ret 0x8944
0x00000000004113fb : ret 0x8945
0x0000000000449dd1 : ret 0x8948
0x00000000004101ad : ret 0x8949
0x0000000000403b37 : ret 0x894c
0x0000000000445f2f : ret 0x894d
0x00000000004796bb : ret 0x894e
0x000000000048388c : ret 0x89e9
0x000000000047841e : ret 0x8b
0x00000000004627aa : ret 0x8b04
0x000000000046afd3 : ret 0x8b05
0x00000000004baaae : ret 0x8b36
0x000000000044f28a : ret 0x8b41
0x00000000004014c4 : ret 0x8b48
0x0000000000410b76 : ret 0x8b49
0x000000000047963e : ret 0x8b4a
0x00000000004116d0 : ret 0x8b4c
0x000000000046df53 : ret 0x8be9
0x00000000004806b5 : ret 0x8d01
0x000000000045277a : ret 0x8d04
0x00000000004598e0 : ret 0x8d0f
0x000000000040d38f : ret 0x8d48
0x00000000004032e6 : ret 0x8d49
0x0000000000465e28 : ret 0x8d4a
0x0000000000411686 : ret 0x8d4c
0x000000000041c8ac : ret 0x8d4e
0x00000000004106c1 : ret 0x8e0f
0x00000000004014ee : ret 0x900
0x0000000000421435 : ret 0x90c3
0x000000000041265b : ret 0x938b
0x0000000000485c40 : ret 0x940f
0x000000000048a856 : ret 0x941
0x0000000000465b48 : ret 0x94c
0x000000000047aeef : ret 0x950f
0x0000000000455bf9 : ret 0x9522
0x0000000000403978 : ret 0x953d
0x00000000004b98d3 : ret 0x9576
0x00000000004819f0 : ret 0x9589
0x000000000041b511 : ret 0x976
0x0000000000488d89 : ret 0x9e74
0x00000000004105d8 : ret 0x9e9
0x0000000000473ff9 : ret 0x9f75
0x00000000004adf00 : ret 0xa
0x00000000004919c0 : ret 0xa074
0x00000000004b95c3 : ret 0xa514
0x00000000004b9a47 : ret 0xac65
0x000000000049df1e : ret 0xace8
0x00000000004ba404 : ret 0xacfc
0x00000000004598fc : ret 0xaee8
0x000000000043e2e6 : ret 0xaf0f
0x000000000041beaf : ret 0xb48b
0x00000000004028b9 : ret 0xb60f
0x000000000046839b : ret 0xb70f
0x000000000043ed90 : ret 0xb8
0x000000000045ff39 : ret 0xb848
0x000000000044f055 : ret 0xb87f
0x0000000000426787 : ret 0xb8c3
0x00000000004672d2 : ret 0xb8e9
0x0000000000484ad2 : ret 0xb908
0x00000000004b990e : ret 0xb9b9
0x000000000045641d : ret 0xbb41
0x0000000000478f12 : ret 0xbc41
0x000000000049bce5 : ret 0xbc80
0x00000000004609ee : ret 0xbd83
0x0000000000484cc0 : ret 0xbe08
0x00000000004b9664 : ret 0xbe57
0x000000000045ae08 : ret 0xbf07
0x00000000004840a1 : ret 0xbf08
0x00000000004228a9 : ret 0xc000
0x000000000048f05e : ret 0xc001
0x000000000048f012 : ret 0xc002
0x0000000000412e83 : ret 0xc031
0x000000000046b840 : ret 0xc084
0x0000000000425f50 : ret 0xc085
0x000000000040e976 : ret 0xc148
0x000000000046743d : ret 0xc269
0x000000000045b2d6 : ret 0xc283
0x000000000042fa94 : ret 0xc2b2
0x000000000043e501 : ret 0xc35b
0x000000000043f547 : ret 0xc3e8
0x00000000004b7e02 : ret 0xc4c3
0x00000000004b9218 : ret 0xc4ff
0x0000000000432bf8 : ret 0xc580
0x000000000049b8fd : ret 0xc5e9
0x00000000004828c0 : ret 0xc6e9
0x0000000000421331 : ret 0xc6eb
0x00000000004382f0 : ret 0xc748
0x000000000041c15c : ret 0xc789
0x00000000004150ec : ret 0xc883
0x000000000047d423 : ret 0xc931
0x0000000000443109 : ret 0xc985
0x000000000046900e : ret 0xc9be
0x0000000000423871 : ret 0xc9ff
0x000000000048144d : ret 0xcb73
0x00000000004b8caa : ret 0xcca7
0x00000000004bad8d : ret 0xcd11
0x000000000041d541 : ret 0xce31
0x0000000000404d84 : ret 0xce80
0x0000000000480d25 : ret 0xce83
0x0000000000418d8b : ret 0xcf31
0x00000000004ae300 : ret 0xd
0x000000000047bd2a : ret 0xd021
0x00000000004425bf : ret 0xd029
0x0000000000432a6c : ret 0xd073
0x000000000040558e : ret 0xd089
0x0000000000464425 : ret 0xd108
0x0000000000486c59 : ret 0xd129
0x000000000049a516 : ret 0xd284
0x0000000000485b57 : ret 0xd309
0x000000000048916b : ret 0xd348
0x000000000043f737 : ret 0xd3e8
0x000000000045b2f3 : ret 0xd529
0x0000000000486cd0 : ret 0xd629
0x000000000046718d : ret 0xd721
0x0000000000486be2 : ret 0xd729
0x000000000043e2eb : ret 0xd889
0x00000000004ba825 : ret 0xd8f
0x0000000000477aa3 : ret 0xd8f7
0x0000000000400806 : ret 0xd975
0x000000000047baf0 : ret 0xda38
0x000000000040f8e5 : ret 0xdaf7
0x0000000000448491 : ret 0xdb85
0x00000000004ba906 : ret 0xdcd9
0x000000000046aa20 : ret 0xdd72
0x00000000004b9882 : ret 0xde5d
0x0000000000410cb5 : ret 0xde74
0x000000000049b4c2 : ret 0xde89
0x00000000004b8611 : ret 0xde9e
0x00000000004870a8 : ret 0xdee9
0x0000000000422769 : ret 0xe000
0x000000000043bda9 : ret 0xe074
0x0000000000446f6d : ret 0xe077
0x0000000000443da9 : ret 0xe083
0x000000000044b4f3 : ret 0xe183
0x0000000000444322 : ret 0xe1eb
0x00000000004473fb : ret 0xe277
0x000000000040dbcc : ret 0xe281
0x0000000000400e4d : ret 0xe283
0x00000000004664f0 : ret 0xe575
0x0000000000417827 : ret 0xe675
0x0000000000457e23 : ret 0xe680
0x00000000004baa26 : ret 0xe71f
0x0000000000401348 : ret 0xe72
0x0000000000452cb0 : ret 0xe783
0x000000000046e1b5 : ret 0xe874
0x0000000000459795 : ret 0xe87f
0x0000000000455032 : ret 0xe883
0x000000000046e59e : ret 0xe8c0
0x00000000004007be : ret 0xe8c1
0x00000000004256a3 : ret 0xe901
0x0000000000402b82 : ret 0xe902
0x0000000000449ed9 : ret 0xe904
0x000000000047b721 : ret 0xe907
0x0000000000423906 : ret 0xe908
0x0000000000429526 : ret 0xe910
0x0000000000453259 : ret 0xe920
0x000000000041fea3 : ret 0xe96e
0x00000000004b8d87 : ret 0xe970
0x0000000000488ccc : ret 0xe974
0x000000000042004f : ret 0xe977
0x000000000043e48a : ret 0xea81
0x0000000000457da7 : ret 0xeac0
0x0000000000400d21 : ret 0xeac1
0x0000000000422c36 : ret 0xeb10
0x000000000041fe6f : ret 0xeb5b
0x000000000040e5ea : ret 0xeb72
0x0000000000402218 : ret 0xebe8
0x00000000004bb538 : ret 0xec2
0x000000000047f659 : ret 0xec75
0x00000000004708e8 : ret 0xed75
0x000000000044b04e : ret 0xed85
0x0000000000445eaf : ret 0xee75
0x00000000004bb1da : ret 0xef32
0x00000000004188b6 : ret 0xef75
0x0000000000443c21 : ret 0xefc1
0x0000000000422629 : ret 0xf000
0x000000000040d558 : ret 0xf001
0x000000000040286a : ret 0xf01
0x000000000041a296 : ret 0xf02
0x000000000041bb40 : ret 0xf04
0x000000000045d42e : ret 0xf08
0x000000000045a2b7 : ret 0xf0e9
0x000000000046b446 : ret 0xf0eb
0x000000000041b283 : ret 0xf0f
0x00000000004217c2 : ret 0xf10
0x00000000004621d5 : ret 0xf229
0x000000000044fee6 : ret 0xf301
0x000000000045d46a : ret 0xf40
0x000000000046856d : ret 0xf43
0x000000000049b971 : ret 0xf45
0x000000000046444a : ret 0xf48
0x000000000045a874 : ret 0xf4c
0x0000000000403356 : ret 0xf4e8
0x0000000000402b8b : ret 0xf4e9
0x0000000000443d8c : ret 0xf631
0x00000000004215d9 : ret 0xf66
0x000000000043e0ac : ret 0xf685
0x000000000041be93 : ret 0xf710
0x000000000047a125 : ret 0xf74
0x0000000000426c2c : ret 0xf748
0x0000000000465f90 : ret 0xf749
0x00000000004a071a : ret 0xf7d9
0x000000000049ec1a : ret 0xf7f4
0x0000000000432b1e : ret 0xf80
0x00000000004224e9 : ret 0xf800
0x00000000004b84f0 : ret 0xf869
0x00000000004a35d8 : ret 0xf8bd
0x00000000004a35dc : ret 0xf8be
0x00000000004a3980 : ret 0xf91d
0x000000000040450a : ret 0xf929
0x0000000000459cb9 : ret 0xfa80
0x000000000048ac66 : ret 0xfa81
0x00000000004055a2 : ret 0xfac1
0x000000000046e47a : ret 0xfaf8
0x000000000046e21a : ret 0xfafe
0x000000000046dd6a : ret 0xfb5b
0x00000000004223a9 : ret 0xfc00
0x000000000048c1a6 : ret 0xfc01
0x000000000048c15a : ret 0xfc02
0x000000000043f5da : ret 0xfc3
0x00000000004752ea : ret 0xfcdb
0x0000000000447040 : ret 0xfd83
0x000000000044211a : ret 0xfdbf
0x00000000004bdf3c : ret 0xfdc9
0x0000000000402840 : ret 0xfdf
0x0000000000422269 : ret 0xfe00
0x000000000043e1e3 : ret 0xfe83
0x0000000000432a3e : ret 0xfec5
0x0000000000422129 : ret 0xff00
0x00000000004918fe : ret 0xff2
0x000000000042e49a : ret 0xff3
0x0000000000421fe9 : ret 0xff80
0x0000000000488fa6 : ret 0xff81
0x0000000000488f5a : ret 0xff82
0x000000000040c2ca : ret 0xff99
0x0000000000487240 : ret 0xff9f
0x0000000000452842 : ret 0xffb0
0x0000000000400540 : ret 0xffb8
0x000000000048ef47 : ret 0xffbf
0x0000000000421ea9 : ret 0xffc0
0x00000000004003e6 : ret 0xffd0
0x000000000042116e : ret 0xffdf
0x000000000044f6a8 : ret 0xffe0
0x000000000040867a : ret 0xffe2
0x000000000049e54a : ret 0xffe7
0x00000000004417da : ret 0xffe8
0x00000000004416da : ret 0xffe9
0x0000000000459f5c : ret 0xffee
0x000000000040ee6c : ret 0xffef
0x000000000040db1e : ret 0xfff0
0x00000000004c42c9 : ret 0xfff3
0x0000000000421ae9 : ret 0xfff8
0x000000000041c6c1 : ret 0xfff9
0x000000000043f199 : ret 0xfffb
0x00000000004219a9 : ret 0xfffc
0x0000000000441e01 : ret 0xfffd
0x0000000000405338 : ret 0xfffe
0x000000000041081a : ret 0xffff
0x00000000004100e1 : ret 1
0x0000000000419e5a : ret 2
0x000000000042f852 : ret 3
0x0000000000426259 : ret 4
0x000000000041a7a6 : ret 5
0x0000000000418f00 : ret 6
0x00000000004b23a4 : ret 7
0x000000000040a47e : ret 8
0x000000000043c85a : ret 9
0x000000000042c48a : retf
0x0000000000404a07 : retf 0
0x0000000000432abd : retf 0x1073
0x00000000004470c0 : retf 0x1089
0x00000000004ae860 : retf 0x11
0x000000000048003d : retf 0x114d
0x000000000040b412 : retf 0x12c
0x0000000000448e5b : retf 0x1308
0x000000000040ab12 : retf 0x135
0x000000000041d600 : retf 0x1373
0x00000000004490a4 : retf 0x148
0x0000000000446ec4 : retf 0x1489
0x00000000004489e7 : retf 0x149
0x0000000000432d57 : retf 0x14c
0x0000000000423c52 : retf 0x16
0x000000000044910e : retf 0x1608
0x000000000047a52d : retf 0x194d
0x00000000004428e2 : retf 0x19b8
0x0000000000403c12 : retf 0x1a4
0x0000000000418e48 : retf 0x1b73
0x000000000047d7c8 : retf 0x1b8
0x000000000048139b : retf 0x1ba
0x00000000004b0408 : retf 0x1d4
0x00000000004b0ba8 : retf 0x1d5
0x0000000000429447 : retf 0x1f0f
0x0000000000442b42 : retf 0x1f8
0x000000000041923a : retf 0x2173
0x00000000004073a6 : retf 0x22
0x000000000041d8b9 : retf 0x2273
0x000000000047f653 : retf 0x2348
0x000000000047ff87 : retf 0x24
0x0000000000488569 : retf 0x2445
0x00000000004707b4 : retf 0x25
0x00000000004725ba : retf 0x2579
0x000000000041ca92 : retf 0x25e
0x0000000000468dde : retf 0x262c
0x00000000004687da : retf 0x2640
0x000000000043fe8d : retf 0x28
0x00000000004301b9 : retf 0x280f
0x00000000004442e2 : retf 0x288f
0x0000000000490d1f : retf 0x2941
0x0000000000410f07 : retf 0x2948
0x00000000004101fa : retf 0x294c
0x000000000041dd19 : retf 0x2a
0x00000000004b96fc : retf 0x2a91
0x000000000041ff22 : retf 0x2aa8
0x00000000004183a2 : retf 0x2b23
0x000000000041a8f2 : retf 0x2b29
0x00000000004144d5 : retf 0x2b80
0x0000000000400784 : retf 0x2c
0x0000000000405322 : retf 0x2c6d
0x00000000004b8b7a : retf 0x2c90
0x000000000046a1c1 : retf 0x2d75
0x000000000040eb55 : retf 0x2e66
0x000000000044ccae : retf 0x2f72
0x0000000000469d8b : retf 0x2f74
0x000000000045acf0 : retf 0x30be
0x000000000043ffef : retf 0x3140
0x00000000004345fa : retf 0x3148
0x00000000004ba965 : retf 0x3159
0x00000000004ba9cd : retf 0x32dd
0x00000000004af908 : retf 0x33
0x00000000004b9283 : retf 0x33e6
0x0000000000443587 : retf 0x348
0x0000000000459908 : retf 0x349
0x00000000004434fa : retf 0x34c
0x00000000004b97b1 : retf 0x3617
0x00000000004345d6 : retf 0x377
0x0000000000449677 : retf 0x3948
0x0000000000470553 : retf 0x3980
0x0000000000417f72 : retf 0x3a2
0x00000000004bdd69 : retf 0x3b9a
0x000000000045bfe5 : retf 0x3be9
0x00000000004badc6 : retf 0x3d8a
0x00000000004b865b : retf 0x3ec
0x000000000041dcfc : retf 0x41
0x0000000000470a44 : retf 0x4108
0x00000000004a3531 : retf 0x42
0x000000000042e54c : retf 0x4266
0x000000000047f44a : retf 0x42f6
0x000000000042919a : retf 0x4466
0x0000000000488ab0 : retf 0x4489
0x0000000000404de5 : retf 0x44f6
0x0000000000478e93 : retf 0x45f8
0x000000000047d0a4 : retf 0x47
0x0000000000416555 : retf 0x476
0x000000000041c37f : retf 0x4801
0x000000000046d4bf : retf 0x4802
0x000000000040d9fb : retf 0x4803
0x000000000040d9ab : retf 0x4804
0x000000000040d85f : retf 0x4805
0x000000000040d9d3 : retf 0x4806
0x000000000040da23 : retf 0x4807
0x000000000040d938 : retf 0x4808
0x000000000040d8c3 : retf 0x4809
0x000000000040dac3 : retf 0x480a
0x000000000040da97 : retf 0x480b
0x000000000040d905 : retf 0x480c
0x000000000040d893 : retf 0x480d
0x000000000049df63 : retf 0x4810
0x0000000000425ffe : retf 0x4890
0x000000000047a4a1 : retf 0x48f8
0x000000000047e403 : retf 0x4b
0x0000000000442d3b : retf 0x4b55
0x000000000041c4c0 : retf 0x4b83
0x00000000004bc5a0 : retf 0x4bbb
0x000000000047ad0e : retf 0x4bc7
0x000000000047be7b : retf 0x4c01
0x000000000041b6d7 : retf 0x4c04
0x000000000048630f : retf 0x4c8b
0x0000000000418262 : retf 0x4d01
0x0000000000413d9d : retf 0x4d80
0x000000000047a4f8 : retf 0x4de8
0x0000000000478d91 : retf 0x4df0
0x000000000047a51c : retf 0x4df8
0x00000000004639ad : retf 0x5077
0x0000000000447ace : retf 0x5355
0x00000000004919ba : retf 0x5489
0x000000000044cc88 : retf 0x5576
0x000000000040ea03 : retf 0x6411
0x00000000004302a3 : retf 0x6601
0x00000000004303f3 : retf 0x6602
0x0000000000430543 : retf 0x6603
0x0000000000430693 : retf 0x6604
0x00000000004307e3 : retf 0x6605
0x0000000000430933 : retf 0x6606
0x0000000000430a83 : retf 0x6607
0x0000000000430bd3 : retf 0x6608
0x0000000000430d23 : retf 0x6609
0x0000000000430e73 : retf 0x660a
0x0000000000430fc3 : retf 0x660b
0x0000000000431113 : retf 0x660c
0x0000000000431263 : retf 0x660d
0x00000000004313b3 : retf 0x660e
0x0000000000431503 : retf 0x660f
0x00000000004345f5 : retf 0x676
0x00000000004bace5 : retf 0x67ca
0x0000000000467478 : retf 0x694d
0x0000000000432bf3 : retf 0x6a77
0x000000000046ad32 : retf 0x6b8
0x00000000004882e5 : retf 0x6c
0x00000000004b8ce2 : retf 0x6ee8
0x000000000045f342 : retf 0x72
0x00000000004baba6 : retf 0x7272
0x0000000000478672 : retf 0x76
0x00000000004ba37f : retf 0x76a5
0x000000000047a466 : retf 0x77f
0x00000000004b9202 : retf 0x79f5
0x000000000046a1e6 : retf 0x7a80
0x0000000000462b59 : retf 0x7a8b
0x00000000004345de : retf 0x8148
0x00000000004324ad : retf 0x820f
0x00000000004196fc : retf 0x8304
0x0000000000432d71 : retf 0x830f
0x000000000048b641 : retf 0x8341
0x000000000041cb39 : retf 0x8348
0x0000000000422d85 : retf 0x8349
0x0000000000466332 : retf 0x840f
0x0000000000448161 : retf 0x8440
0x000000000048a695 : retf 0x8445
0x00000000004b9af0 : retf 0x8481
0x000000000040f252 : retf 0x850f
0x00000000004020aa : retf 0x8545
0x000000000040e151 : retf 0x8548
0x0000000000432dac : retf 0x870f
0x0000000000478cb1 : retf 0x877
0x000000000047b410 : retf 0x880f
0x000000000047cad8 : retf 0x8820
0x0000000000448e13 : retf 0x8880
0x0000000000420ab2 : retf 0x8902
0x0000000000410f3f : retf 0x8920
0x000000000046a2ad : retf 0x8941
0x0000000000486fca : retf 0x8945
0x0000000000402a82 : retf 0x8948
0x0000000000405255 : retf 0x8949
0x000000000040eec4 : retf 0x894c
0x0000000000446d39 : retf 0x894d
0x000000000040448a : retf 0x8b48
0x000000000040e325 : retf 0x8b49
0x0000000000409bd5 : retf 0x8b4c
0x000000000045a9e2 : retf 0x8d
0x00000000004683dd : retf 0x8d0f
0x00000000004674dc : retf 0x8d41
0x0000000000400499 : retf 0x8d48
0x000000000041b56a : retf 0x8d49
0x00000000004237c4 : retf 0x8d4a
0x000000000043b32d : retf 0x8d4c
0x0000000000487009 : retf 0x8d4f
0x0000000000481628 : retf 0x8d89
0x000000000044943e : retf 0x8e0f
0x0000000000422b43 : retf 0x9066
0x00000000004ba44e : retf 0x93a2
0x0000000000491a2a : retf 0x948
0x000000000048af2a : retf 0x950f
0x000000000045c5f0 : retf 0x97e
0x00000000004ba7eb : retf 0x99e0
0x00000000004bab5a : retf 0x9d7d
0x000000000047bd52 : retf 0x9e0f
0x0000000000471a8c : retf 0xa
0x00000000004bb465 : retf 0xa020
0x00000000004b89c5 : retf 0xa1eb
0x00000000004baa4b : retf 0xa2fe
0x000000000040f30a : retf 0xa375
0x00000000004bab1c : retf 0xab0d
0x00000000004bb06e : retf 0xae32
0x000000000042d762 : retf 0xb
0x0000000000449c75 : retf 0xb0e9
0x00000000004b9869 : retf 0xb51a
0x0000000000426482 : retf 0xb60f
0x000000000046752f : retf 0xb70f
0x000000000046fc32 : retf 0xb903
0x000000000049dba2 : retf 0xb9e9
0x000000000047840e : retf 0xba
0x00000000004bab73 : retf 0xbb9a
0x000000000041050a : retf 0xbd75
0x00000000004babbd : retf 0xbf4b
0x000000000046259e : retf 0xc001
0x0000000000413411 : retf 0xc031
0x00000000004c62de : retf 0xc0a
0x00000000004ba83d : retf 0xc0fe
0x000000000040e167 : retf 0xc148
0x0000000000465b0e : retf 0xc149
0x0000000000432c2f : retf 0xc1c4
0x000000000045a502 : retf 0xc3
0x0000000000463234 : retf 0xc748
0x000000000048b461 : retf 0xc77
0x0000000000403d11 : retf 0xc80f
0x000000000040054a : retf 0xc883
0x0000000000403a1d : retf 0xc90f
0x000000000042f634 : retf 0xcab2
0x00000000004b7e0a : retf 0xcccb
0x0000000000409c41 : retf 0xd
0x0000000000456acf : retf 0xd039
0x0000000000489883 : retf 0xd0eb
0x0000000000458d82 : retf 0xd189
0x00000000004b9626 : retf 0xd1cb
0x000000000043e5d0 : retf 0xd231
0x0000000000447477 : retf 0xd285
0x00000000004bad37 : retf 0xd39
0x000000000049d644 : retf 0xd3eb
0x000000000047bd37 : retf 0xd989
0x000000000040dc4d : retf 0xdaf7
0x000000000049d37f : retf 0xdb77
0x00000000004bb2c3 : retf 0xde4f
0x000000000041cee6 : retf 0xde9
0x00000000004059be : retf 0xdf75
0x00000000004b98f3 : retf 0xdf7f
0x000000000041657a : retf 0xdfeb
0x00000000004ae460 : retf 0xe
0x0000000000448df3 : retf 0xe083
0x00000000004c13d3 : retf 0xe0a
0x0000000000456a26 : retf 0xe0c1
0x00000000004b939e : retf 0xe152
0x00000000004494bc : retf 0xe281
0x000000000049b45b : retf 0xe283
0x00000000004729a7 : retf 0xe2c1
0x00000000004268a9 : retf 0xe475
0x00000000004b997c : retf 0xe496
0x0000000000453757 : retf 0xe677
0x00000000004b92e6 : retf 0xe72e
0x00000000004b8973 : retf 0xe80
0x0000000000480d0b : retf 0xe873
0x0000000000470625 : retf 0xe875
0x0000000000443234 : retf 0xe901
0x0000000000443204 : retf 0xe902
0x00000000004431f4 : retf 0xe904
0x00000000004431e4 : retf 0xe908
0x0000000000413de8 : retf 0xe980
0x00000000004ba92c : retf 0xea91
0x00000000004441bb : retf 0xeac0
0x000000000043e539 : retf 0xeac1
0x0000000000421781 : retf 0xead3
0x0000000000468261 : retf 0xeaf7
0x00000000004708d0 : retf 0xeb08
0x00000000004b8a4d : retf 0xeb83
0x00000000004bb241 : retf 0xebbf
0x000000000045c70c : retf 0xebff
0x000000000040b2da : retf 0xf
0x0000000000432fec : retf 0xf01
0x000000000043316c : retf 0xf02
0x000000000047bd32 : retf 0xf029
0x00000000004332ec : retf 0xf03
0x000000000043346c : retf 0xf04
0x00000000004335ec : retf 0xf05
0x000000000043376c : retf 0xf06
0x00000000004338ec : retf 0xf07
0x0000000000433a6c : retf 0xf08
0x0000000000433bec : retf 0xf09
0x0000000000433d6c : retf 0xf0a
0x0000000000433eec : retf 0xf0b
0x000000000043406c : retf 0xf0c
0x00000000004341ec : retf 0xf0d
0x000000000043436c : retf 0xf0e
0x00000000004344ec : retf 0xf0f
0x00000000004806ab : retf 0xf189
0x000000000042ad6d : retf 0xf1c5
0x000000000047bab2 : retf 0xf40
0x00000000004258c8 : retf 0xf41
0x000000000041ed03 : retf 0xf44
0x0000000000423b10 : retf 0xf48
0x000000000041d1a9 : retf 0xf4c
0x00000000004ba888 : retf 0xf64
0x0000000000416bd6 : retf 0xf66
0x000000000048e7f2 : retf 0xf72f
0x000000000048b30d : retf 0xf741
0x000000000042e69a : retf 0xf748
0x000000000048b182 : retf 0xf751
0x00000000004a0712 : retf 0xf7d9
0x0000000000475bf2 : retf 0xf8bb
0x00000000004740f2 : retf 0xf8d6
0x00000000004a3c74 : retf 0xf915
0x00000000004a3aac : retf 0xf918
0x000000000042ae3f : retf 0xf9c5
0x0000000000457fcd : retf 0xfac1
0x0000000000465722 : retf 0xfc11
0x000000000047a9c2 : retf 0xfc7f
0x0000000000455412 : retf 0xfc8c
0x0000000000452f12 : retf 0xfcb1
0x0000000000444882 : retf 0xfe7a
0x0000000000434e51 : retf 0xff2
0x000000000040f5f2 : retf 0xff21
0x000000000042eacb : retf 0xff3
0x000000000041718f : retf 0xff31
0x0000000000400e90 : retf 0xff83
0x000000000040cfc2 : retf 0xff8c
0x0000000000418122 : retf 0xff97
0x000000000041d412 : retf 0xffa1
0x000000000040abc2 : retf 0xffb0
0x0000000000462915 : retf 0xffb8
0x0000000000411bb2 : retf 0xffc0
0x00000000004091c2 : retf 0xffca
0x00000000004616b2 : retf 0xffe5
0x0000000000451511 : retf 0xffe6
0x000000000040b569 : retf 0xffed
0x0000000000404c7c : retf 0xfff0
0x000000000048ba6c : retf 0xfff2
0x00000000004c1021 : retf 0xfff5
0x000000000040b337 : retf 0xfff7
0x0000000000443cfc : retf 0xfff8
0x00000000004812fc : retf 0xfff9
0x00000000004539a2 : retf 0xfffa
0x0000000000473941 : retf 0xfffb
0x000000000043f091 : retf 0xfffc
0x00000000004bdf41 : retf 0xfffd
0x0000000000410743 : retf 0xfffe
0x00000000004091a8 : retf 0xffff
0x000000000041d20a : retf 1
0x0000000000415ef3 : retf 2
0x000000000044b872 : retf 3
0x0000000000402caf : retf 4
0x0000000000419b3a : retf 5
0x000000000044141a : retf 6
0x00000000004b23b4 : retf 7
0x000000000040fdb3 : retf 8
0x000000000042e7eb : retf 9
0x000000000043d975 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000043e5c5 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x0000000000466feb : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000416627 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000477aae : rol bl, 1 ; mov eax, 1 ; ret
0x00000000004262ed : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000042e472 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004658a2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000041f08f : rol byte ptr [rax + 0x755f067b], 1 ; retf 0x8948
0x00000000004b1da0 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000447ce8 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000048a0a6 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000457bec : rol byte ptr [rax - 0x79f0f606], 1 ; retf 0
0x00000000004606f5 : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000042e9bd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049c3a6 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000044fa4b : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000047aa51 : rol byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000042ce82 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004822a1 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000046b211 : rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b208 ; ret
0x0000000000478b2b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000442e76 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000416a78 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x0000000000466862 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004729a4 : rol byte ptr [rbx], 0x89 ; retf 0xe2c1
0x00000000004a3368 : rol byte ptr [rbx], 0xf8 ; jmp rax
0x00000000004033fa : rol byte ptr [rbx], cl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043e481 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000044c64b : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000440a57 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000466842 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000043e296 : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x000000000044e162 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000043e2f7 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e2e2 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000432a6e : rol byte ptr [rcx], 1 ; ret 0x148
0x00000000004668a2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000466852 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000444b86 : rol byte ptr [rdx], 0x50 ; call rbx
0x000000000047ca67 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x0000000000466892 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000049994d : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042af25 : rol ch, 1 ; jns 0x42af04 ; retf 0xead3
0x000000000042b075 : rol ch, 1 ; jns 0x42b054 ; retf 0xead3
0x000000000042b1c5 : rol ch, 1 ; jns 0x42b1a4 ; retf 0xead3
0x000000000042b315 : rol ch, 1 ; jns 0x42b2f4 ; retf 0xead3
0x000000000042b465 : rol ch, 1 ; jns 0x42b444 ; retf 0xead3
0x000000000042b5b5 : rol ch, 1 ; jns 0x42b594 ; retf 0xead3
0x000000000042b705 : rol ch, 1 ; jns 0x42b6e4 ; retf 0xead3
0x000000000042b855 : rol ch, 1 ; jns 0x42b834 ; retf 0xead3
0x000000000042b9a5 : rol ch, 1 ; jns 0x42b984 ; retf 0xead3
0x000000000042baf5 : rol ch, 1 ; jns 0x42bad4 ; retf 0xead3
0x000000000042bc45 : rol ch, 1 ; jns 0x42bc24 ; retf 0xead3
0x000000000042bd95 : rol ch, 1 ; jns 0x42bd74 ; retf 0xead3
0x000000000042bee5 : rol ch, 1 ; jns 0x42bec4 ; retf 0xead3
0x000000000042c035 : rol ch, 1 ; jns 0x42c014 ; retf 0xead3
0x000000000042c185 : rol ch, 1 ; jns 0x42c164 ; retf 0xead3
0x00000000004963d5 : rol ch, 1 ; jns 0x4963b4 ; retf 0xead3
0x0000000000496555 : rol ch, 1 ; jns 0x496534 ; retf 0xead3
0x00000000004966d5 : rol ch, 1 ; jns 0x4966b4 ; retf 0xead3
0x0000000000496855 : rol ch, 1 ; jns 0x496834 ; retf 0xead3
0x00000000004969d5 : rol ch, 1 ; jns 0x4969b4 ; retf 0xead3
0x0000000000496b55 : rol ch, 1 ; jns 0x496b34 ; retf 0xead3
0x0000000000496cd5 : rol ch, 1 ; jns 0x496cb4 ; retf 0xead3
0x0000000000496e55 : rol ch, 1 ; jns 0x496e34 ; retf 0xead3
0x0000000000496fd5 : rol ch, 1 ; jns 0x496fb4 ; retf 0xead3
0x0000000000497155 : rol ch, 1 ; jns 0x497134 ; retf 0xead3
0x00000000004972d5 : rol ch, 1 ; jns 0x4972b4 ; retf 0xead3
0x0000000000497455 : rol ch, 1 ; jns 0x497434 ; retf 0xead3
0x00000000004975d5 : rol ch, 1 ; jns 0x4975b4 ; retf 0xead3
0x0000000000497755 : rol ch, 1 ; jns 0x497734 ; retf 0xead3
0x00000000004978d5 : rol ch, 1 ; jns 0x4978b4 ; retf 0xead3
0x00000000004b7e00 : rol cl, 0xc2 ; ret
0x000000000046836f : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004667ec : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000004268a5 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000403d78 : rol dword ptr [rax + 0x7549027a], 1 ; retf
0x00000000004345d0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000467528 : rol dword ptr [rbp + 0x7418dc9], 0x89 ; retf 0xb70f
0x0000000000400593 : rol dword ptr [rbx + rbp*8], 0xcc ; mov qword ptr [rdi], rcx ; ret
0x00000000004c28be : rol dword ptr [rdx + 0xe], 8 ; retf 0
0x000000000046b283 : rol ebx, 0x4c ; mov eax, ecx ; ret
0x00000000004443cd : rol ecx, 0xe1 ; add edx, ebx ; loopne 0x444437 ; pop rbp ; ret
0x00000000004a3618 : rol edx, 0xf8 ; call qword ptr [rcx - 0x3d]
0x000000000047f54c : ror ah, 0x4b ; add bl, ch ; retf 0x1f0f
0x0000000000426172 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x4261b9 ; add rax, rdi ; ret
0x0000000000423b17 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000410aca : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000473b39 : ror byte ptr [rax + 0x29], cl ; ret 0x3949
0x0000000000446f3a : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x00000000004605a4 : ror byte ptr [rax + 0x29], cl ; retf 0xc148
0x000000000049d768 : ror byte ptr [rax + 0x39], 0x1c ; and al, 0xf ; ret 0x8348
0x000000000049cf91 : ror byte ptr [rax + 0x39], 0x34 ; and al, 0xf ; ret 0x8348
0x000000000049cb12 : ror byte ptr [rax + 0x39], 0x4e ; or byte ptr [rdi], cl ; ret 0xfc3
0x000000000046ae8c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46aebf ; ret
0x0000000000442958 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000479526 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000401345 : ror byte ptr [rax + 0x39], 1 ; ret 0xe72
0x000000000049b2a7 : ror byte ptr [rax + 0x63], 0x44 ; test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000047bd2c : ror byte ptr [rax + 0x63], 1 ; ror dword ptr [rax + 1], cl ; retf 0xf029
0x00000000004432c5 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000467cf0 : ror byte ptr [rax + 0xf], 0xaf ; ret
0x000000000044f5ad : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000046dc1e : ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000044f59e : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000047a0ae : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000042cd5c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000426142 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000488d86 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000488cc9 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000423b14 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004ae1a8 : ror byte ptr [rax + rax], 0 ; ret
0x00000000004262e5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000488526 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000046933a : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc37fdc4d
0x000000000045ddda : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000047b6c8 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000426132 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000426162 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000426152 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000041be47 : ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000041c166 : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x0000000000469c5d : ror byte ptr [rax - 0x75], 5 ; ret
0x000000000041a8ee : ror byte ptr [rax - 0x75], 5 ; retf 0x2b29
0x00000000004155fa : ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004793c3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x000000000049d641 : ror byte ptr [rax - 0x77], 0xca ; jmp 0x49d61d
0x0000000000412ab5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000046a155 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x00000000004598f9 : ror byte ptr [rax - 0x77], 1 ; ret 0xaee8
0x000000000040dbc9 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000046ad2f : ror byte ptr [rax - 0x77], 1 ; retf 0x6b8
0x0000000000410b39 : ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x0000000000420d82 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004179dd : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000413501 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413516 ; ret
0x000000000047aee9 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000040fe0f : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046adb0 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000041cce6 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000478858 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000049cfde : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041c8a5 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb10c4
0x0000000000472172 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000472efc : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000456f62 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000047a92a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000490dee : ror byte ptr [rax - 0x7d], cl ; in eax, dx ; add dword ptr [rax + 0x29], ecx ; retf 0x8348
0x000000000047607d : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004494d3 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000469dae : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000448a14 : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000047abda : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004882d4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000046dc8d : ror byte ptr [rbp + rcx*4 + 0x4a], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x000000000049da5c : ror byte ptr [rbp - 0x75], 0x51 ; or byte ptr [rbp + 0x39], cl ; ret 0x4776
0x000000000041b567 : ror byte ptr [rcx + 0x21], 1 ; retf 0x8d49
0x0000000000447d50 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446f49 : ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x00000000004473d0 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000048d2cf : ror byte ptr [rcx + 0x39], cl ; retf
0x0000000000403b64 : ror byte ptr [rcx + rcx*4 - 0x19], 1 ; mov eax, 3 ; syscall
0x000000000046b203 : ror byte ptr [rcx + rcx*4 - 0x38], 0x75 ; ret
0x00000000004652d2 : ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000044f83e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000472625 : ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000043e134 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2c76
0x00000000004116ca : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000426a69 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000044f862 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000049904d : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044285c : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000468398 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000041dedd : ror byte ptr [rdi], 0x84 ; cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046b037 : ror byte ptr [rdi], 0x84 ; push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047f0e6 : ror byte ptr [rdi], 0x84 ; ret
0x00000000004113ae : ror byte ptr [rdi], 0x84 ; retf
0x000000000046f5b7 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000040b566 : ror byte ptr [rdi], 0x84 ; retf 0xffed
0x000000000040b334 : ror byte ptr [rdi], 0x84 ; retf 0xfff7
0x0000000000463e31 : ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x0000000000479abf : ror byte ptr [rdi], 0x84 ; retf 1
0x000000000045ee2f : ror byte ptr [rdi], 0x84 ; retf 3
0x000000000044679c : ror byte ptr [rdi], 0x84 ; test dword ptr [rdx], 0x83480000 ; ret
0x000000000043827a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004382b6 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000459f59 : ror byte ptr [rdi], 0x85 ; ret 0xffee
0x000000000044ba50 : ror byte ptr [rdi], 0x85 ; retf 2
0x000000000044f976 : ror byte ptr [rdi], 0x88 ; retf
0x0000000000457f67 : ror byte ptr [rdi], 0x8a ; ret 8
0x0000000000490ca8 : ror byte ptr [rdi], 0x8f ; ret
0x00000000004425bc : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047c45c : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000047bb9a : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x000000000041b4f7 : ror byte ptr [rdi], 0x94 ; ret 0x7ae9
0x0000000000461a63 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000047aeec : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000485b54 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000047baed : ror byte ptr [rdi], 0x94 ; ret 0xda38
0x000000000040fcfa : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000004672cf : ror byte ptr [rdi], 0x95 ; ret 0xb8e9
0x000000000046718a : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x000000000040f8e2 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x0000000000466dbe : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000040fddc : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x000000000040dbde : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40dbc8 ; ret
0x0000000000419309 : ror byte ptr [rdi], 1 ; test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046d915 : ror byte ptr [rdi], cl ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004843f7 : ror byte ptr [rdi], cl ; test bh, bl ; retf 0xffff
0x000000000047be0f : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x000000000047bf23 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000457f66 : ror byte ptr cs:[rdi], 0x8a ; ret 8
0x00000000004c3e20 : ror cl, 0xfd ; call qword ptr [rbx]
0x00000000004a3844 : ror dh, 0xf8 ; call qword ptr [rax]
0x00000000004a3538 : ror dl, 1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; retf 0x42
0x00000000004a3838 : ror dl, 1 ; clc ; jmp qword ptr [rax]
0x00000000004345db : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000041b564 : ror dword ptr [rax + 0x29], 1 ; ror byte ptr [rcx + 0x21], 1 ; retf 0x8d49
0x00000000004107e3 : ror dword ptr [rax + 0x29], cl ; ret
0x0000000000410b3c : ror dword ptr [rax + 0x29], cl ; retf
0x000000000041cb6a : ror dword ptr [rax + 0x39], 1 ; retf
0x000000000047bd4f : ror dword ptr [rax + 0x39], 1 ; retf 0x9e0f
0x0000000000467ee0 : ror dword ptr [rax + 0xf], 0xaf ; retf
0x000000000040e14d : ror dword ptr [rax + 0xf], 1 ; retf 0x8548
0x000000000047d246 : ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x000000000047bd2f : ror dword ptr [rax + 1], cl ; retf 0xf029
0x00000000004239e4 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000423b09 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000046590a : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000472f4c : ror dword ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000047a3b3 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000045a520 : ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x0000000000432ac2 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047e371 : ror dword ptr [rax - 0x77], cl ; ret
0x0000000000414c7d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x414c77 ; ret
0x0000000000463b8d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x463b87 ; ret
0x000000000040eb68 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000405372 : ror dword ptr [rax - 0x7d], cl ; ret
0x0000000000486fc2 : ror dword ptr [rax], 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x486f9d
0x000000000044f012 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000042c965 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x0000000000441e16 : ror dword ptr [rcx + rcx*4 - 0x11], cl ; call 0x41e0e6
0x0000000000441dfb : ror dword ptr [rcx + rcx*4 - 1], cl ; call 0x41e0e6
0x0000000000441e08 : ror dword ptr [rcx + rcx*4 - 9], cl ; call 0x41e0e6
0x000000000043bda7 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000480a95 : ror dword ptr [rdi], 0x83 ; retf
0x000000000042f228 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f934 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f706 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000042f686 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042f9c4 : ror dword ptr [rdi], 0x85 ; je 0x42f9d4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f4bb : ror dword ptr [rdi], 0x85 ; jno 0x42f4d0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f583 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f200 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046828b : ror dword ptr [rdi], 0x94 ; ret
0x0000000000489168 : ror dword ptr [rdi], 0x95 ; ret 0xd348
0x0000000000414c7c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x414c78 ; ret
0x0000000000463b8c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x463b88 ; ret
0x0000000000446f44 : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x00000000004712df : sahf ; and eax, 0x48c03100 ; add esp, 8 ; ret
0x00000000004a3575 : sahf ; clc ; jmp qword ptr [rax]
0x000000000045ca2a : sahf ; cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004015ec : sahf ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042b92e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479a01 : sahf ; ret 0x148
0x00000000004b8ce5 : sahf ; ret 0x38ae
0x0000000000451160 : sahf ; ret 0x8348
0x000000000047bd54 : sahf ; ret 0xe8c1
0x000000000049b983 : sahf ; ret 0xf45
0x00000000004b981c : sahf ; retf
0x000000000047ff86 : sahf ; retf 0x24
0x0000000000416a7e : sal bh, 0xd8 ; ret
0x000000000043e5d9 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x00000000004229e7 : sal bh, 1 ; ret 0x8000
0x00000000004228a7 : sal bh, 1 ; ret 0xc000
0x0000000000422767 : sal bh, 1 ; ret 0xe000
0x0000000000422627 : sal bh, 1 ; ret 0xf000
0x00000000004224e7 : sal bh, 1 ; ret 0xf800
0x00000000004223a7 : sal bh, 1 ; ret 0xfc00
0x0000000000422267 : sal bh, 1 ; ret 0xfe00
0x0000000000422127 : sal bh, 1 ; ret 0xff00
0x0000000000421fe7 : sal bh, 1 ; ret 0xff80
0x0000000000421ea7 : sal bh, 1 ; ret 0xffc0
0x0000000000421d67 : sal bh, 1 ; ret 0xffe0
0x0000000000421c27 : sal bh, 1 ; ret 0xfff0
0x0000000000421ae7 : sal bh, 1 ; ret 0xfff8
0x00000000004219a7 : sal bh, 1 ; ret 0xfffc
0x0000000000421867 : sal bh, 1 ; ret 0xfffe
0x000000000045a574 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000466fdf : sal bl, 1 ; ret
0x0000000000473652 : sal byte ptr [rbp + 0x4b], 0x89 ; ret
0x0000000000426128 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000049e253 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000049e238 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x0000000000458dae : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000442971 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x0000000000413504 : sal byte ptr [rbp + 9], cl ; ret
0x0000000000442981 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x00000000004165d5 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000043dae0 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000414c80 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042e61b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dbe3 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000047414f : sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x0000000000468fdc : sal byte ptr [rbp - 0x5a], 0xbf ; ret
0x000000000046701b : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000004a3df0 : sal byte ptr [rbp - 7], 1 ; jmp rax
0x000000000047e4ad : sal byte ptr [rbx - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000041d5f7 : sal byte ptr [rcx + rbp*2 + 0x48], 0x8d ; adc byte ptr [rax + 0x39], cl ; retf 0x1373
0x0000000000423a5c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000473197 : sal byte ptr [rcx + rsi + 0x4c], 0x89 ; retf 0x894c
0x0000000000442956 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000440e62 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x000000000046586b : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000047644d : sal byte ptr [rdx + rax*2 + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x476472
0x0000000000423913 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000004a3e2c : sal byte ptr [rsi - 7], 0xff ; sal byte ptr [rsi - 7], 1 ; jmp rax
0x00000000004a3e30 : sal byte ptr [rsi - 7], 1 ; jmp rax
0x000000000046d711 : sal byte ptr [rsp + 0x48], 0x83 ; ret
0x000000000040db19 : sal byte ptr [rsp + rbp*2 + 0x48], 0xc7 ; ret 0xfff0
0x000000000047b231 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000478dcf : sal dword ptr [rbp + rsi*2 + 0x4c], 0x89 ; ret 0xf749
0x0000000000473fe7 : sal dword ptr [rbp - 0x2a], 1 ; ret
0x00000000004155f8 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004c1169 : sal ebp, 1 ; call rdx
0x0000000000432ac5 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c1ed1 : sal edi, 0xff ; retf 2
0x0000000000474511 : sar al, 0xff ; xor eax, eax ; ret
0x00000000004a3889 : sar al, 1 ; call rax
0x0000000000485c3a : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000483ffc : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000484643 : sar bl, 0xff ; dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000044d723 : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x0000000000471441 : sar byte ptr [rax + 3], 0x5b ; ret
0x000000000047a88c : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000449ed1 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000004c46c0 : sar byte ptr [rbp - 7], 1 ; call rdi
0x00000000004a3ed0 : sar byte ptr [rbp - 7], 1 ; push rax ; jge 0x4a3ed7 ; call qword ptr [rax]
0x00000000004a3474 : sar byte ptr [rbx - 8], 1 ; jmp qword ptr [rax]
0x00000000004c3140 : sar byte ptr [rbx], 1 ; clc ; call qword ptr [rax]
0x000000000044f680 : sar byte ptr [rcx - 0x76b7ff94], 0x15 ; lodsd eax, dword ptr [rsi] ; ret
0x000000000044dc49 : sar byte ptr [rcx - 0x7ab7ff94], 0xc0 ; je 0x44dc5d ; call rax
0x000000000044431d : sar byte ptr [rcx], cl ; ret
0x0000000000475052 : sar byte ptr [rdi + 0x4b617c], 0xe8 ; ret
0x00000000004750dc : sar byte ptr [rdi + 0x4bc7d8], 0x83 ; ret
0x000000000046bcd9 : sar byte ptr [rdx + 1], 0xeb ; retf
0x0000000000478a60 : sar byte ptr [rdx - 0x7cb7ff94], 0xc4 ; ret
0x000000000044138c : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000047ca3c : sar byte ptr [rsi + 9], 1 ; ret
0x00000000004b967f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004bdeb8 : sar byte ptr [rsi - 0x625f0003], 0xfd ; ljmp [rax] ; ret 0xfffd
0x000000000044f67f : sar byte ptr ds:[rcx - 0x76b7ff94], 0x15 ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000442079 : sar ch, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000441fe6 : sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004c3009 : sar ch, 1 ; jmp qword ptr [rdx]
0x00000000004133a7 : sar dword ptr [rax + 2], 1 ; syscall
0x00000000004358a3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x4358ae ; ret
0x000000000040053e : sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000402c6e : sar dword ptr [rdi + 0x6cbfe0], cl ; call rbx
0x00000000004a36d5 : sar eax, 0xff ; jo 0x4a36a4 ; clc ; inc dword ptr [rax] ; ret
0x00000000004a360d : sar eax, 0xff ; mov cl, 0xc1 ; clc ; push qword ptr [rcx] ; ret 0xfff8
0x00000000004a3695 : sar eax, 0xff ; mov eax, edx ; clc ; lcall [rbx] ; ret
0x00000000004a3611 : sar eax, 0xff ; xor edx, eax ; clc ; inc ecx ; ret 0xfff8
0x00000000004a388d : sar eax, 1 ; jmp qword ptr [rax]
0x0000000000464cfc : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x000000000047ce6b : sar eax, 3 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000441f44 : sar ebp, 0xff ; mov rdi, qword ptr [r12] ; call rbx
0x0000000000441f36 : sar ebp, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000441f29 : sar ebp, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004b93e3 : sar ecx, 1 ; jnp 0x4b93a4 ; ret
0x00000000004262e7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000464cfb : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x00000000004262e6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000440081 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x00000000004944ba : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494413 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004c23fc : sbb al, 0x3f ; add byte ptr [rax], al ; push rax ; fcomi st(7) ; jmp qword ptr [rbx]
0x00000000004c27fc : sbb al, 0x43 ; add byte ptr [rax], al ; push rax ; add al, bh ; call qword ptr [rcx]
0x000000000040f5ee : sbb al, 0x4a ; add al, ch ; retf 0xff21
0x00000000004c54fc : sbb al, 0x70 ; add byte ptr [rax], al ; nop ; psubd mm7, mm7 ; retf
0x0000000000418cc3 : sbb al, 0x74 ; add eax, 0x5c415d5b ; ret
0x0000000000467cee : sbb al, 0x89 ; ror byte ptr [rax + 0xf], 0xaf ; ret
0x0000000000463303 : sbb al, 0x8b ; adc dword ptr [rax - 0x77], ecx ; retf
0x00000000004ba6e2 : sbb al, 0x8c ; retf
0x00000000004c8afc : sbb al, 0xa6 ; add byte ptr [rax], al ; and byte ptr [rsi], dh ; std ; call rsp
0x0000000000470c29 : sbb al, 0xb8 ; retf 0
0x000000000049cb66 : sbb al, 0xcc ; mov rsi, qword ptr [rbx] ; call r14
0x00000000004a3991 : sbb al, 0xf9 ; call qword ptr [rdx + 0x22fff91b]
0x00000000004a390d : sbb al, 0xf9 ; call qword ptr [rsi]
0x00000000004a3acd : sbb al, 0xf9 ; call rax
0x00000000004a3ac9 : sbb al, 0xf9 ; inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004a3a4d : sbb al, 0xf9 ; jmp rsp
0x00000000004c69b0 : sbb al, 0xfa ; jmp rdi
0x000000000047c060 : sbb al, 2 ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004a36f0 : sbb al, ah ; clc ; jmp rax
0x00000000004c2bf9 : sbb al, bh ; call qword ptr [rax]
0x00000000004bff9d : sbb al, byte ptr [rax] ; add byte ptr [rax], ah ; cmc ; jmp qword ptr [rcx]
0x000000000049469a : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000460ca5 : sbb al, byte ptr [rcx - 0x7d] ; ret
0x000000000048850a : sbb al, byte ptr [rsi + 0x24] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000494699 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045a500 : sbb al, ch ; retf 0xc3
0x00000000004a0710 : sbb al, ch ; retf 0xf7d9
0x00000000004c6ce8 : sbb bh, ch ; cli ; jmp qword ptr [rdx]
0x00000000004a38e5 : sbb bh, cl ; call qword ptr [rax + 0x20fff919]
0x00000000004a3add : sbb bh, cl ; call qword ptr [rax]
0x00000000004a39a1 : sbb bh, cl ; call rdx
0x00000000004a399d : sbb bh, cl ; inc dword ptr [rdx + 0x1a] ; stc ; call rdx
0x00000000004a3921 : sbb bh, cl ; jmp rsi
0x00000000004bdee0 : sbb bl, al ; std ; inc eax ; ret 0xfffd
0x00000000004bded4 : sbb bl, al ; std ; lcall [rax] ; ret
0x00000000004c7209 : sbb bl, bh ; call qword ptr [rax]
0x0000000000446c49 : sbb bl, byte ptr [rbx + 0x4a] ; add byte ptr [rax - 0x7f], cl ; ret 0x5b00
0x00000000004b9472 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004b8165 : sbb bl, byte ptr [rsi] ; ret
0x00000000004786c4 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046e388 : sbb byte ptr [r8 + 1], cl ; retf
0x000000000049ee4b : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000041087a : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000047aee6 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000047188b : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004786c5 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000417243 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x000000000048dda8 : sbb byte ptr [rax + 0x63], cl ; retf
0x0000000000410b36 : sbb byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x77], 1 ; ror dword ptr [rax + 0x29], cl ; retf
0x000000000043eada : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000046e389 : sbb byte ptr [rax + 1], cl ; retf
0x0000000000448211 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000410503 : sbb byte ptr [rax - 0x75], cl ; and byte ptr [rax + 0x39], cl ; retf 0xbd75
0x000000000041825b : sbb byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x7d], cl ; retf 0x4d01
0x00000000004099be : sbb byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405c97
0x000000000040922d : sbb byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x405c98
0x000000000040d83a : sbb byte ptr [rax - 0x77], cl ; cmp ch, cl ; retf 0xfffb
0x0000000000414ce1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000490af6 : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000416552 : sbb byte ptr [rax - 0x77], cl ; retf 0x476
0x00000000004911fe : sbb byte ptr [rax - 0x77], cl ; retf 0x8b48
0x0000000000416577 : sbb byte ptr [rax - 0x77], cl ; retf 0xdfeb
0x00000000004105d1 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000041df77 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000412653 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000049ee4c : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042c7de : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004495b4 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042c7dd : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004752e4 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfcdb
0x000000000047881b : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000041559f : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000043f361 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000049487a : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000465025 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; call rbx
0x0000000000444af9 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000416df3 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000042cc21 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000410c99 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000416617 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000419037 : sbb byte ptr [rbx], ch ; add byte ptr [rbx + rcx*4 + 0x2d], al ; ret
0x000000000044fea1 : sbb byte ptr [rcx + 0x29], cl ; retf
0x0000000000464b6b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004717a9 : sbb byte ptr [rcx + 3], cl ; add al, 0x24 ; call rax
0x000000000041b6b9 : sbb byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x10 ; call rax
0x0000000000465103 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041cb73 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000410b73 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000041087b : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x0000000000465157 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047aee7 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000049808d : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000404124 : sbb byte ptr [rdi], cl ; retf
0x000000000041e692 : sbb byte ptr [rdi], cl ; test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004a3adc : sbb byte ptr [rdx], 0xf9 ; call qword ptr [rax]
0x0000000000419036 : sbb byte ptr cs:[rbx], ch ; add byte ptr [rbx + rcx*4 + 0x2d], al ; ret
0x000000000046a01a : sbb ch, byte ptr [rcx] ; add byte ptr es:[rax + 0x39], cl ; retf
0x00000000004a3971 : sbb cl, bh ; call qword ptr [rdx]
0x00000000004a38b1 : sbb cl, bh ; inc dword ptr [rax + 0x1f] ; stc ; call rax
0x00000000004a396d : sbb cl, bh ; jmp qword ptr [rdx + 0x12fff918]
0x00000000004a38f1 : sbb cl, bh ; jmp qword ptr [rsi]
0x00000000004a3ab1 : sbb cl, bh ; jmp rax
0x00000000004a3aad : sbb cl, bh ; push qword ptr [rax + 0x18] ; stc ; jmp rax
0x0000000000412d05 : sbb cl, byte ptr [rax - 0x39] ; ret 0xffd0
0x00000000004235dd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a07d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004231cd : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422cd9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004234e9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bcca : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b4ea : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b8da : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b0fa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042abdd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a3bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422f5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429b9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042329d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000004235b9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b299 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423689 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a6fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429edd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004296bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a89d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042343d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422c2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000042302d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042b78a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042afaa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c0ba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042350d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422cfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004299fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422d9f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004230fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000429b33 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a833 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a353 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b68b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042bfbb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042336d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042ab73 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429e73 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429993 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a693 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b7db : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042affb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422dc3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041881f : sbb cl, ch ; retf
0x00000000004a39a0 : sbb dil, cl ; call rdx
0x00000000004c5749 : sbb dl, bh ; jmp qword ptr [rax]
0x0000000000476c1f : sbb dl, dh ; jmp r11
0x00000000004947b8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049cd3c : sbb dword ptr [rax - 0x80], eax ; call qword ptr [rax]
0x0000000000494741 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004947b9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004428e4 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000004927be : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004534f8 : sbb dword ptr [rbx - 0x4a743], eax ; call qword ptr [rax]
0x0000000000418ee2 : sbb dword ptr [rbx], ebp ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004baa1d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000455156 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000043d7b7 : sbb eax, -1 ; ret
0x0000000000442b45 : sbb eax, 0 ; leave ; ret
0x00000000004a3981 : sbb eax, 0x1d52fff9 ; stc ; jmp rdx
0x00000000004a38c1 : sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x000000000049edd0 : sbb eax, 0x22d7ab ; jne 0x49edc0 ; pop rbx ; ret
0x00000000004b9473 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000049431d : sbb eax, 0x894d0000 ; retf
0x0000000000494561 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004945d9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049256e : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000478b2a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000049cb11 : sbb eax, eax ; cmp qword ptr [rsi + 8], rcx ; cmova eax, edx ; ret
0x000000000043d7b5 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004ba588 : sbb ebp, ebx ; retf
0x000000000047b899 : sbb ebx, 0x89000001 ; ret
0x000000000045c5e0 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000047ff82 : sbb ecx, dword ptr [rbx + rcx*4 + 5] ; sahf ; retf 0x24
0x0000000000446c57 : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004a3a69 : sbb ecx, edi ; call rsp
0x00000000004a3a65 : sbb ecx, edi ; inc dword ptr [rcx + rbx - 7] ; call rsp
0x00000000004a38e9 : sbb ecx, edi ; jmp qword ptr [rax]
0x00000000004a3a68 : sbb ecx, r15d ; call rsp
0x00000000004ba319 : sbb edi, ebp ; retf
0x00000000004a3995 : sbb edi, ecx ; jmp qword ptr [rdx]
0x00000000004a38d9 : sbb edi, ecx ; jmp rax
0x00000000004969ff : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004966ff : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004975ff : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000047ad8a : scasb al, byte ptr [rdi] ; add byte ptr [r15 + 0x6cc9c4], r15b ; call rdx
0x0000000000425bfd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004978ff : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042bd1e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000004c6649 : scasb al, byte ptr [rdi] ; cli ; call rdx
0x0000000000496fff : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ba9c9 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x0000000000496cff : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x000000000040502e : scasb al, byte ptr [rdi] ; retf
0x000000000042be1d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042569d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000488d4c : scasd eax, dword ptr [rdi] ; and al, 0xd5 ; and ch, bl ; add byte ptr [r8 + 1], cl ; retf 0x8b48
0x00000000004013a4 : scasd eax, dword ptr [rdi] ; ret
0x000000000041071c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043e2fa : scasd eax, dword ptr [rdi] ; ret 0x72e9
0x0000000000420d88 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004014c3 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000043e2e5 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000044fb60 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x000000000048852d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000000000467ee3 : scasd eax, dword ptr [rdi] ; retf
0x0000000000488531 : scasd eax, dword ptr [rdi] ; retf 0xc148
0x00000000004b96f4 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004b896f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044295c : setae al ; ret
0x0000000000416a7c : setne al ; neg eax ; ret
0x0000000000444320 : setne dl ; jmp 0x444308
0x0000000000465f45 : sgdt [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004458cd : shl byte ptr [rbp + 0x44], 0 ; mov edi, 0x6cc6d0 ; call rax
0x0000000000497e4d : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004a3438 : shl byte ptr [rdx - 8], 1 ; push qword ptr [rax + 0x64] ; clc ; call qword ptr [rax]
0x00000000004a3dec : shl byte ptr [rdx], 0xf9 ; call rax
0x000000000043d9ff : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000042165b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000043bda3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004215d5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042fbbb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042fbd2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000465ae6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465af7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042fab1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004af3d0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004b927d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x00000000004b9568 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000043d9e2 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000042165f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000465ae2 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000043d85b : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000042fb36 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fbed : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fbd6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fbbf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e67b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fb51 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425f4c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042fa11 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004443d1 : shl eax, cl ; pop rbx ; pop rbp ; ret
0x00000000004443ce : shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000047908c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000479017 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478fe6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000042c961 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000476451 : shl edx, 5 ; add rdx, rax ; jmp 0x47646e
0x000000000047908b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000479016 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478fe5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000476450 : shl rdx, 5 ; add rdx, rax ; jmp 0x47646f
0x000000000047644f : shl rdx, 5 ; add rdx, rax ; jmp 0x476470
0x00000000004b8b24 : shr al, cl ; add al, 0x3d ; retf
0x000000000046aa3f : shr bl, cl ; ret
0x0000000000445e0d : shr bl, cl ; ret 0x438b
0x0000000000400620 : shr byte ptr [rax + rax], 0xbf ; ret 0
0x000000000042e61f : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000467526 : shr byte ptr [rcx], 1 ; rol dword ptr [rbp + 0x7418dc9], 0x89 ; retf 0xb70f
0x000000000044c9c8 : shr byte ptr [rcx], cl ; ret
0x0000000000468380 : shr byte ptr [rcx], cl ; ret 0x428d
0x00000000004262eb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004a3458 : shr byte ptr [rdi - 8], 1 ; push qword ptr [rax + 0x71] ; clc ; call qword ptr [rax]
0x00000000004ba927 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000045edd7 : shr cl, cl ; ret
0x000000000043df06 : shr dword ptr [rax], 1 ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000426d79 : shr dword ptr [rdx], cl ; add dword ptr [rax], eax ; ret
0x000000000043e50a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e4e9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000047919c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000479121 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004790f0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464e03 : shr edx, 2 ; sub eax, edx ; ret
0x000000000047919b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000479120 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004790ef : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464e02 : shr rdx, 2 ; sub eax, edx ; ret
0x00000000004ae5a9 : sldt word ptr [rax] ; ret
0x0000000000445e9c : stc ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041a822 : stc ; add eax, 0xf6410000 ; ret 0xf01
0x00000000004a3b16 : stc ; call qword ptr [rax + 0x10fff911]
0x00000000004a3b0e : stc ; call qword ptr [rax + 0x10fff912]
0x00000000004a3b06 : stc ; call qword ptr [rax + 0x10fff913]
0x00000000004a3afe : stc ; call qword ptr [rax + 0x10fff914]
0x00000000004a38e6 : stc ; call qword ptr [rax + 0x20fff919]
0x00000000004a3abe : stc ; call qword ptr [rax + 0x20fff91d]
0x00000000004a38c6 : stc ; call qword ptr [rax]
0x00000000004a3992 : stc ; call qword ptr [rdx + 0x22fff91b]
0x00000000004a3972 : stc ; call qword ptr [rdx]
0x00000000004a390e : stc ; call qword ptr [rsi]
0x00000000004a38b6 : stc ; call rax
0x0000000000467119 : stc ; call rbx
0x00000000004c46c2 : stc ; call rdi
0x00000000004a39a2 : stc ; call rdx
0x00000000004a38fe : stc ; call rsi
0x00000000004a3a6a : stc ; call rsp
0x000000000047abd2 : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000487af7 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485daa : stc ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004a3aaa : stc ; dec edx ; sbb cl, bh ; push qword ptr [rax + 0x18] ; stc ; jmp rax
0x00000000004a3aca : stc ; inc dword ptr [rax + 0x1c] ; stc ; call rax
0x00000000004a38b2 : stc ; inc dword ptr [rax + 0x1f] ; stc ; call rax
0x00000000004a3de6 : stc ; inc dword ptr [rax + 0x40] ; stc ; inc eax ; and bh, cl ; call rax
0x00000000004a3b22 : stc ; inc dword ptr [rax] ; adc cl, bh ; push qword ptr [rax + 0xf] ; stc ; jmp rax
0x00000000004a3e36 : stc ; inc dword ptr [rax] ; ja 0x4a3e39 ; call qword ptr [rax]
0x00000000004a3dfa : stc ; inc dword ptr [rax] ; jbe 0x4a3dfd ; call qword ptr [rax]
0x00000000004a3e8e : stc ; inc dword ptr [rax] ; jl 0x4a3e91 ; call qword ptr [rax]
0x00000000004a3e5a : stc ; inc dword ptr [rax] ; js 0x4a3e5d ; jmp qword ptr [rax]
0x00000000004a3d26 : stc ; inc dword ptr [rax] ; psubw mm7, mm7 ; jo 0x4a3d45 ; stc ; call rax
0x00000000004a38e2 : stc ; inc dword ptr [rax] ; sbb bh, cl ; call qword ptr [rax + 0x20fff919]
0x00000000004a3a66 : stc ; inc dword ptr [rcx + rbx - 7] ; call rsp
0x00000000004a399e : stc ; inc dword ptr [rdx + 0x1a] ; stc ; call rdx
0x00000000004a398e : stc ; inc dword ptr [rdx] ; sbb al, 0xf9 ; call qword ptr [rdx + 0x22fff91b]
0x00000000004a38fa : stc ; inc dword ptr [rsi + 0x1e] ; stc ; call rsi
0x00000000004a3dea : stc ; inc eax ; and bh, cl ; call rax
0x00000000004a3e52 : stc ; inc eax ; ja 0x4a3e55 ; jmp rax
0x00000000004a3e2a : stc ; inc eax ; jbe 0x4a3e2d ; call rax
0x00000000004a3e82 : stc ; inc eax ; jnp 0x4a3e85 ; jmp rax
0x00000000004a397e : stc ; inc edx ; sbb eax, 0x1d52fff9 ; stc ; jmp rdx
0x000000000042add2 : stc ; je 0x42ad9e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000496242 : stc ; je 0x49620e ; lea r10, [r10 + r9] ; jmp r10
0x00000000004a3ce2 : stc ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3af6 : stc ; jmp qword ptr [rax + 0x10fff915]
0x00000000004a3d1a : stc ; jmp qword ptr [rax + 0x20fff910]
0x00000000004a3d12 : stc ; jmp qword ptr [rax + 0x20fff911]
0x00000000004a3d0a : stc ; jmp qword ptr [rax + 0x20fff912]
0x00000000004a3d02 : stc ; jmp qword ptr [rax + 0x20fff913]
0x00000000004a3cfa : stc ; jmp qword ptr [rax + 0x20fff914]
0x00000000004a38ea : stc ; jmp qword ptr [rax]
0x00000000004a396e : stc ; jmp qword ptr [rdx + 0x12fff918]
0x00000000004a3996 : stc ; jmp qword ptr [rdx]
0x00000000004a38f2 : stc ; jmp qword ptr [rsi]
0x00000000004a38da : stc ; jmp rax
0x00000000004a3986 : stc ; jmp rdx
0x00000000004a3922 : stc ; jmp rsi
0x00000000004a3a4e : stc ; jmp rsp
0x00000000004b93e4 : stc ; jnp 0x4b93a3 ; ret
0x0000000000432478 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046d887 : stc ; mov r15, rax ; jmp 0x46d855
0x00000000004a3aae : stc ; push qword ptr [rax + 0x18] ; stc ; jmp rax
0x00000000004a3ac6 : stc ; push qword ptr [rax + 0x40fff91c] ; sbb al, 0xf9 ; call rax
0x00000000004a3d2a : stc ; push qword ptr [rax + 0xe] ; stc ; call rax
0x00000000004a3b26 : stc ; push qword ptr [rax + 0xf] ; stc ; jmp rax
0x00000000004a3ea6 : stc ; push qword ptr [rax - 0x2f000684] ; jl 0x4a3eb1 ; jmp rax
0x00000000004a3e7e : stc ; push qword ptr [rax - 0x3f000685] ; jnp 0x4a3e89 ; jmp rax
0x00000000004a3e26 : stc ; push qword ptr [rax - 0x3f00068a] ; jbe 0x4a3e31 ; call rax
0x00000000004a3cde : stc ; push qword ptr [rax] ; adc cl, bh ; jmp qword ptr [rax + 0x10fff90f]
0x00000000004a3cf6 : stc ; push qword ptr [rax] ; adc eax, 0x14a0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a3a62 : stc ; push qword ptr [rcx + rbx + 0x1944fff9] ; stc ; call rsp
0x00000000004a3b76 : stc ; push qword ptr [rdx + 0x15] ; stc ; jmp rdx
0x00000000004a399a : stc ; push qword ptr [rdx + 0x42fff91a] ; sbb bh, cl ; call rdx
0x00000000004a3ed2 : stc ; push rax ; jge 0x4a3ed5 ; call qword ptr [rax]
0x00000000004a3eb2 : stc ; push rax ; jl 0x4a3eb5 ; call qword ptr [rax]
0x00000000004a3df6 : stc ; push rax ; jne 0x4a3dfd ; inc dword ptr [rax] ; jbe 0x4a3e01 ; call qword ptr [rax]
0x00000000004a3e8a : stc ; push rax ; jnp 0x4a3e91 ; inc dword ptr [rax] ; jl 0x4a3e95 ; call qword ptr [rax]
0x00000000004a38be : stc ; push rax ; sbb eax, 0x1d80fff9 ; stc ; call qword ptr [rax]
0x00000000004a3b72 : stc ; push rdx ; adc eax, 0x1572fff9 ; stc ; jmp rdx
0x000000000040dc35 : stc ; syscall
0x0000000000435da4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000041d1a2 : std ; add byte ptr [rax - 0x76b7ff94], ch ; retf 0xf4c
0x00000000004bde56 : std ; call qword ptr [rax - 0x1f0002b3]
0x00000000004bddca : std ; call qword ptr [rax]
0x00000000004c3e22 : std ; call qword ptr [rbx]
0x00000000004bdf0e : std ; call qword ptr [rdx - 0x2d00023a]
0x00000000004bddd2 : std ; call rax
0x00000000004c711a : std ; call rcx
0x00000000004bdf12 : std ; call rdx
0x00000000004bdffa : std ; call rsp
0x000000000044034c : std ; dec dword ptr [rax - 0x75] ; jge 0x440358 ; call rbx
0x00000000004405ff : std ; dec dword ptr [rax - 0x75] ; jge 0x44060b ; call rbx
0x0000000000442197 : std ; dec dword ptr [rax - 0x75] ; jge 0x4421a3 ; call rbx
0x000000000043fbdb : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004bdf4a : std ; dec dword ptr [rax] ; retf
0x000000000044020a : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044060d : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440217 : std ; dec dword ptr [rcx - 0x75] ; jge 0x440223 ; call rbx
0x000000000044033e : std ; dec dword ptr [rcx - 0x75] ; jge 0x44034a ; call rbx
0x0000000000440481 : std ; dec dword ptr [rcx - 0x75] ; jge 0x44048d ; call rbx
0x00000000004405f1 : std ; dec dword ptr [rcx - 0x75] ; jge 0x4405fd ; call rbx
0x0000000000441e0f : std ; dec dword ptr [rcx - 0x75] ; jge 0x441e1b ; call rbx
0x0000000000441f37 : std ; dec dword ptr [rcx - 0x75] ; jge 0x441f43 ; call rbx
0x000000000044207a : std ; dec dword ptr [rcx - 0x75] ; jge 0x442086 ; call rbx
0x000000000044217b : std ; dec dword ptr [rcx - 0x75] ; jge 0x442187 ; call rbx
0x00000000004bdf42 : std ; dec dword ptr [rdi - 0x14000236] ; retf
0x00000000004bef89 : std ; hlt ; call qword ptr [rax]
0x00000000004befa1 : std ; hlt ; call qword ptr [rdx]
0x00000000004bde52 : std ; inc dword ptr [rax + 0x4b] ; std ; call qword ptr [rax - 0x1f0002b3]
0x00000000004bddc6 : std ; inc dword ptr [rax + 0x6a] ; std ; call qword ptr [rax]
0x00000000004be3d2 : std ; inc dword ptr [rax + rbx*8] ; std ; call rsp
0x00000000004bde62 : std ; inc dword ptr [rax - 0x2f0002ac] ; push rsi ; std ; jmp qword ptr [rax]
0x000000000047364f : std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x00000000004bde72 : std ; inc eax ; pop rbp ; std ; call qword ptr [rax]
0x00000000004bdee2 : std ; inc eax ; ret 0xfffd
0x00000000004782fe : std ; jbe 0x47830b ; ret
0x00000000004bddfe : std ; jmp qword ptr [rax + 0x20fffd85]
0x00000000004bde06 : std ; jmp qword ptr [rax + 0x20fffd88]
0x00000000004bde0e : std ; jmp qword ptr [rax + 0x20fffd8b]
0x00000000004bde16 : std ; jmp qword ptr [rax + 0x20fffd8e]
0x00000000004bde1e : std ; jmp qword ptr [rax + 0x20fffd91]
0x00000000004bde26 : std ; jmp qword ptr [rax + 0x20fffd94]
0x00000000004bde2e : std ; jmp qword ptr [rax + 0x20fffd97]
0x00000000004bde02 : std ; jmp qword ptr [rax]
0x00000000004bdf2e : std ; jmp qword ptr [rbx - 0x1f000238]
0x00000000004c92d2 : std ; jmp qword ptr [rbx]
0x00000000004c300a : std ; jmp qword ptr [rdx]
0x00000000004bddfa : std ; jmp rax
0x00000000004bdef2 : std ; jmp rsp
0x00000000004bded2 : std ; lcall [rax] ; ret
0x00000000004bdfa2 : std ; lcall [rdx - 0x34] ; std ; jmp rsp
0x00000000004bdf9e : std ; lcall [rdx - 0x34] ; std ; lcall [rdx - 0x34] ; std ; jmp rsp
0x00000000004be3ce : std ; ljmp [rax + rbx*8 - 3] ; inc dword ptr [rax + rbx*8] ; std ; call rsp
0x00000000004bdebe : std ; ljmp [rax] ; ret 0xfffd
0x00000000004bdf2a : std ; ljmp [rbp - 0x38] ; std ; jmp qword ptr [rbx - 0x1f000238]
0x000000000046a926 : std ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000041345c : std ; mov eax, 3 ; syscall
0x000000000047d6e8 : std ; mov r15, rax ; jmp 0x47d702
0x0000000000431c9b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004bdeea : std ; push qword ptr [rax + 0x28fffdc2] ; ret 0xfffd
0x00000000004bde6e : std ; push qword ptr [rax + 0x5b] ; std ; inc eax ; pop rbp ; std ; call qword ptr [rax]
0x00000000004bdde6 : std ; push qword ptr [rax] ; jns 0x4bdded ; call qword ptr [rax]
0x00000000004bddce : std ; push rax ; insd dword ptr [rdi], dx ; std ; call rax
0x00000000004bddee : std ; push rax ; jl 0x4bddf5 ; call rax
0x00000000004ba31a : std ; retf
0x0000000000458b91 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000440e60 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000048920b : sti ; add dword ptr [rax], 0x840f0000 ; retf
0x00000000004c720a : sti ; call qword ptr [rax]
0x00000000004c7462 : sti ; call rsp
0x000000000046be27 : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004748b4 : sti ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000046e439 : sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000466595 : sti ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000463e2d : sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0xfffe
0x00000000004beed1 : sti ; hlt ; call qword ptr [rbx]
0x000000000044e526 : sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000045875e : sti ; inc dword ptr [rbx - 0x7af00008] ; retf 0xfffd
0x00000000004c7002 : sti ; jmp qword ptr [rdx]
0x00000000004c6e92 : sti ; jmp rsi
0x0000000000432078 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043f6c3 : sti ; mov eax, 0x48 ; syscall
0x000000000046a6a1 : sti ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000044cc5b : sti ; mov eax, 3 ; syscall
0x00000000004b956a : sti ; ret
0x000000000048ef46 : sti ; ret 0xffbf
0x00000000004a3694 : sti ; sar eax, 0xff ; mov eax, edx ; clc ; lcall [rbx] ; ret
0x000000000044f0c7 : sti ; test rax, rax ; je 0x44f0d5 ; call rax
0x00000000004400b0 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00000000004434f3 : stosb byte ptr [rdi], al ; add byte ptr [rdi - 0x76b6ff94], bl ; retf 0x34c
0x00000000004b9a44 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000004091e2 : stosb byte ptr [rdi], al ; retf 0xffff
0x000000000046be26 : stosb byte ptr [rdi], al ; sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000468568 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000468569 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x000000000047ac5f : stosd dword ptr [rdi], eax ; add byte ptr [r15 + 0x6cc9c0], r15b ; call rax
0x00000000004a36a0 : stosd dword ptr [rdi], eax ; ret
0x00000000004baa4a : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x0000000000468567 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x000000000049edd1 : stosd dword ptr [rdi], eax ; xlatb ; and al, byte ptr [rax] ; jne 0x49edbf ; pop rbx ; ret
0x0000000000469dc9 : stosd dword ptr [rdi], eax ; xor eax, 0x1480026 ; retf
0x00000000004c4cc0 : sub ah, 0xf9 ; call qword ptr [rsi]
0x00000000004baf31 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004c1165 : sub al, 0 ; add byte ptr [rax], bh ; sal ebp, 1 ; call rdx
0x0000000000400968 : sub al, 0 ; add ebx, esi ; ret
0x0000000000400709 : sub al, 0 ; pop rbp ; pop r12 ; ret
0x000000000040158e : sub al, 0 ; xor eax, eax ; ret
0x0000000000469c58 : sub al, 0x26 ; add byte ptr [rbp - 0x7c], al ; ror byte ptr [rax - 0x75], 5 ; ret
0x0000000000442d2a : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c770c : sub al, 0x92 ; add byte ptr [rax], al ; mov al, 0x8e ; jmp qword ptr [rsi]
0x00000000004c820c : sub al, 0x9d ; add byte ptr [rax], al ; or esp, edi ; call qword ptr [rdx]
0x000000000042f203 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041dccd : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041dcf9 : sub al, byte ptr [rax] ; push rax ; retf 0x41
0x000000000041f0f3 : sub al, byte ptr [rax] ; test rax, rax ; je 0x41f103 ; call rax
0x0000000000480f71 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x000000000045ff33 : sub bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000045f9da : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000463ffc : sub bh, bh ; loopne 0x463f99 ; mov eax, 0xffffffff ; ret
0x00000000004c7461 : sub bh, bl ; call rsp
0x000000000049e221 : sub bl, dh ; ret
0x000000000049e220 : sub bl, r14b ; ret
0x000000000041087e : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000046dcea : sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046cae6 : sub byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000045d410 : sub byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000483d57 : sub byte ptr [rax + 0x48000000], 0x39 ; ret 0x820f
0x000000000041087f : sub byte ptr [rax + 1], cl ; ret 0x8949
0x0000000000466c30 : sub byte ptr [rax - 0x73], cl ; je 0x466c5f ; call rbx
0x000000000041c6bb : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x000000000041ebb4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000040564f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000004105d5 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x0000000000462ecc : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000042572d : sub byte ptr [rax - 0x77], cl ; retf
0x000000000040d4b9 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000004822cc : sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004428ad : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004787b1 : sub byte ptr [rax], al ; jne 0x4787c8 ; add rsp, 0x38 ; ret
0x000000000044430a : sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000445835 : sub byte ptr [rax], al ; ret
0x00000000004442e4 : sub byte ptr [rax], al ; test eax, eax ; je 0x4442f6 ; ret
0x000000000043ff25 : sub byte ptr [rax], al ; test rax, rax ; je 0x43ff36 ; ret
0x000000000040db9a : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000414960 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000004442c3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00000000004442c2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004bf672 : sub byte ptr [rbx - 0x5ff1adfb], al ; add al, byte ptr [rdx] ; retf
0x000000000044d17a : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000049b011 : sub byte ptr [rcx - 0x77], cl ; xchg dword ptr [rax - 0x17000000], esp ; retf
0x00000000004880e4 : sub byte ptr [rcx], cl ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000041eccc : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b14b : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000004be430 : sub byte ptr [rsi + rdi*8], al ; call rax
0x00000000004be42c : sub byte ptr [rsi + rdi*8], al ; ljmp [rax] ; add al, 0xfe ; call rax
0x00000000004a370c : sub ch, 0xf8 ; call qword ptr [rax]
0x000000000047bc0d : sub cl, al ; call 0xffffffff8a09e538
0x000000000047c564 : sub cl, al ; call 0xffffffff8a09ee8f
0x0000000000471d2e : sub cl, byte ptr [rax - 0x7d] ; ret
0x000000000046856a : sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000414145 : sub cl, ch ; ret 0xfffe
0x00000000004bdef0 : sub dl, al ; std ; jmp rsp
0x00000000004bded0 : sub dl, al ; std ; lcall [rax] ; ret
0x0000000000476fba : sub dl, dh ; call r11
0x00000000004b98ed : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x0000000000415a5b : sub dword ptr [rax + 0x39], ecx ; retf
0x00000000004ba582 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x00000000004302c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4302dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430417 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43042d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430567 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43057d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004306b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4306cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430807 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43081d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430957 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43096d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430aa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430abd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430bf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430c0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430d5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430ead ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430fe7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430ffd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431137 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43114d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431287 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43129d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004313d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4313ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431527 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43153d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430223 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043021f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004302cd : sub dword ptr [rdi], esp ; jmp r9
0x000000000041aca6 : sub dword ptr [rdx], ecx ; mov eax, 2 ; syscall
0x000000000042f9e6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000004bae3a : sub dword ptr [rsi], 0x76 ; retf
0x0000000000469f9f : sub dword ptr [rsi], esp ; add byte ptr [rax + 0x39], cl ; retf
0x000000000046a010 : sub dword ptr [rsi], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041eca9 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041cb42 : sub eax, 0x441f0f ; add byte ptr [rax - 0x77], cl ; retf 0x2948
0x000000000045545c : sub eax, 0x5ce8004b ; ret
0x0000000000454c4d : sub eax, 0x6be8004b ; retf
0x000000000045d4e1 : sub eax, 0x83000000 ; ret
0x0000000000454c34 : sub eax, 0x84e8004b ; retf
0x0000000000455432 : sub eax, 0x86e8004b ; ret
0x0000000000469b2c : sub eax, 0x950f0026 ; ret 0xf748
0x0000000000454c1b : sub eax, 0x9de8004b ; retf
0x0000000000454c02 : sub eax, 0xb6e8004b ; retf
0x0000000000454be9 : sub eax, 0xcfe8004b ; retf
0x0000000000454bd0 : sub eax, 0xe8e8004b ; retf
0x00000000004b8586 : sub eax, 0xea4ca798 ; retf
0x000000000043ed5c : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044d5e4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000043dc34 : sub eax, 1 ; ret
0x0000000000478556 : sub eax, dword ptr [0] ; ret
0x00000000004c105d : sub eax, dword ptr [rax] ; add al, ah ; retf
0x00000000004c101d : sub eax, dword ptr [rax] ; add al, ah ; retf 0xfff5
0x0000000000416a09 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416996 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b5c05], 1 ; ret
0x0000000000416905 : sub eax, dword ptr [rax] ; ret
0x0000000000417ed2 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x417ee2 ; call rax
0x000000000040185f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049a071 : sub eax, dword ptr [rcx + r8*4] ; je 0x49a057 ; ret
0x000000000049a072 : sub eax, dword ptr [rcx + rax*4] ; je 0x49a056 ; ret
0x000000000041713e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043e65a : sub eax, dword ptr [rdx + rcx*4] ; je 0x43e646 ; ret
0x00000000004165f3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004152ad : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000466c6b : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000415d29 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x000000000047a74d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000422a4c : sub eax, ecx ; ret
0x0000000000423b19 : sub eax, edi ; ret
0x0000000000473935 : sub eax, edx ; mov rdi, rax ; call 0x400357
0x0000000000412cae : sub eax, edx ; ret
0x000000000043dde7 : sub eax, edx ; vzeroupper ; ret
0x000000000041540e : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412b08 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004b97de : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b8275 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000479735 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004443cc : sub ecx, eax ; shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x00000000004421b1 : sub edi, dword ptr [rdi + 0x1f0ffffd] ; add bl, dh ; ret
0x00000000004428f1 : sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x0000000000416620 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000416615 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000426174 : sub edx, eax ; jbe 0x4261b7 ; add rax, rdi ; ret
0x0000000000426184 : sub edx, eax ; jbe 0x4261b9 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000426194 : sub edx, eax ; jbe 0x4261b9 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000004261a4 : sub edx, eax ; jbe 0x4261b9 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000442281 : sub edx, esi ; mov eax, r12d ; syscall
0x00000000004106b2 : sub edx, esi ; mov rdi, r15 ; call rax
0x00000000004122c4 : sub edx, esi ; mov rdi, rbx ; call rax
0x0000000000474804 : sub esp, 0x1000 ; mov rsi, rsp ; syscall
0x000000000046add2 : sub esp, 0x30 ; mov rdx, rsp ; syscall
0x0000000000415eeb : sub esp, 0x80 ; call 0x442998
0x000000000046a56b : sub esp, 0x98 ; syscall
0x00000000004a11d1 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000046ab56 : sub esp, 8 ; syscall
0x0000000000415d28 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000417ed1 : sub r8d, dword ptr [r8] ; test rax, rax ; je 0x417ee3 ; call rax
0x000000000043dc33 : sub rax, 1 ; ret
0x0000000000478555 : sub rax, qword ptr [0] ; ret
0x000000000041713d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000478554 : sub rax, qword ptr fs:[0] ; ret
0x0000000000466c6a : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000423b18 : sub rax, rdi ; ret
0x0000000000473934 : sub rax, rdx ; mov rdi, rax ; call 0x400358
0x0000000000412cad : sub rax, rdx ; ret
0x000000000043dde6 : sub rax, rdx ; vzeroupper ; ret
0x0000000000426173 : sub rdx, rax ; jbe 0x4261b8 ; add rax, rdi ; ret
0x0000000000442280 : sub rdx, rsi ; mov eax, r12d ; syscall
0x00000000004106b1 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000004122c3 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000046add1 : sub rsp, 0x30 ; mov rdx, rsp ; syscall
0x0000000000415eea : sub rsp, 0x80 ; call 0x442999
0x000000000046a56a : sub rsp, 0x98 ; syscall
0x00000000004a11d0 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000046ab55 : sub rsp, 8 ; syscall
0x00000000004003da : syscall
0x00000000004a3668 : test ah, 0xf8 ; call qword ptr [rsi + 0x17fff8c5]
0x00000000004439bf : test ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046d917 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000494e08 : test ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495d08 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000494c28 : test ah, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495b28 : test ah, dl ; add eax, 0x894d0000 ; retf
0x0000000000415729 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049a263 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000049c533 : test al, 0 ; add byte ptr [rax], al ; ret
0x0000000000447ff4 : test al, 0x5c ; add al, bpl ; ret
0x000000000041d746 : test al, 0x6c ; add byte ptr [rax + 0xf], cl ; retf 0x894c
0x000000000041d1a4 : test al, 0x6c ; add byte ptr [rax - 0x77], cl ; retf 0xf4c
0x000000000041db9d : test al, 0x6c ; add byte ptr [rbp - 0x42], dh ; ret
0x00000000004b8b37 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b851e : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x000000000047dd5d : test al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004424f7 : test al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004425b9 : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000043f5d6 : test al, 2 ; cmove eax, edx ; ret
0x00000000004c53d8 : test al, 5 ; cli ; jmp rdx
0x00000000004107f3 : test al, ah ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000049334c : test al, ah ; or eax, 0x894d0000 ; retf
0x0000000000497e4c : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042e61a : test al, al ; jne 0x42e608 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000049874c : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049256c : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041a750 : test al, dh ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000492c5c : test al, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004213d6 : test ax, 1 ; ret
0x00000000004843f9 : test bh, bl ; retf 0xffff
0x00000000004bb444 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000044679e : test bh, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004191f4 : test bh, dl ; add al, 0 ; add dh, dh ; ret
0x00000000004b98f1 : test bh, dl ; retf 0xdf7f
0x000000000046b213 : test bl, bl ; je 0x46b206 ; ret
0x000000000045be13 : test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000475275 : test byte ptr [r8 - 0x77], r9b ; ret
0x000000000043f598 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x48 ; syscall
0x0000000000451f36 : test byte ptr [rax + 0x63], cl ; retf 0x894c
0x000000000047c673 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000004c1164 : test byte ptr [rax + rax], ch ; add byte ptr [rax], bh ; sal ebp, 1 ; call rdx
0x0000000000494878 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x000000000047bc49 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046728e : test byte ptr [rax - 0x73], 0x54 ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000044234e : test byte ptr [rax - 0x75], 0x7c ; and al, 8 ; xor eax, eax ; syscall
0x0000000000440721 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000440e64 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000475276 : test byte ptr [rax - 0x77], cl ; ret
0x000000000046fd71 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000498e0c : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043bf7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000043b3ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041692a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000411efa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000442ea8 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004008ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004168ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043e4ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411c6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043bdba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000049970c : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049850c : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000046631c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004930fc : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041930b : test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000466334 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047aa76 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x00000000004953a8 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004494b6 : test byte ptr [rbp - 0x77000000], ch ; retf 0xe281
0x0000000000417606 : test byte ptr [rbp - 0xa000000], ah ; ret
0x000000000047ae6a : test byte ptr [rbx + 0x251b533d], 0 ; jmp rax
0x0000000000495588 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041e1e7 : test byte ptr [rbx - 0xa000000], cl ; ret
0x000000000044959c : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041782e : test byte ptr [rbx], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x0000000000495768 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x000000000048b17b : test byte ptr [rcx + rcx*4 + 0x44], 0x24 ; xor al, ch ; retf 0xf751
0x0000000000450192 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000049caa2 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000467113 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x000000000046deab : test byte ptr [rcx - 0x18000000], ch ; retf
0x0000000000457bfa : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x00000000004400b2 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x000000000047ea5d : test byte ptr [rcx - 0x7d], 0xc5 ; add dword ptr [rax + 0x29], ecx ; retf 0x8d48
0x000000000047e6fd : test byte ptr [rcx - 0x7d], 0xc7 ; add dword ptr [rax + 0x29], ecx ; retf 0x148
0x0000000000422dc6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c7b95 : test byte ptr [rcx], al ; ret
0x0000000000495948 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x0000000000418097 : test byte ptr [rdi - 0xa000000], cl ; ret
0x000000000049fc5e : test byte ptr [rdi], 0x84 ; ret
0x000000000044052a : test byte ptr [rdi], 0x84 ; ret 0
0x000000000047180e : test byte ptr [rdi], 0x85 ; ret
0x000000000045e1ad : test byte ptr [rdi], 0x88 ; retf
0x000000000047bd27 : test byte ptr [rdi], 0x94 ; ret 0xd021
0x0000000000486ccd : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000465f5c : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000400603 : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465f44 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004115f4 : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000494698 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004c8764 : test byte ptr [rdx - 0x46080000], ah ; cld ; call qword ptr [rax]
0x0000000000468571 : test byte ptr [rdx], dl ; jle 0x468545 ; add byte ptr [r8 - 0x77], cl ; ret
0x000000000047396e : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004657fd : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x000000000048b2b9 : test byte ptr [rsi + rax + 0x63480000], al ; retf 0x8348
0x0000000000494a48 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x0000000000405a95 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004239fd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000049687e : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049657e : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x000000000049777e : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000496e7e : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000049717e : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044e70d : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004944b8 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043e4d2 : test ch, 0xf0 ; je 0x43e4cb ; movzx eax, cl ; pop rbx ; ret
0x000000000044f226 : test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; retf 0x894c
0x000000000041dedf : test ch, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049431b : test cl, ah ; sbb eax, 0x894d0000 ; retf
0x0000000000445e9b : test cl, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041a821 : test cl, bh ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000423e66 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424166 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000425066 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424d66 : test cl, ch ; add eax, 0x894d0000 ; retf
0x0000000000424a66 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000424766 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043d8bf : test cl, cl ; jne 0x43d8b4 ; ret
0x000000000043d96f : test cl, cl ; jne 0x43d964 ; ret
0x000000000043dc2f : test cl, cl ; jne 0x43dc28 ; sub rax, 1 ; ret
0x0000000000420856 : test cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x000000000043e4fa : test dh, 0xf0 ; je 0x43e4c9 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e4fa : test dh, 0xf0 ; je 0x43e4cb ; movzx eax, dl ; pop rbx ; ret
0x000000000046894d : test dh, cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446d15 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000044dda6 : test dh, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000043be04 : test dl, 0x40 ; jne 0x43bdc9 ; lea rax, [rdi + 7] ; ret
0x000000000043be32 : test dl, 4 ; jne 0x43bdc9 ; lea rax, [rdi + 3] ; ret
0x000000000041a7a5 : test dl, al ; add eax, 0xf6410000 ; ret 0xf01
0x000000000041d209 : test dl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000040dbe2 : test dl, dl ; jne 0x40dbc4 ; ret
0x000000000043dadf : test dl, dl ; jne 0x43dad8 ; lea rax, [rcx - 1] ; ret
0x0000000000426d39 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x0000000000460ccb : test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x000000000047de24 : test dword ptr [rax - 0x3f], 0x894803e0 ; ret 0x8948
0x00000000004c6aa5 : test dword ptr [rax], eax ; add byte ptr [rax - 0x24], ch ; cli ; call rsi
0x000000000045c859 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049b2ab : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000049b2aa : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042c6af : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000042f4e7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f936 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047ec99 : test dword ptr [rbx - 0x16000002], esi ; ret
0x0000000000418430 : test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000451e6b : test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004260ea : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x0000000000426a50 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x00000000004101a6 : test dword ptr [rcx + 0xf], 0x8948c046 ; ret 0x8949
0x000000000042f4bd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f3cd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f2dd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045045e : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000040420c : test dword ptr [rcx], 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000041b50a : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047dd0a : test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000426c3a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000045f900 : test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000047cf13 : test dword ptr [rdi + rdi*8 - 1], ecx ; inc dword ptr [rcx - 0x77] ; ret
0x000000000044a07e : test dword ptr [rdi - 0x76fffff9], ebp ; retf 0x8b49
0x000000000045b44c : test dword ptr [rdi - 0x7c00000c], esi ; ret
0x000000000042c4c5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x000000000041f984 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042f202 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044679f : test dword ptr [rdx], 0x83480000 ; ret
0x0000000000440ecd : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000043d642 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c7ae : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000042f708 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004b99cd : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x0000000000400708 : test eax, 0x415d002c ; pop rsp ; ret
0x00000000004ba820 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000432e76 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000441fe5 : test eax, 0x8b49fffd ; call rbx
0x000000000046deac : test eax, 0xe8000000 ; retf
0x000000000044285b : test eax, eax ; cmove eax, edx ; ret
0x0000000000400958 : test eax, eax ; je 0x40096c ; mov edi, 0x4be4e0 ; call rax
0x00000000004009a6 : test eax, eax ; je 0x40099c ; call rax
0x0000000000402d12 : test eax, eax ; je 0x402d26 ; mov edi, 0x6cc060 ; call rax
0x0000000000402f61 : test eax, eax ; je 0x402f7f ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403155 : test eax, eax ; je 0x403173 ; mov edi, 0x6cbfe0 ; call rax
0x0000000000403570 : test eax, eax ; je 0x403584 ; mov edi, 0x6cc0a0 ; call rax
0x00000000004036b8 : test eax, eax ; je 0x4036cc ; mov edi, 0x6cc0a0 ; call rax
0x0000000000417df8 : test eax, eax ; je 0x417e03 ; pop rbx ; ret
0x0000000000417ed5 : test eax, eax ; je 0x417edf ; call rax
0x000000000041f0f6 : test eax, eax ; je 0x41f100 ; call rax
0x00000000004237d3 : test eax, eax ; je 0x4237df ; xchg eax, edx ; sub eax, edx ; ret
0x000000000043e746 : test eax, eax ; je 0x43e75a ; mov edi, 0x6cc720 ; call rax
0x000000000043e75e : test eax, eax ; je 0x43e772 ; mov edi, 0x6cc720 ; call rax
0x000000000043ff28 : test eax, eax ; je 0x43ff33 ; ret
0x000000000044415f : test eax, eax ; je 0x444173 ; mov edi, 0x6cb140 ; call rax
0x00000000004442e6 : test eax, eax ; je 0x4442f4 ; ret
0x000000000044db1e : test eax, eax ; je 0x44db32 ; mov edi, 0x6cc720 ; call rax
0x000000000044db4d : test eax, eax ; je 0x44db69 ; mov edi, 0x6cc720 ; call rax
0x000000000044dc4e : test eax, eax ; je 0x44dc58 ; call rax
0x000000000044dcad : test eax, eax ; je 0x44dcc1 ; mov edi, 0x6cc720 ; call rax
0x000000000044de26 : test eax, eax ; je 0x44de41 ; mov edi, 0x6cc720 ; call rax
0x000000000044e106 : test eax, eax ; je 0x44e11a ; mov edi, 0x6cc720 ; call rax
0x000000000044e20a : test eax, eax ; je 0x44e214 ; call rax
0x000000000044f0c9 : test eax, eax ; je 0x44f0d3 ; call rax
0x0000000000470e72 : test eax, eax ; je 0x470e86 ; mov edi, 0x6cb100 ; call rax
0x0000000000474e66 : test eax, eax ; je 0x474e7a ; mov edi, 0x6cb140 ; call rax
0x0000000000474e8e : test eax, eax ; je 0x474ea2 ; mov edi, 0x6cb140 ; call rax
0x0000000000474f04 : test eax, eax ; je 0x474f18 ; mov edi, 0x6cb140 ; call rax
0x00000000004769d1 : test eax, eax ; je 0x476a49 ; mov edi, 0x6cb140 ; call rax
0x000000000047838c : test eax, eax ; je 0x47835b ; mov edi, 0x6cb140 ; call rax
0x00000000004784ea : test eax, eax ; je 0x4784fe ; mov edi, 0x6cb140 ; call rax
0x000000000047b230 : test eax, eax ; je 0x47b248 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e906 : test eax, eax ; je 0x47e91a ; mov edi, 0x6cb140 ; call rax
0x000000000047e932 : test eax, eax ; je 0x47e946 ; mov edi, 0x6cb140 ; call rax
0x00000000004880b0 : test eax, eax ; je 0x4880c4 ; mov edi, 0x6cb140 ; call rax
0x0000000000488158 : test eax, eax ; je 0x48816c ; mov edi, 0x6cb140 ; call rax
0x000000000049ead8 : test eax, eax ; je 0x49eaec ; mov edi, 0x6cb100 ; call rax
0x000000000049eb99 : test eax, eax ; je 0x49ebad ; mov edi, 0x6cb100 ; call rax
0x00000000004a083c : test eax, eax ; je 0x4a084b ; call rax
0x00000000004165d4 : test eax, eax ; jne 0x4165cd ; ret
0x0000000000426127 : test eax, eax ; jne 0x426187 ; xor rax, rax ; ret
0x0000000000442980 : test eax, eax ; jne 0x44297b ; pop rdx ; pop r10 ; ret
0x000000000047414e : test eax, eax ; jne 0x474125 ; ret
0x000000000049e237 : test eax, eax ; jne 0x49e245 ; ret
0x000000000049e252 : test eax, eax ; jne 0x49e265 ; ret
0x000000000049e472 : test eax, eax ; jne 0x49e485 ; ret
0x0000000000471440 : test eax, eax ; js 0x47144d ; pop rbx ; ret
0x000000000047a88b : test eax, eax ; js 0x47a89d ; ret
0x000000000046b202 : test eax, eax ; mov rax, r9 ; jne 0x46b260 ; ret
0x00000000004bde01 : test ebp, edi ; jmp qword ptr [rax]
0x0000000000426050 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004738c2 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000445e0a : test ebx, ebx ; jne 0x445de5 ; jmp 0x445dd7
0x000000000047abae : test ebx, ebx ; jne 0x47abc8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ec60 : test ebx, ebx ; mov rdi, rbx ; jne 0x49ec58 ; pop rbx ; ret
0x000000000041a7af : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000043bdf2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000466fd9 : test ecx, ecx ; jne 0x466f98 ; mov rax, rdx ; ret
0x000000000046b251 : test ecx, ecx ; jne 0x46b207 ; xor eax, eax ; ret
0x000000000044739c : test edi, eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf
0x000000000041e694 : test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421380 : test edi, edi ; je 0x421399 ; mov eax, 0x16 ; ret
0x000000000042016c : test edi, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004239b2 : test edx, edx ; je 0x4239c0 ; bsf eax, edx ; ret
0x00000000004239b2 : test edx, edx ; je 0x4239c1 ; bsf eax, edx ; ret
0x0000000000423a5b : test edx, edx ; je 0x423a77 ; bsf rax, rdx ; ret
0x0000000000423a5b : test edx, edx ; je 0x423a78 ; bsf rax, rdx ; ret
0x000000000046586a : test edx, edx ; je 0x465897 ; bsf rax, rdx ; ret
0x000000000046586a : test edx, edx ; je 0x465898 ; bsf rax, rdx ; ret
0x0000000000413503 : test edx, edx ; jne 0x413514 ; ret
0x0000000000414c7f : test edx, edx ; jne 0x414c75 ; ret
0x0000000000463b8f : test edx, edx ; jne 0x463b85 ; ret
0x000000000046701a : test edx, edx ; jne 0x467015 ; ret
0x00000000004007b5 : test edx, edx ; jns 0x4006ad ; jmp 0x40078a
0x000000000040eddb : test edx, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041d213 : test edx, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000043bde5 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000040dc13 : test esi, esi ; jne 0x40dc51 ; mov eax, 0xba ; syscall
0x0000000000465761 : test esi, esi ; jne 0x465770 ; xor rax, rax ; ret
0x000000000043bdff : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000046b212 : test r11b, r11b ; je 0x46b207 ; ret
0x000000000047414d : test r8, r8 ; jne 0x474126 ; ret
0x00000000004237d2 : test r8d, r8d ; je 0x4237e0 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000046b201 : test r8d, r8d ; mov rax, r9 ; jne 0x46b261 ; ret
0x0000000000466fd8 : test r9d, r9d ; jne 0x466f99 ; mov rax, rdx ; ret
0x00000000004009a5 : test rax, rax ; je 0x40099d ; call rax
0x0000000000417df7 : test rax, rax ; je 0x417e04 ; pop rbx ; ret
0x0000000000417ed4 : test rax, rax ; je 0x417ee0 ; call rax
0x000000000041f0f5 : test rax, rax ; je 0x41f101 ; call rax
0x000000000043ff27 : test rax, rax ; je 0x43ff34 ; ret
0x000000000044dc4d : test rax, rax ; je 0x44dc59 ; call rax
0x000000000044e209 : test rax, rax ; je 0x44e215 ; call rax
0x000000000044f0c8 : test rax, rax ; je 0x44f0d4 ; call rax
0x000000000047b22f : test rax, rax ; je 0x47b249 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a083b : test rax, rax ; je 0x4a084c ; call rax
0x00000000004165d3 : test rax, rax ; jne 0x4165ce ; ret
0x0000000000445e09 : test rbx, rbx ; jne 0x445de6 ; jmp 0x445dd8
0x000000000047abad : test rbx, rbx ; jne 0x47abc9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049ec5f : test rbx, rbx ; mov rdi, rbx ; jne 0x49ec59 ; pop rbx ; ret
0x0000000000423a5a : test rdx, rdx ; je 0x423a78 ; bsf rax, rdx ; ret
0x0000000000423a5a : test rdx, rdx ; je 0x423a79 ; bsf rax, rdx ; ret
0x0000000000465869 : test rdx, rdx ; je 0x465898 ; bsf rax, rdx ; ret
0x0000000000465869 : test rdx, rdx ; je 0x465899 ; bsf rax, rdx ; ret
0x0000000000413502 : test rdx, rdx ; jne 0x413515 ; ret
0x0000000000414c7e : test rdx, rdx ; jne 0x414c76 ; ret
0x0000000000463b8e : test rdx, rdx ; jne 0x463b86 ; ret
0x0000000000465760 : test rsi, rsi ; jne 0x465771 ; xor rax, rax ; ret
0x0000000000413715 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043593a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000432c5a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x0000000000432b90 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x0000000000432959 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000043dd40 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000432a9f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x00000000004328c3 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432926 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000043dcea : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000435926 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043590d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000043debb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043debf : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043dd55 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000043dd59 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000435c43 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000435adc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004358de : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000004358a2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000435da5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043e078 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000043dfdb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000043de7a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000042add1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004055f5 : vpsubsb xmm8, xmm15, xmmword ptr [rbx + 0x29480001] ; ret
0x000000000043dde9 : vzeroupper ; ret
0x00000000004235df : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a07f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004231cf : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422cdb : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000460a89 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000004234eb : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bccc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b4ec : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b8dc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b0fc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004979dd : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000442557 : xchg bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x00000000004964e1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004976e1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496de1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004970e1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004967d9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049a252 : xchg byte ptr [rax + 0x48000000], bh ; add esp, 8 ; ret
0x000000000049a262 : xchg byte ptr [rax + 0x48000000], ch ; add esp, 8 ; ret
0x000000000049a229 : xchg byte ptr [rax + 0x48000000], dh ; add esp, 8 ; ret
0x000000000042abdf : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a3bf : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422f5f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429b9f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042329f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000004235bb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b29b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042368b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a6ff : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429edf : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004296bf : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a89f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042343f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422c2f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000049bb8c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x00000000004a390c : xchg byte ptr [rcx + rdi*8], bl ; call qword ptr [rsi]
0x000000000042302f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000004b96f5 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000042b78c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042afac : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c0bc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000446ec2 : xchg byte ptr [rdi], cl ; retf 0x1489
0x000000000049afa2 : xchg byte ptr [rdx + 1], dh ; add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000042350f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422cff : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004299ff : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422da1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000489750 : xchg byte ptr [rip + 0x394d0000], al ; retf
0x00000000004230ff : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000496a86 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429b35 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a835 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497986 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497086 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496d86 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042a355 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b68d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049677e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bfbd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042336f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049580f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049562f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496007 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494f27 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495e27 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004345cf : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000042ab75 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429e75 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429995 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a695 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b7dd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042affd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422dc5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049b014 : xchg dword ptr [rax - 0x17000000], esp ; retf
0x000000000044577c : xchg dword ptr [rax - 0x39], ecx ; ret
0x00000000004c6c3d : xchg dword ptr [rax], eax ; add al, ah ; jrcxz 0x4c6c43 ; jmp qword ptr [rdx]
0x0000000000470e36 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000443f1d : xchg dword ptr [rax], ebp ; add cl, ch ; ret
0x00000000004b96f8 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000048f7cf : xchg dword ptr [rax], esp ; add al, 0 ; add byte ptr [rbp + 0x39], cl ; retf
0x0000000000445316 : xchg dword ptr [rbp + rcx*4 + 0x24], ecx ; ret
0x00000000004b927f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x0000000000483abd : xchg dword ptr [rbp - 0x76ffffe7], edi ; retf 0x348
0x0000000000476a31 : xchg dword ptr [rbx + rax], edx ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000045e0cd : xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000484aa5 : xchg dword ptr [rbx - 0x76fffffd], eax ; ret 0x348
0x000000000044e815 : xchg dword ptr [rbx - 0x7c000005], ecx ; ret 0x8901
0x00000000004b84ec : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000482adb : xchg dword ptr [rcx - 0x7d000000], ebx ; ret 0x8308
0x0000000000449922 : xchg dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000482b57 : xchg dword ptr [rdi - 0x76ffffd7], ebx ; retf 0x348
0x0000000000487a13 : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x000000000044297e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44297d ; pop rdx ; pop r10 ; ret
0x0000000000469685 : xchg dword ptr [rdx], esi ; add byte ptr es:[rax + 0xf], cl ; retf 0x8948
0x000000000046e598 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000485829 : xchg dword ptr [rip - 0x76ffffff], eax ; ret 0x348
0x00000000004b868b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000494b68 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000447d4b : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00000000004649b6 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004115a2 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000453252 : xchg eax, ebp ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x00000000004b89c9 : xchg eax, ebp ; jge 0x4b89ac ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000041afca : xchg eax, ebp ; ret
0x000000000047be11 : xchg eax, ebp ; ret 0x3840
0x0000000000462e27 : xchg eax, ebp ; ret 0x5389
0x000000000041c369 : xchg eax, ebp ; ret 0x8348
0x000000000046712e : xchg eax, ebp ; ret 0x8b4c
0x000000000048a855 : xchg eax, ebp ; ret 0x941
0x0000000000403977 : xchg eax, ebp ; ret 0x953d
0x0000000000467e1b : xchg eax, ebp ; ret 0xb60f
0x00000000004672d1 : xchg eax, ebp ; ret 0xb8e9
0x000000000046b83f : xchg eax, ebp ; ret 0xc084
0x000000000045b2d5 : xchg eax, ebp ; ret 0xc283
0x0000000000443108 : xchg eax, ebp ; ret 0xc985
0x000000000048916a : xchg eax, ebp ; ret 0xd348
0x000000000046718c : xchg eax, ebp ; ret 0xd721
0x000000000040f8e4 : xchg eax, ebp ; ret 0xdaf7
0x0000000000444321 : xchg eax, ebp ; ret 0xe1eb
0x0000000000466dc0 : xchg eax, ebp ; ret 0xe883
0x000000000049ba1d : xchg eax, ebp ; ret 0xf45
0x0000000000467d8f : xchg eax, ebp ; ret 0xf748
0x00000000004b9282 : xchg eax, ebp ; retf 0x33e6
0x0000000000416a7d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485c39 : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004ba6dc : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004152d2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000046a2c0 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042e650 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004c87c9 : xchg eax, ebx ; cld ; call qword ptr [rax]
0x00000000004bb06c : xchg eax, ebx ; in al, dx ; retf 0xae32
0x000000000043b27c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042fdd2 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004ba583 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4ba55d
0x000000000044fc50 : xchg eax, ebx ; ret 0x3948
0x00000000004507ae : xchg eax, ebx ; ret 0x3949
0x000000000041137f : xchg eax, ebx ; ret 0x840
0x0000000000450c83 : xchg eax, ebx ; ret 0x8548
0x0000000000464424 : xchg eax, ebx ; ret 0xd108
0x0000000000445e91 : xchg eax, ebx ; retf
0x00000000004bde25 : xchg eax, ebx ; std ; jmp qword ptr [rax + 0x20fffd94]
0x0000000000421167 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000042ac81 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004bde21 : xchg eax, ecx ; std ; jmp qword ptr [rax]
0x00000000004293af : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004b8a35 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4b8a03 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004098f5 : xchg eax, edi ; ret
0x00000000004b939d : xchg eax, edi ; retf 0xe152
0x00000000004425bb : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004bde31 : xchg eax, edi ; std ; jmp qword ptr [rax]
0x00000000004ba6db : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004b8b38 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000485c4f : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000004c770d : xchg eax, edx ; add byte ptr [rax], al ; mov al, 0x8e ; jmp qword ptr [rsi]
0x000000000041792a : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004ba3fd : xchg eax, edx ; jae 0x4ba3da ; push rsi ; pop rdx ; je 0x4ba3cf ; ret 0xacfc
0x00000000004b8a3c : xchg eax, edx ; pop rbx ; retf
0x0000000000476961 : xchg eax, edx ; push 0x75400025 ; cmp bl, dh ; ret
0x0000000000474ad9 : xchg eax, edx ; ret 0x8348
0x0000000000475346 : xchg eax, edx ; ret 0xb60f
0x00000000004425be : xchg eax, edx ; ret 0xd029
0x00000000004b84ef : xchg eax, edx ; ret 0xf869
0x00000000004a3994 : xchg eax, edx ; sbb edi, ecx ; jmp qword ptr [rdx]
0x00000000004237d7 : xchg eax, edx ; sub eax, edx ; ret
0x000000000042e950 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000469986 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000434687 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000048c978 : xchg eax, esi ; add eax, 0x394d0000 ; retf
0x00000000004ba7e8 : xchg eax, esi ; jnp 0x4ba837 ; retf 0x99e0
0x000000000049adb9 : xchg eax, esi ; jo 0x49adc3 ; add byte ptr [rax], al ; jmp 0x49ad91
0x000000000042ea0d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a363c : xchg eax, esi ; mov esi, 0xbf96fff8 ; clc ; call qword ptr [rsi]
0x000000000042e96b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004bad8c : xchg eax, esi ; ret 0xcd11
0x000000000042e9bc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004bde2d : xchg eax, esi ; std ; jmp qword ptr [rax + 0x20fffd97]
0x0000000000469f9e : xchg eax, esi ; sub dword ptr [rsi], esp ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000444318 : xchg eax, esp ; imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x0000000000495769 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004baf9f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4baf30 ; ret 0x48f
0x0000000000458b94 : xchg eax, esp ; ret
0x000000000046d907 : xchg eax, esp ; ret 0x1f0f
0x000000000047c45e : xchg eax, esp ; ret 0x3840
0x000000000047bb9c : xchg eax, esp ; ret 0x5438
0x000000000041b4f9 : xchg eax, esp ; ret 0x7ae9
0x0000000000461a65 : xchg eax, esp ; ret 0x7f3c
0x000000000043e1bf : xchg eax, esp ; ret 0x8341
0x0000000000449ed5 : xchg eax, esp ; ret 0x8348
0x000000000043e25f : xchg eax, esp ; ret 0x8444
0x000000000046f561 : xchg eax, esp ; ret 0x8545
0x000000000047aeee : xchg eax, esp ; ret 0x950f
0x0000000000455bf8 : xchg eax, esp ; ret 0x9522
0x00000000004028b8 : xchg eax, esp ; ret 0xb60f
0x000000000046bc9c : xchg eax, esp ; ret 0xc283
0x000000000047bd29 : xchg eax, esp ; ret 0xd021
0x0000000000485b56 : xchg eax, esp ; ret 0xd309
0x000000000047baef : xchg eax, esp ; ret 0xda38
0x000000000040fcfc : xchg eax, esp ; ret 0xdaf7
0x000000000049b9bc : xchg eax, esp ; ret 0xf45
0x0000000000459cb8 : xchg eax, esp ; ret 0xfa80
0x000000000043e1e2 : xchg eax, esp ; ret 0xfe83
0x000000000046adaf : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000004bde29 : xchg eax, esp ; std ; jmp qword ptr [rax]
0x00000000004b89c3 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x00000000004118c1 : xchg eax, r8d ; jmp 0x4117cd
0x00000000004bde05 : xchg ebp, edi ; jmp qword ptr [rax + 0x20fffd88]
0x0000000000418ea4 : xchg edi, esp ; add al, 0 ; add dh, dh ; ret
0x0000000000476127 : xchg edx, eax ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; retf
0x00000000004babb6 : xchg esp, eax ; jb 0x4bac14 ; call 0x4c15d579
0x000000000048dc96 : xchg esp, ebx ; jmp 0x48dc9f
0x000000000043ecbf : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000048aa5e : xchg esp, esi ; jmp 0x48aa67
0x00000000004115a1 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000004c87c8 : xchg rax, rbx ; cld ; call qword ptr [rax]
0x00000000004191f5 : xlatb ; add al, 0 ; add dh, dh ; ret
0x0000000000469f45 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000425e5e : xlatb ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x00000000004b13f9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000048e7ee : xlatb ; add r8b, bpl ; retf 0xf72f
0x000000000042fcac : xlatb ; add r9, r11 ; jmp r9
0x000000000043eac1 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049edd2 : xlatb ; and al, byte ptr [rax] ; jne 0x49edbe ; pop rbx ; ret
0x000000000046ae8f : xlatb ; ja 0x46aebc ; ret
0x00000000004b9563 : xlatb ; jo 0x4b95df ; mov ebp, 0xfb67d10d ; ret
0x0000000000452302 : xlatb ; mov byte ptr [rsi], al ; jne 0x4522e8 ; mov rax, rsi ; ret
0x000000000040dc2d : xlatb ; mov eax, 0xea ; movsxd rdi, ecx ; syscall
0x000000000043eb22 : xlatb ; mov eax, esi ; syscall
0x000000000043eb32 : xlatb ; mov eax, r8d ; syscall
0x00000000004b8970 : xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000421529 : xlatb ; ret
0x00000000004baa06 : xlatb ; ret 0x4e27
0x0000000000465b47 : xlatb ; ret 0x94c
0x0000000000425f4f : xlatb ; ret 0xc085
0x0000000000421520 : xlatb ; ret 0xc148
0x00000000004239d4 : xlatb ; ret 0xf66
0x0000000000472825 : xlatb ; ret 0xfffc
0x00000000004215bd : xlatb ; retf
0x00000000004206e0 : xlatb ; retf 0x2a
0x00000000004b89c4 : xlatb ; retf 0xa1eb
0x0000000000465c24 : xlatb ; retf 0xc148
0x00000000004b98f2 : xlatb ; retf 0xdf7f
0x0000000000421780 : xlatb ; retf 0xead3
0x000000000042ce81 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000043bda6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004229e6 : xlatb ; sal bh, 1 ; ret 0x8000
0x00000000004228a6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000422766 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000422626 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004224e6 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000004223a6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000422266 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000422126 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000421fe6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000421ea6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000421d66 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000421c26 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000421ae6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000004219a6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000421866 : xlatb ; sal bh, 1 ; ret 0xfffe
0x000000000043bda2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000465ae5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465af6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004bdff9 : xlatb ; std ; call rsp
0x0000000000469686 : xor ah, byte ptr [rsi] ; add byte ptr [rax + 0xf], cl ; retf 0x8948
0x00000000004b84ea : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000469456 : xor al, 0x26 ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf091db0
0x00000000004ba586 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x000000000040557d : xor al, 0x89 ; ret 0x5525
0x00000000004c7114 : xor al, 0x8c ; add byte ptr [rax], al ; pop rax ; cdq ; std ; call rcx
0x0000000000462287 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048cee6 : xor al, 0xc5 ; enter 0x4b7f, 0 ; call 0x4791b8
0x00000000004b96ca : xor al, 0xd8 ; ret
0x0000000000445419 : xor al, byte ptr [r11] ; add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x000000000044541a : xor al, byte ptr [rbx] ; add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x000000000048b180 : xor al, ch ; retf 0xf751
0x00000000004a3760 : xor bh, ah ; clc ; call qword ptr [rax]
0x00000000004a37b0 : xor bh, bl ; clc ; push rax ; loopne 0x4a37b6 ; call rax
0x00000000004261ac : xor bl, al ; nop ; xor rax, rax ; ret
0x000000000042606d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000004268a1 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000049ea14 : xor byte ptr [rax + 0x39], cl ; ret
0x0000000000421431 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000467c6d : xor byte ptr [rax - 0x39], cl ; ret
0x0000000000449cbb : xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000004238df : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000046ddb3 : xor byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000464af2 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004268a2 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000410d4d : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004c15d5 : xor byte ptr [rax], al ; add byte ptr [rax - 0xd], bh ; cmc ; call qword ptr [rdx]
0x000000000040ea52 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040ea0a : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000043e59c : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000464a3a : xor byte ptr [rax], al ; je 0x464a44 ; ret
0x00000000004a3ce0 : xor byte ptr [rax], dl ; stc ; jmp qword ptr [rax + 0x10fff90f]
0x0000000000415990 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004035b3 : xor byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x000000000049fc5b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000000000049e56e : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004c0e47 : xor byte ptr [rbx + 0xaea0206], al ; ret
0x0000000000426c9b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000415cde : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000004575f7 : xor byte ptr [rbx], cl ; jmp rax
0x0000000000443f19 : xor byte ptr [rcx + 0x2887a005], cl ; add cl, ch ; ret
0x000000000041fe01 : xor byte ptr [rcx + 0x39], cl ; retf 0x850f
0x0000000000420a48 : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041accc : xor byte ptr [rcx + rcx*4 - 0x31], cl ; mov eax, r8d ; syscall
0x0000000000458bc7 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004bdde8 : xor byte ptr [rcx - 3], bh ; call qword ptr [rax]
0x00000000004a3434 : xor byte ptr [rcx - 8], ah ; call rax
0x00000000004b89ce : xor byte ptr [rcx], ah ; retf
0x0000000000410d4e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040f9d5 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000047054f : xor byte ptr [rdi + rcx + 0x45], cl ; retf 0x3980
0x000000000041d409 : xor byte ptr [rdi], ah ; add byte ptr [rcx + r9*4 + 0xc], cl ; and al, 0xe8 ; retf 0xffa1
0x000000000046aa04 : xor byte ptr [rdi], cl ; mov bh, 0x4e ; adc byte ptr [rax + 1], cl ; retf 0x8348
0x0000000000463c50 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000458b92 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004c1eef : xor byte ptr [rdx], al ; int 0xa
0x00000000004c172f : xor byte ptr [rdx], al ; ret
0x00000000004a3cf8 : xor byte ptr [rip + 0x14a0fff9], dl ; stc ; jmp qword ptr [rax]
0x000000000042e6ff : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000465aac : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042606e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000040e0da : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000004ba6de : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a3454 : xor byte ptr [rsi - 8], ch ; call rax
0x00000000004b89bf : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x4b896f
0x00000000004befa0 : xor ch, bh ; hlt ; call qword ptr [rdx]
0x000000000049e21a : xor ch, bl ; and al, byte ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; ret
0x00000000004a3794 : xor cl, ah ; clc ; call qword ptr [rax]
0x000000000046612b : xor cl, byte ptr [rax + 0x39] ; ret
0x0000000000412cf5 : xor cl, byte ptr [rax + 0x63] ; jg 0x412d71 ; xor eax, eax ; syscall
0x0000000000473266 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000047d6af : xor cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000440ff2 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000476f8e : xor dl, dh ; jmp r11
0x00000000004770a0 : xor dl, dh ; ret
0x000000000040dc16 : xor dword ptr [rax + 0xba], edi ; syscall
0x0000000000420d85 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000043f467 : xor dword ptr [rax + rdx*2], 0 ; ret
0x000000000045a51d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x00000000004b9976 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000041df7a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000441493 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000469dca : xor eax, 0x1480026 ; retf
0x000000000049e2e9 : xor eax, 0x22ea62 ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000049e191 : xor eax, 0x22ebba ; mov qword ptr [rsi + 0x28], rax ; ret
0x000000000048e699 : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000045a86e : xor eax, 0xf4c004b ; ret 0xf4c
0x000000000040ea4f : xor eax, dword ptr [0x30] ; call rax
0x000000000049cfdd : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000478857 : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047892f : xor eax, eax ; add rsp, 0x68 ; ret
0x000000000047497a : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000451d29 : xor eax, eax ; add rsp, 8 ; ret
0x000000000047810a : xor eax, eax ; call 0x473d28
0x00000000004652d7 : xor eax, eax ; call rbx
0x000000000046ae8b : xor eax, eax ; cmp rdi, rdx ; ja 0x46aec0 ; ret
0x0000000000442957 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x0000000000442b55 : xor eax, eax ; leave ; ret
0x000000000046bcd8 : xor eax, eax ; mov edx, 1 ; jmp 0x46bcb4
0x0000000000463219 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004409cb : xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000442acf : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041eccd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b638 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000040ec5d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042396c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041250c : xor eax, eax ; pop rbx ; ret
0x0000000000401590 : xor eax, eax ; ret
0x000000000042e61e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000412cfa : xor eax, eax ; syscall
0x000000000043e4f8 : xor eax, eax ; test dh, 0xf0 ; je 0x43e4cb ; movzx eax, dl ; pop rbx ; ret
0x000000000046b210 : xor eax, eax ; test r11b, r11b ; je 0x46b209 ; ret
0x0000000000413500 : xor eax, eax ; test rdx, rdx ; jne 0x413517 ; ret
0x00000000004c30b1 : xor eax, edi ; jmp rsp
0x00000000004173f9 : xor ebp, dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000467ba3 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000474218 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004402a9 : xor ebx, esi ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000040e164 : xor ecx, dword ptr [rax + 0x29] ; retf 0xc148
0x000000000046aa1d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000448141 : xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000425a29 : xor ecx, dword ptr [rax - 0x77] ; retf 0x8948
0x00000000004665b5 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045612a : xor ecx, dword ptr [rbx] ; jmp rax
0x00000000004a360c : xor ecx, eax ; clc ; push qword ptr [rcx + 0x31fff8c1] ; ret 0xfff8
0x000000000044f202 : xor ecx, eax ; ret 0x4809
0x0000000000473d0e : xor edi, edi ; call 0x43ff84
0x0000000000400cd0 : xor edi, edi ; mov eax, edx ; syscall
0x000000000040ea07 : xor edx, dword ptr [0x30] ; call rdx
0x00000000004a3614 : xor edx, eax ; clc ; inc ecx ; ret 0xfff8
0x0000000000444b83 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000044431c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44430c
0x000000000045a573 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x000000000047abd9 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046aa3e : xor edx, edx ; jmp 0x46aa08
0x0000000000473f84 : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004155f9 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000004179dc : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004882d3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000440e61 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000043ec7c : xor esi, esi ; mov eax, 2 ; syscall
0x0000000000403869 : xor esi, esi ; mov eax, ecx ; syscall
0x000000000044cbde : xor esi, esi ; mov edi, 0x4a61a8 ; mov eax, ecx ; syscall
0x00000000004016a5 : xor esi, esi ; mov edi, 1 ; call rax
0x000000000047ae69 : xor esi, esi ; mov edi, dword ptr [rip + 0x251b53] ; jmp rax
0x00000000004400b1 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000440e63 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000440e88 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440ead : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440ed1 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440ef1 : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004652d6 : xor r8d, r8d ; call rbx
0x000000000040ea4e : xor rax, qword ptr [0x30] ; call rax
0x000000000040ea4d : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000004260ef : xor rax, rax ; ret
0x000000000040ea06 : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040ea05 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 11492
